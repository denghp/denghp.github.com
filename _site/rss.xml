<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
    <channel>
        <title><![CDATA[熊猫家族]]></title>
        <link >http://demi-panda.com</link>
        <description><![CDATA[博客,IT技术,研发实践,互联网,资讯,编程语言,搜索引擎,Lucene,Solr,Java,生活,旅游,吃货,熊猫吃货,微生活,健康,美食 ]]></description>
        <managingEditor>demi-panda@126.com (demi-panda.com)</managingEditor>
        <lastBuildDate>Wed, 30 Jan 2013 15:35:45 +0800</lastBuildDate>
        <language>CN</language>
        <generator> http://demi-panda.com</generator>
        
        <item>
            <title><![CDATA[Solr 4.1 特性-存储字段压缩 ]]></title>
            <pubDate>Thu, 31 Jan 2013 00:27:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;尽管Lucene和Solr在4.0版本包含大量的新特性以及性能的提升，今天来看看Solr 4.1版本的变化。当我们使用更多的field存储，索引的大小问题是我们考虑优化的因素，4.1版本的这些变化将被存储领域的压缩，以减少索引大小。让我们来看看，看看它是如何工作的。&lt;/p&gt;

&lt;h3&gt;补充些理论&lt;/h3&gt;

&lt;p&gt;如果我们的索引中包含的许多存储领域，相比其他索引中的信息时，可以消耗大部分空间。如何知道存储领域采取多大的空间？它很容易 - 只要去握着你的索引的目录和检查。FDT扩展名的文件需要多大的空间。尽管事实上，存储领域不直接影响搜索性能，I / O子系统和它的缓存可以被强制工作更难，因为大量的磁盘上的数据。正因为如此，你的查询执行长，您可能需要更多的时间来索引你的数据。&lt;/p&gt;

&lt;p&gt;在Lucene4.1版本中，存储字段将引入&lt;a href=&quot;http://code.google.com/p/lz4/&quot; alt=&quot;LZ4算法&quot; target=&quot;_bank&quot;&gt;LZ4算法&lt;/a&gt;，当我们使用高数目的存储字段,应降低的大小的指数，但也不宜CPU的要求来压缩和解压。&lt;/p&gt;

&lt;h3&gt;Test Data&lt;/h3&gt;

&lt;p&gt;对于所讨论的功能测试中，我们已经使用了波兰语维基百科的文章的数据，从2012年11月10号（&lt;a href=&quot;http://dumps.wikimedia.org/plwiki/20121110/plwiki-20121110-pages-articles.xml.bz2&quot; alt=&quot;维基百科数据&quot; target=&quot;_bank&quot;&gt;http://dumps.wikimedia.org/plwiki/20121110/plwiki-20121110-pages-articles.xml.bz2&lt;/a&gt;）。解压缩后的XML文件是约4.7GB磁盘上的。&lt;/p&gt;

&lt;h3&gt;Index structure&lt;/h3&gt;

&lt;p&gt;我们已经使用了下面的索引结构，索引上面的数据：&lt;/p&gt;

&lt;pre id=&quot;xml&quot;&gt;
&amp;lt;field name=&quot;id&quot; type=&quot;string&quot;  indexed=&quot;true&quot; stored=&quot;true&quot; required=&quot;true&quot;/&amp;gt;
&amp;lt;field name=&quot;title&quot; type=&quot;text&quot; indexed=&quot;true&quot; stored=&quot;true&quot;/&amp;gt;
&amp;lt;field name=&quot;revision&quot; type=&quot;int&quot; indexed=&quot;true&quot; stored=&quot;true&quot;/&amp;gt;
&amp;lt;field name=&quot;user&quot; type=&quot;string&quot; indexed=&quot;true&quot; stored=&quot;true&quot;/&amp;gt;
&amp;lt;field name=&quot;userId&quot; type=&quot;int&quot; indexed=&quot;true&quot; stored=&quot;true&quot;/&amp;gt;
&amp;lt;field name=&quot;text&quot; type=&quot;text&quot; indexed=&quot;true&quot; stored=&quot;true&quot;/&amp;gt;
&amp;lt;field name=&quot;timestamp&quot; type=&quot;date&quot; indexed=&quot;true&quot; stored=&quot;true&quot;/&amp;gt;
&amp;lt;field name=&quot;_version_&quot; type=&quot;long&quot; indexed=&quot;true&quot; stored=&quot;true&quot;/&amp;gt;
&lt;/pre&gt;


&lt;h3&gt;DIH configuration&lt;/h3&gt;

&lt;p&gt;我们用下面的DIH配置，以指数维基百科的数据：&lt;/p&gt;

&lt;pre id=&quot;xml&quot;&gt;
&amp;lt;dataConfig&amp;gt;
&amp;lt;dataSource type=&quot;FileDataSource&quot; encoding=&quot;UTF-8&quot; /&amp;gt;
&amp;lt;document&amp;gt;
&amp;lt;entity name=&quot;page&quot; processor=&quot;XPathEntityProcessor&quot; stream=&quot;true&quot; forEach=&quot;/mediawiki/page/&quot; url=&quot;/home/data/wikipedia/plwiki-20121110-pages-articles.xml&quot; transformer=&quot;RegexTransformer,DateFormatTransformer&quot;&amp;gt;
&amp;lt;field column=&quot;id&quot; xpath=&quot;/mediawiki/page/id&quot; /&amp;gt;
&amp;lt;field column=&quot;title&quot; xpath=&quot;/mediawiki/page/title&quot; /&amp;gt;
&amp;lt;field column=&quot;revision&quot; xpath=&quot;/mediawiki/page/revision/id&quot; /&amp;gt;
&amp;lt;field column=&quot;user&quot; xpath=&quot;/mediawiki/page/revision/contributor/username&quot; /&amp;gt;
&amp;lt;field column=&quot;userId&quot; xpath=&quot;/mediawiki/page/revision/contributor/id&quot; /&amp;gt;
&amp;lt;field column=&quot;text&quot; xpath=&quot;/mediawiki/page/revision/text&quot; /&amp;gt;
&amp;lt;field column=&quot;timestamp&quot; xpath=&quot;/mediawiki/page/revision/timestamp&quot; dateTimeFormat=&quot;yyyy-MM-dd'T'hh:mm:ss'Z'&quot; /&amp;gt;
&amp;lt;field column=&quot;$skipDoc&quot; regex=&quot;^#REDIRECT .*&quot; replaceWith=&quot;true&quot; sourceColName=&quot;text&quot;/&amp;gt;
&amp;lt;/entity&amp;gt;
&amp;lt;/document&amp;gt;
&amp;lt;/dataConfig&amp;gt;
&lt;/pre&gt;


&lt;h3&gt;Indexing time&lt;/h3&gt;

&lt;p&gt;在这两种情况下，索引的时间是非常类似的，对于相同量的文件（索引文件后有1.301.394）。在&lt;strong&gt;Solr的4.0索引了14分33秒&lt;/strong&gt;。在&lt;strong&gt;Solr的4.1索引的情况下，花了14分43秒&lt;/strong&gt;。正如你可以看到Solr的4.1稍微慢一些，但在我的笔记本电脑，因为我做了测试，我们可以假设索引的性能是非常相似的。&lt;/p&gt;

&lt;h3&gt;Index size&lt;/h3&gt;

&lt;p&gt;在Solr的4.0的情况下创建的索引与维基百科的数据索引大小约为&lt;strong&gt;5.1GB - 5.464.809.863bytes&lt;/strong&gt;。在Solr的4.1的情况下，索引大小&lt;strong&gt;3.24GB - 3.480.457.399bytes&lt;/strong&gt;。因此，当比较指数由Solr的4.0创建一个Solr的4.1，我们得到了&lt;strong&gt;约35％&lt;/strong&gt;更小的索引。&lt;/p&gt;

&lt;h3&gt;总结&lt;/h3&gt;

&lt;p&gt;你可以清楚地看到，压缩存储领域的增益是相当大的。尽管事实是，我们需要额外的CPU周期压缩处理，我们受益于较少的I/O子系统的压力，我们可以肯定的收益将大于损失一些CPU周期。
Lucene4.1及更高版本的压缩存储领域默认打开情况下。但是，现在如果你想关闭该行为，你需要实现自己的编解码器 - 一个不使用压缩。但是你做到这一点，再次显示了强大的，灵活的索引是不需要修改Lucene的代码。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2013/01/31/solr-4-1-stored-fields-compression/index.html</link>
            <guid>http://demi-panda.com/2013/01/31/solr-4-1-stored-fields-compression/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[在节假日,8大性感的解除压力的方法 ]]></title>
            <pubDate>Wed, 30 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;   　　假期可以是一个非常紧张的时间。购物，烹饪，旅游，走亲戚，装饰，主机托管，扮演圣诞老人，我应该去吗？所有，同时试图保持节日精神,这是一个很大的要求。因此，为什么不利用自己的时间一点点性感解除压力？以下是节假日期间-8大性感解除压力的方法。&lt;/p&gt;

&lt;h3&gt;性感的洗澡时间&lt;/h3&gt;

&lt;p&gt;　　&lt;a href=&quot;http://demi-panda.com/media/pub/life/healthy/sex-happy-300x168.jpg&quot; alt=&quot;8大性感解压方式&quot; rel=&quot;prettyPhoto&quot;&gt;&lt;img src=&quot;http://demi-panda.com/media/pub/life/healthy/sex-happy-300x168.jpg&quot; width=&quot;300&quot; class=&quot;img-right&quot; alt=&quot;8大性感解压方式&quot; /&gt;&lt;/a&gt;在这一周中花一个小时享受一个性感的浴。点蜡烛，烧香，播放舒缓的古典音乐（或任何让你心情欢喜的形式！）。沐浴与豪华海景盐，躺下来，放松身心。让你的头脑漂走，当你细细品味的时刻，离开你的身体感到压力。如果你喜欢薰衣草或者依兰的精油，也可以擦太阳穴，以帮助您进一步放松和解除压力。之后，采取快速凉水澡，用海盐磨砂身体唤醒冷静，冷静再通电。&lt;/p&gt;

&lt;h3&gt;吃巧克力&lt;/h3&gt;

&lt;p&gt;　　把巧克力放在嘴里，闭上眼睛细细的品着它的味道。心烦的事情真的可以抛到脑后不去想。其实巧克力本身具有抑制忧郁情绪，能唤醒人的身体器官，提高精神兴奋点，使人产生愉快感的作用，尤其是可可含量更多的黑巧克力，它含有丰富的苯乙胺，这种物质对人的情绪调节发挥着重要的作用。巧克力还含有丰富的镁元素（每100克巧克力含410微克镁），而镁具有安神和抗忧郁的作用。&lt;/p&gt;

&lt;h3&gt;槲寄生下亲吻&lt;/h3&gt;

&lt;p&gt;　　利用&lt;a href=&quot;http://www.tuanpower.com/forum.php?mod=viewthread&amp;tid=29996&quot; alt=&quot;槲寄生&quot; target=&quot;_bank&quot;&gt;槲寄生&lt;/a&gt;这个节日和抓住你的爱人（或者接近！）一个性感的吻。接吻能提高催产素和多巴胺的水平，减少压力，使身体的应激激素皮质醇融化。&lt;/p&gt;

&lt;h3&gt;阅读浪漫小说&lt;/h3&gt;

&lt;p&gt;　　即使你不是为爱情小说，有很多可以说想逃到一个虚构的幻想。浪漫小说可以带你走到另一个地方，让你生活的另一个幻想的生活，所以你可以忘记你的烦恼一阵子。它也可以让你滚出去你的关键，分析性思维；没有必要去思考你所阅读的东西，它是轻佻的享受。更不用说生活，可以像心灵的前戏来让你的心情为你沉迷于热性的情况下。&lt;/p&gt;

&lt;h3&gt;跳舞，跳舞，跳舞！&lt;/h3&gt;

&lt;p&gt;　　舞蹈有许多健康的好处以及让你感觉很棒。延缓老化过程中帮助你保持年轻，爆炸距离的热量使你身材苗条，建立肌肉，和伟大的肺和心脏。舞蹈也提升你的情绪，提高内啡肽水平，这可以让你减轻压力和抑郁。不仅如此，但如果你学肚皮舞，脱衣舞的艺术，或跳舞，也很性感，有助于提振信心和自尊。&lt;/p&gt;

&lt;h3&gt;手淫&lt;/h3&gt;

&lt;p&gt;　　手淫是伟大的思想，而不只是身体。它可以缓解压力，是一个自然睡眠的镇静和释放心情感觉好刺激内啡肽来帮助抵抗抑郁。性学专家说自己爱的是授权的同时促进活力和自尊，所以它也让你成为一个更好的人，因为你可以传达给你的伴侣，你喜欢什么。&lt;/p&gt;

&lt;p&gt;　　不仅如此，但手淫对身体是非常有益的，有许多健康的好处。它提高了免疫系统的功能，降低衰老及更年期的症状，并可能有助于增加骨量减少的中老年妇女骨质疏松症的风险。它也可以缓解经痛，偏头痛和慢性背部疼痛。最后，作为一个额外的好处，手淫（连同凯格尔运动）有助于建立一个更强大的男性和女性的控制性高潮。&lt;/p&gt;

&lt;h3&gt;色情按摩&lt;/h3&gt;

&lt;p&gt;　　色情按摩是一个伟大的方式来重新与你的爱人放松心情，减轻压力。它唤醒感官和激活全身愈合，促进血液循环，同时也让你的皮肤健康的光泽，以及释放毒素。另外，它是一个伟大的方式来创建让你和爱人的亲密关系，和前戏是一个非常性感的。你既可以权衡一起给予和接受按摩。所以，拿起一个感性的按摩油（或橄榄油和精华油，使自己的）和做一些感性愈合。&lt;/p&gt;

&lt;h3&gt;性爱解压&lt;/h3&gt;

&lt;p&gt;　　是的，SEX！这是一个最愉快的方式来缓解压力，喜欢自慰，也有许多健康益处。研究显示，性爱可以帮助缓解紧张和焦虑，同时增强你的心情。它降低了水平的应激激素皮质醇，以及降低血压和释放那些伟大的“感觉良好”的内啡呔，我们都爱。&lt;/p&gt;

&lt;p&gt;　　不仅如此，但你感觉越好（少强调你是）你越常想做爱，所以这是一个动态循环，只会变得更好。而且，虽然它是伟大的为你的情绪和思想，性对你的身体是可怕的因为它燃烧卡路里，就像任何其他的体育活动，是一个很好的锻炼。最后，性爱帮助你睡得更好，更深入地振兴睡眠，这可能就是你所需要的一年中的这个时候。&lt;/p&gt;

&lt;h3&gt;小贴士&lt;/h3&gt;

&lt;p&gt;　　所以请记住，在这里和那里需要一个小时，在这些众多的精彩和性感的方式解除压力的假期！&lt;/p&gt;

&lt;p&gt;　　&lt;a href=&quot;http://www.tuanpower.com/forum.php?mod=viewthread&amp;tid=29996&quot; alt=&quot;槲寄生&quot; target=&quot;_bank&quot;&gt;槲寄生&lt;/a&gt;传说有一天，波尔德梦到他将死亡。他的母亲——美和爱的女神费瑞卡(Frigga)，对这个梦感到很忧心，并且告诉波尔【宗教】被英国德鲁伊视为圣物。圣诞节期间，站在槲寄生下的人不能拒绝亲吻；互为敌人的人在槲寄生下相遇要互相拥抱并停战一天。传说圣诞节那天站在槲寄生下的女孩可以得到幸福&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2013/01/30/top-8-sexy-ways-to-de-stress-during-the-holidays/index.html</link>
            <guid>http://demi-panda.com/2013/01/30/top-8-sexy-ways-to-de-stress-during-the-holidays/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Ubuntu 常用的编程开发环境IDEs ]]></title>
            <pubDate>Tue, 29 Jan 2013 00:30:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt; 　　IDE集成开发环境提供了一个先进的开发环境，很多功能和自动化的各种无聊的任务。虽然，在大多数情况下，一个功能强大的文本编辑器VIM或Emacs等将是更好的选择，但有时这是很好的有IDE，特别是如果你正在处理的非常复杂的东西。如没有Eclipse的Android开发将是多痛苦的。&lt;/p&gt;

&lt;p&gt; 　　SO，这里是一些常用和最强大的IDE列表可能对您有用。其中有些是沉重的，而有些是轻量级的IDE。&lt;/p&gt;

&lt;h3&gt;IDEs for Java/Android Programmers&lt;/h3&gt;

&lt;h3&gt;Eclipse&lt;/h3&gt;

&lt;p&gt;Eclipse是一个伟大的IDE，有很多功能，并提供了一个通用的平台。所以，如果你是一个Java程序员，或者希望为Android开发本地应用程序（使用Java，因为有其他的方法来为Android平台开发应用程序） - Eclipse是最好的选择。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/java/eclipse.jpg&quot; alt=&quot;eclipse&quot; rel=&quot;prettyPhoto[20130129003000]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/java/eclipse.jpg&quot; width=&quot;550px&quot;  alt=&quot;eclipse&quot;  /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;Install Eclipse&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
sudo apt-get install eclipse-platform
#Install JDT for Java Development
sudo apt-get install eclipse-jdt
&lt;/pre&gt;


&lt;h3&gt;Netbeans&lt;/h3&gt;

&lt;p&gt;NetBeans是另一个伟大的IDE特定功能，为Java/ C/ C++/ PHP开发人员，这是一个很好的IDE。它支持各种语言和大量的免费插件是可扩展的默认功能。这是快速，简便，适合初学Java程序员，学习曲线并不陡峭的像Eclipse。
&lt;a href=&quot;http://demi-panda.com/media/pub/java/netbeans-ide-550x270.jpg&quot; alt=&quot;netbeans&quot; rel=&quot;prettyPhoto[20130129003000]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/java/netbeans-ide-550x270.jpg&quot; width=&quot;550px&quot;  alt=&quot;netbeans&quot;  /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;Install Netbeans(version 7.x)&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
sudo apt-get install netbeans
&lt;/pre&gt;


&lt;h3&gt;IDEs for C/C++ programmers&lt;/h3&gt;

&lt;p&gt;尽管Eclipse是良好的FR C / C ++，但KDevelop是更好的C / C ++。它的重量轻（到Eclipse），速度快，它提供了很多很酷的功能，C / C++开发人员。它具有多种功能强大的工具，它是高度可定制的。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/java/kdevelop-IDE-550x331.png&quot; alt=&quot;kdevelop&quot; rel=&quot;prettyPhoto[20130129003000]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/java/kdevelop-IDE-550x331.png&quot; width=&quot;550px&quot;  alt=&quot;kdevelop&quot;  /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;Install KDevelop IDE&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
sudo apt-get install kdevelop
&lt;/pre&gt;


&lt;p&gt;Netbeans和Eclipse，也是不错的C / C ++，你只需要安装所需的插件。&lt;/p&gt;

&lt;h3&gt;IDEs for Web Developers&lt;/h3&gt;

&lt;p&gt;如果你是一名Web开发人员，那么你可以考虑使用Geany。
&lt;a href=&quot;http://demi-panda.com/media/pub/java/geany-ide-snapshot-550x383.jpg&quot; alt=&quot;kdevelop&quot; rel=&quot;prettyPhoto[20130129003000]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/java/geany-ide-snapshot-550x383.jpg&quot; width=&quot;550px&quot;  alt=&quot;kdevelop&quot;  /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;Install Geany&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
sudo apt-get install geany
&lt;/pre&gt;


&lt;h3&gt;For HTML/CSS/JAVASCRIPT&lt;/h3&gt;

&lt;p&gt;Eclipse也有插件的Web编程，但如果你想要一个全功能的HTML / CSS / JS的专用IDE然后尝试Bluefish Editor。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/java/bluefish-editor-snapshot-550x442.png&quot; alt=&quot;bluefish&quot; rel=&quot;prettyPhoto[20130129003000]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/java/bluefish-editor-snapshot-550x442.png&quot; width=&quot;550px&quot;  alt=&quot;bluefish&quot;  /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;Install Bluefish Editor&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
sudo apt-get install bluefish
&lt;/pre&gt;


&lt;h3&gt;For PHP&lt;/h3&gt;

&lt;p&gt;使用KDevelop或NetBeans，他们很好地支持PHP。在KDevelop，如果你想使用PHP，然后再安装PHP插件&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
sudo apt-get install kdevelop-php
&lt;/pre&gt;


&lt;h3&gt;For Python&lt;/h3&gt;

&lt;p&gt;IDLE – is a good IDE for python developers.&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
sudo apt-get install idle-python2.7
#If you want to use Python 3.2 then
sudo apt-get install idle-python3.2
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2013/01/29/programming-ides-for-ubuntu/index.html</link>
            <guid>http://demi-panda.com/2013/01/29/programming-ides-for-ubuntu/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[2012年Firefox TOP10 附加组件 ]]></title>
            <pubDate>Mon, 28 Jan 2013 08:30:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　Mozilla Firefox浏览器默认情况下，有一些很酷的开发工具（暂存，样式编辑器，调试器，响应“设计”视图，检查（3D view），更多），但你可以进一步扩展他们一些伟大的add-ons/extensions这里列出的。&lt;/p&gt;

&lt;h3&gt;TOP 1 Firebug&lt;/h3&gt;

&lt;p&gt;Firebug中有很多有用的功能（编辑，调试，监控在现场模式下，你的代码），使Web开发更简单。这是一个Web开发人员必须的组件。
&lt;a href=&quot;http://demi-panda.com/media/pub/web/firebug.gif&quot; rel=&quot;prettyPhoto[20130128083000]&quot; alt=&quot;firebug&quot; &gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/web/firebug.gif&quot; width=&quot;330px&quot;  alt=&quot;firebug&quot; class=&quot;img-center&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/firebug/&quot; alt=&quot;Download Firebug&quot; target=&quot;_bank&quot;&gt;Download Firebug&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;TOP 2 Rainbow Color Tools&lt;/h3&gt;

&lt;p&gt;它提供了一系列的Web开发工具的颜色 - 易于使用拾色器，颜色库，检查员，分析仪（分析一个网站的配色方案）等。
&lt;a href=&quot;http://demi-panda.com/media/pub/web/Color-Tools.png&quot; alt=&quot;Color-Tools&quot; rel=&quot;prettyPhoto[20130128083000]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/web/Color-Tools.png&quot; width=&quot;330px&quot;  alt=&quot;Color-Tools&quot; class=&quot;img-center&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot; alt=&quot;Download Rainbow Color Tools&quot; target=&quot;_bank&quot;&gt;
Download Rainbow Color Tools&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;TOP 3 Wappalyzer&lt;/h3&gt;

&lt;p&gt;它会告诉你使用的软件（库，框架，服务器等）的网站。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/wappalyzer/&quot; alt=&quot;Wappalyzer&quot; target=&quot;_bank&quot;&gt;Download Wappalyzer&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;TOP 4 ShowIP&lt;/h3&gt;

&lt;p&gt;在状态栏中显示的网站的IP地址，另外，您还可以查询域名注册，主机名，Netcraft公司等。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/showip/&quot; alt=&quot;ShowIP&quot; target=&quot;_bank&quot;&gt;Download ShowIP&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;TOP 5 fontinfo&lt;/h3&gt;

&lt;p&gt;这是很好的探索在网站上使用的字体（面板的字体或在右键菜单显示字体部分）&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/fontinfo/&quot; alt=&quot;Download fontinfo&quot; target=&quot;_bank&quot;&gt;Download fontinfo&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;TOP 6 Web Developer&lt;/h3&gt;

&lt;p&gt;add some cool web development tools.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/web-developer/&quot; alt=&quot;Web Developer&quot; target=&quot;_bank&quot; &gt;Download Web Developer&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;TOP 7 User Agent Switcher&lt;/h3&gt;

&lt;p&gt;使用这个扩展，你可以很容易地切换浏览器的用户代理。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/user-agent-switcher/&quot; alt=&quot;Download User Agent Switcher&quot; target=&quot;_bank&quot; &gt;Download User Agent Switcher&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;TOP 8  Greasmonkey&lt;/h3&gt;

&lt;p&gt;自定义的网页（它的行为或显示内容），使用少量的JavaScript脚本。用户脚本的管理组件。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/greasemonkey/&quot; target=&quot;_bank&quot; alt=&quot;Download Greasmonkey&quot;&gt;Download Greasmonkey&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;TOP 9 Modify Headers&lt;/h3&gt;

&lt;p&gt;修改发送到服务器的HTTP请求头。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/modify-headers/&quot; alt=&quot;Download Modify Headers&quot; target=&quot;_bank&quot;&gt;Download Modify Headers&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;TOP 10 FireFTP&lt;/h3&gt;

&lt;p&gt;It’s a cross-platform FTP/SFTP client for Mozilla Firefox.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/fireftp/&quot; alt=&quot;Download FireFTP&quot; target=&quot;_bank&quot;&gt;Download FireFTP&lt;/a&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2013/01/28/2012-firefox-top10-add-ons/index.html</link>
            <guid>http://demi-panda.com/2013/01/28/2012-firefox-top10-add-ons/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Ubuntu/Linux 配置VPN连接 ]]></title>
            <pubDate>Mon, 28 Jan 2013 01:30:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　互联网上对于那些想需要更高的安全性，使用VPN (Virtual Private Network)连接是非常不错的选择，同样可以解决在国内无法访问国外被墙网站的问题。所有的网络流量将被加密。所以，即使你正在浏览一个非SSL的网站 - 您的信息（如登录信息）也是安全的VPN。&lt;/p&gt;

&lt;p&gt;　　即使你只是一个网络浏览者或下载，你可以尝试VPN来挽救自己从常见的间谍（互联网服务供应商和电子政务），它也将允许你绕过地域限制（这意味着如果您使用的是美国基于VPN，那么你就可以浏览CBS和Hulu的视频在世界任何地方）。&lt;/p&gt;

&lt;h3&gt;选择哪个VPN供应商？&lt;/h3&gt;

&lt;p&gt;国内有很多VPN供应商，国外就不用说啦，个人上网建议使用&lt;a href=&quot;http://shayunet.info/170850&quot; alt=&quot;鲨鱼加速器免费VPN&quot; target=&quot;_bank&quot;&gt;鲨鱼加速器免费VPN&lt;/a&gt;, &lt;a href=&quot;http://gjsq.me/659897&quot; alt=&quot;GreenVPN网络加速器&quot; target=&quot;_bank&quot;&gt;GreenVPN网络加速器&lt;/a&gt;, &lt;a href=&quot;http://a.wy002.info/in.html?userid=195596&quot; target=&quot;_bank&quot; alt=&quot;51VPN&quot; &gt;51VPN&lt;/a&gt; 这些供应商注册用户都可以提用免费的使用，即使收费也只有十几元一个月，个人感觉还可以吧。&lt;/p&gt;

&lt;h3&gt;Ubuntu/Linux Mint设置VPN(PPTP)&lt;/h3&gt;

&lt;div class=&quot;module method-related-notes&quot;&gt;
   &lt;div class=&quot;content-item tab-content current method-tab-content&quot;&gt;
     &lt;ul&gt;&lt;li class=&quot;methods&quot;&gt;
        &lt;span class=&quot;step&quot;&gt;Step 1&lt;/span&gt;
        &lt;p class=&quot;desc&quot;&gt;
        单击右上角网络图标,“配置VPN”&lt;br&gt;
        &lt;a href=&quot;http://demi-panda.com/media/pub/linux/vpn-step-1.jpg&quot; alt=&quot;VPN&quot; rel=&quot;prettyPhoto[20130128013000]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/linux/vpn-step-1.jpg&quot; width=&quot;300px&quot;  alt=&quot;VPN&quot; class=&quot;img-center&quot; /&gt;
&lt;/a&gt;
        &lt;/p&gt;
     &lt;/li&gt;
     &lt;li class=&quot;methods&quot;&gt;
        &lt;span class=&quot;step&quot;&gt;Step 2&lt;/span&gt;
        &lt;p class=&quot;desc&quot;&gt;
        单击添加，弹出如下窗口，点击新建,然后选择VPN类型 - 选择PPTP&lt;br&gt;
&lt;a href=&quot;http://demi-panda.com/media/pub/linux/vpn-step-2.jpg&quot; alt=&quot;VPN&quot; rel=&quot;prettyPhoto[page.UUID]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/linux/vpn-step-2.jpg&quot; width=&quot;300px&quot;  alt=&quot;VPN&quot; class=&quot;img-center&quot; /&gt;
&lt;/a&gt;

        &lt;/p&gt;
    &lt;/li&gt;&lt;!-- // .methods --&gt;
    &lt;li class=&quot;methods&quot;&gt;
      &lt;span class=&quot;step&quot;&gt;Step 3&lt;/span&gt;
      &lt;p class=&quot;desc&quot;&gt;
      弹出如下窗口，Gateway一项填写&lt;a href=&quot;https://www.grjsq.biz/user-xianlu.html&quot; target=&quot;_bank&quot;&gt;服务器域名（点击查看）&lt;/a&gt;，Optional几项填写在网站注册的用户名和密码，NT Domain不用填写。&lt;br&gt;
&lt;a href=&quot;http://demi-panda.com/media/pub/linux/vpn-step-3.jpg&quot; alt=&quot;VPN&quot; rel=&quot;prettyPhoto[20130128013000]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/linux/vpn-step-3.jpg&quot; width=&quot;300px&quot;  alt=&quot;VPN&quot; class=&quot;img-center&quot; /&gt;
&lt;/a&gt;
      &lt;/p&gt;
   &lt;/li&gt;&lt;!-- // .methods --&gt;
   &lt;li class=&quot;methods&quot;&gt;
   &lt;span class=&quot;step&quot;&gt;Step 4&lt;/span&gt;
   &lt;p class=&quot;desc&quot;&gt;
   单击上图Advanced选项，弹出如下窗口，取消EAP选项，勾选Use point-to-point encryption(MPPE)项，点击确定&lt;br&gt;
&lt;a href=&quot;http://demi-panda.com/media/pub/linux/vpn-step-4.jpg&quot; alt=&quot;VPN&quot; rel=&quot;prettyPhoto[20130128013000]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/linux/vpn-step-4.jpg&quot; width=&quot;300px&quot;  alt=&quot;VPN&quot; class=&quot;img-center&quot; /&gt;
&lt;/a&gt;
   &lt;/p&gt;
   &lt;/li&gt;
   &lt;li class=&quot;methods&quot;&gt;
   &lt;span class=&quot;step&quot;&gt;Step 5&lt;/span&gt;
   &lt;p class=&quot;desc&quot;&gt;
   点击网络图标并切换到VPN模式，连接成功后，会看到图标上有一把锁&lt;br&gt;
&lt;a href=&quot;http://demi-panda.com/media/pub/linux/vpn-step-5.jpg&quot; alt=&quot;VPN&quot; rel=&quot;prettyPhoto[20130128013000]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/linux/vpn-step-5.jpg&quot; width=&quot;300px&quot;  alt=&quot;VPN&quot; class=&quot;img-center&quot; /&gt;
&lt;/a&gt;
   &lt;/p&gt;
   &lt;/li&gt;
   &lt;/ul&gt;
   &lt;/div&gt;&lt;!-- // .content-item --&gt;
&lt;/div&gt;



 ]]></description>
            <link>http://demi-panda.com/2013/01/28/ubunut-setup-vpn-connection/index.html</link>
            <guid>http://demi-panda.com/2013/01/28/ubunut-setup-vpn-connection/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Linux简单的图像上传工具Postman ]]></title>
            <pubDate>Sun, 27 Jan 2013 11:35:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　Postman 是一个不错的应用程序，可以上传你的图片到各种服务，目前它支持的 Google Plus, Picasa, Flickr, Ubuntu One。这是一个易于使用的应用程序，寻找图形界面和最小的一组功能，支持拖放功能的图片上传。您还可以设置基本属性，如标题和描述的图像。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/linux/postman.jpg&quot; alt=&quot;postman&quot; rel=&quot;prettyPhoto[20130127113500]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/linux/postman.jpg&quot; width=&quot;560px&quot;  alt=&quot;postman&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Installing Postman in Ubuntu 12.04/12.10 (or Linux Mint 13/14)&lt;/h3&gt;

&lt;p&gt;如果你喜欢使用Ubuntu软件中心，然后你就可以安装它从那里，或者只是安装使用下面的命令&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
sudo apt-get install postman-image-uploader
&lt;/pre&gt;


&lt;h3&gt;使用安装的PPA的方式&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
sudo apt-add-repository ppa:schumifer/postman
sudo apt-get update
sudo apt-get install postman-image-uploader
&lt;/pre&gt;



 ]]></description>
            <link>http://demi-panda.com/2013/01/27/postman-a-simple-image-uploading-application-for-ubuntu-linux-mint/index.html</link>
            <guid>http://demi-panda.com/2013/01/27/postman-a-simple-image-uploading-application-for-ubuntu-linux-mint/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Linux图像文本转换器（OCR） ]]></title>
            <pubDate>Sun, 27 Jan 2013 10:30:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　Tesseract 转换图像文本，在Ubuntu/Linux中是最好的方案。我试过几个OCR（光学字符识别）应用，但是Tesseract其精度高于任何其他应用程序。&lt;/p&gt;

&lt;p&gt;　　Tesseract是一个简单的，易于使用的命令行实用程序。它是跨平台的应用程序，当然 - 这是一个自由和开放源码软件！您可以提供各种不同的输入格式，它可以转换成60 +语言。&lt;/p&gt;

&lt;h3&gt;Installing Tesseract in Ubuntu/Linux&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
sudo apt-get install tesseract-ocr
&lt;/pre&gt;


&lt;p&gt;此外，如果需要的话，你可以安装任何语言包。现在来看看Tesseract的使用吧：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
tesseract your_scanned_file.png output_content.txt
&lt;/pre&gt;


&lt;p&gt;结果将被保存到output_content.txt文件。如果你想OCR其他语言，然后将它作为额外的参数，指定-L。 （当然，你必须首先安装该语言包）&lt;br&gt;
例如，对于扫描图像包含印地文文本，&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
tesseract your_scanned_paper.png output_content -l hin
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2013/01/27/image-to-text-converter-for-ubuntu-mint/index.html</link>
            <guid>http://demi-panda.com/2013/01/27/image-to-text-converter-for-ubuntu-mint/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Download Monitor监控上传和下载流量 ]]></title>
            <pubDate>Sun, 27 Jan 2013 01:30:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;   　download-monitor 通过网络上传和下载的数据量。显示此网络使用情况的图形。允许设置配额，并发出警告时，它是即将超过。监控随着时间的推移在网络上下载和上传的数据的量。容易阅读的图表显示此数据。允许设置一个使用配额，并警告说，当超出配额或即将被超越。对需要限制数据流量计划的人非常有用。&lt;/p&gt;

&lt;h3&gt;Ubuntu12.04 &amp;amp;12.10 安装download monitor&lt;/h3&gt;

&lt;p&gt;打开终端，运行下面的命令&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo apt-get install download-monitor
&lt;/pre&gt;


&lt;p&gt;如果显示如下信息，则需要修复其相关依赖&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
Reading package lists... Done
Building dependency tree       
Reading state information... Done
download-monitor is already the newest version.
You might want to run 'apt-get -f install' to correct these:
The following packages have unmet dependencies:
 download-monitor : Depends: vnstat but it is not going to be installed
 E: Unmet dependencies. Try 'apt-get -f install' with no packages (or specify a solution).
&lt;/pre&gt;


&lt;p&gt;需要修复依赖问题,再安装&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo apt-get -f install
$ sudo apt-get install download-monitor 
&lt;/pre&gt;


&lt;h3&gt;Download monitor  Overview&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/linux/download-monitor.jpg&quot; alt=&quot;download monitor&quot; rel=&quot;prettyPhoto[20130127013000]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/linux/download-monitor.jpg&quot; width=&quot;560px&quot;  alt=&quot;download monitor&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Download Monitor 设置&lt;/h3&gt;

&lt;p&gt;设置配额是要通过其统一发射器的设置配额执行，点击它，召唤一个对话框哪里下载配额，上传配额和配额总量是要调整;后的首选配额值是进入，超过数据的使用（超过设定的配额）通过通知的通知。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/linux/download-monitor-setting.jpg&quot; alt=&quot;download monitor&quot; rel=&quot;prettyPhoto[20130127013000]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/linux/download-monitor-setting.jpg&quot; width=&quot;330px&quot; class=&quot;img-center&quot; alt=&quot;download monitor&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2013/01/27/download-monitor/index.html</link>
            <guid>http://demi-panda.com/2013/01/27/download-monitor/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Java解析JavaScript数据 ]]></title>
            <pubDate>Sat, 26 Jan 2013 08:27:22 +0800</pubDate>
            <description><![CDATA[&lt;p&gt; 　　最近有一个小小的需求，就是在java中解析javascript脚本,JDK6就已经支持脚本语言了,针对JS有js引擎ScriptEngine。但是我在使用过程觉得用的不是很方便，比较别扭，经研究发现还有一个更强大的脚本引擎-mozilla提供的&lt;a href=&quot;https://github.com/mozilla/rhino&quot; alt=&quot;rhino&quot; target=&quot;_bank&quot;&gt;rhino&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Java用ScriptEngine解析脚本&lt;/h3&gt;

&lt;p&gt; 　　javax.script，始于JDK1.6，不过现在只有sun实现的javascript的解析器，难道是因为主要用来解析js语法所以归类到JEE的范畴？不过基本足够了，一般的用途主要是能解析通用的表达式就好，比如X &gt;= 1（X作为参数传入）这样的表达式，也能利用js的函数语法，创造一个就像java的函数一样存在于内存中随时可以被调用的函数，更可以将js中的对象直接转换成java对象。&lt;/p&gt;

&lt;h4&gt;Script主要类及接口&lt;/h4&gt;

&lt;p&gt;ScriptEngineManager、ScriptEngine、CompiledScript和Bindings 4个类或接口&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
ScriptEngineManager是一个工厂的集合，可以通过name或tag的方式获取某个脚本的工厂并生成一个此脚本的ScriptEngine，目前只有javascript的工厂。通过工厂函数得到了ScriptEngine之后，就可以用这个对象来解析脚本字符串了，直接调用Object obj = ScriptEngine.eval(String script)即可，返回的obj为表达式的值，比如true、false或int值。
&lt;/li&gt;
&lt;li&gt;
CompiledScript可以将ScriptEngine解析一段脚本的结果存起来，方便多次调用。只要将ScriptEngine用Compilable接口强制转换后，调用compile(String script)就返回了一个CompiledScript对象，要用的时候每次调用一下CompiledScript.eval()即可，一般适合用于js函数的使用。
&lt;/li&gt;
&lt;li&gt;
Bindings的概念算稍微复杂点，我的理解Bindings是用来存放数据的容器。它有3个层级，为Global级、Engine级和Local级，前2者通过ScriptEngine.getBindings()获得，是唯一的对象，而Local Binding由ScriptEngine.createBindings()获得，很好理解，每次都产生一个新的。Global对应到工厂，Engine对应到ScriptEngine，向这2者里面加入任何数据或者编译后的脚本执行对象，在每一份新生成的Local Binding里面都会存在。
&lt;/li&gt;
&lt;/ol&gt;


&lt;h4&gt;ScriptEngine代码示例&lt;/h4&gt;

&lt;p&gt;先来看一段JS&lt;/p&gt;

&lt;pre id=&quot;javascript&quot;&gt;
var arrclass = new Array();
arrclass.push(new Class(20000,&quot;计算机-软件开发&quot;));
arrclass.push(new Class(30000,&quot;计算机-网络/通讯&quot;));
arrclass.push(new Class(10000,&quot;计算机-硬件开发&quot;));
arrclass.push(new Class(40000,&quot;计算机-管理&quot;));
arrclass.push(new Class(50000,&quot;计算机-品质管理/技术支持&quot;));
arrclass.push(new Class(320000,&quot;电子/电器/半导体/仪器仪表&quot;));
&lt;/pre&gt;


&lt;p&gt;java代码实现解析&lt;/p&gt;

&lt;pre id=&quot;java&quot;&gt;
public void parseJS() &amp;#123;
  //1、通过Http请求获取js的String数据，格式如上
  String jsData = getJsData(&quot;url&quot;);
  //2、观察js结构，自定义Class,push到数组中,java中需要定义跟js中的Class的声明
  String clazz = &quot;function Class(classId, className)&amp;#123; this.classId=classId;this.className=className&amp;#125;;&quot;;

  //3、初始化ScriptEngine
  ScriptEngine engine = new ScriptEngineManager().getEngineByName(&quot;javascript&quot;);
  //4、js中未定义返回对象,这里需要将Class数据转换成字符串的数组返回，个人觉得很别扭，不知道是理解错误还是确实如此？
  //如果不这样做则直接在js后加上arrclass，cScript.evel()则返回NativeObject对象的数组
  String fun = &quot;var result = new Array() ;for(var i=0;i &amp;lt;arrclass.length;i++)&amp;#123;result.push(new Array(arrclass[i].classId,arrclass[i].className))&amp;#125;; result;&quot;;
  Compilable compilable = (Compilable) engine;
  //4、使用NativeArray获取数据
  CompiledScript cScript;
  try &amp;#123;
     cScript = compilable.compile(clazz + jsData + fun);
     NativeArray na = (NativeArray) cScript.eval();
     for (int i = 0; i &lt; na.getLength(); i++) &amp;#123;
         NativeArray nv = (NativeArray) na.get(i, null);
         System.out.println(nv.get(0, null).toString() + &quot; &quot; + nv.get(1, null).toString());
     &amp;#125;
 &amp;#125; catch (ScriptException ex) &amp;#123;
     ex.printStackTrace();
 &amp;#125;
&amp;#125;
&lt;/pre&gt;


&lt;p&gt;java代码中执行js计算&lt;/p&gt;

&lt;pre id=&quot;java&quot;&gt;
public void js() &amp;#123;  
    // 创建脚本引擎管理器  
    ScriptEngineManager sem = new ScriptEngineManager();  
    // 创建一个处理JavaScript的脚本引擎  
    ScriptEngine engine = sem.getEngineByExtension(&quot;js&quot;);  
    try &amp;#123;  
        // 执行js公式  
        engine.eval(&quot;if(6&gt;5)&amp;#123;flag=true;&amp;#125;else&amp;#123;flag =false;&amp;#125;&quot;);  
    &amp;#125; catch (ScriptException ex) &amp;#123;
        ex.printStackTrace();  
    &amp;#125;  
    //看看我们预期的反馈结果 true  
    System.out.println(engine.get(&quot;flag&quot;));  
&amp;#125;  
&lt;/pre&gt;


&lt;h3&gt;Java解析JS另一大引擎-Rhino&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mozilla/rhino&quot; alt=&quot;rhino&quot; target=&quot;_bank&quot;&gt;Rhino&lt;/a&gt;是完全用Java编写的JavaScript的开放源代码实现。它通常是嵌入到Java应用程序提供给最终用户的脚本。它被镶嵌在J2SE6作为默认的Java脚本引擎。&lt;/p&gt;

&lt;p&gt;使用Rhino来解析，感觉一切都很清晰明朗.&lt;/p&gt;

&lt;pre id=&quot;java&quot;&gt;
public void parseJS() &amp;#123;
  //1、通过Http请求获取js的String数据，格式如上
  String jsData = getJsData(&quot;url&quot;);
  //2、定义跟js中的Class的声明
  String clazz = &quot;function Class(classId, className){ this.classId=classId;this.className=className};&quot;;
  //3、初始化Context
  Context cx = Context.enter();
  Scriptable scope = cx.initStandardObjects();
  Object result = cx.evaluateString(scope, clazz + jsData + &quot;;arrclass&quot;, &quot;arrclass&quot;, 1, null);
  System.out.println(NativeJSON.stringify(cx, scope, result, null, null));
  Context.exit();
&amp;#125; 
&lt;/pre&gt;



 ]]></description>
            <link>http://demi-panda.com/2013/01/26/java-parse-javascript/index.html</link>
            <guid>http://demi-panda.com/2013/01/26/java-parse-javascript/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Linux kill多个进程 ]]></title>
            <pubDate>Fri, 25 Jan 2013 18:23:22 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;   　　kill 送出一个特定的信号 (signal) 给行程 id 为 pid 的行程根据该信号而做特定的动作,若没有指定，预设是送出终止 (TERM) 的信号.&lt;/p&gt;

&lt;h3&gt;语法&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
kill [-s sigspec | -n signum | -sigspec] pid | jobspec … or kill -l [sigspec]
&lt;/pre&gt;


&lt;p&gt;-s (signal) : 其中常用的讯号有 HUP (1),KILL (9),TERM (15),分别代表着重跑，砍掉,结束; 详细的信号可以用 kill -l （见下结果，可用数字带入）&lt;br&gt;
-p : 印出 pid,并不送出信号&lt;br&gt;
-l (signal) : 列出所有可用的信号名称&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;进程&lt;/h3&gt;

&lt;p&gt;　　进程是Linux系统中一个非常重要的概念。Linux是一个多任务的操作系统，系统上经常同时运行着多个进程。我们不关心这些进程究竟是如何分配的，或者是内核如何管理分配时间片的，所关心的是如何去控制这些进程，让它们能够很好地为用户服务。&lt;/p&gt;

&lt;p&gt;　　Linux操作系统包括三种不同类型的进程，每种进程都有自己的特点和属性。交互进程是由一个Shell启动的进程。交互进程既可以在前台运行，也可以在后台运行。批处理进程和终端没有联系，是一个进程序列。监控进程(也称系统守护进程)是Linux系统启动时启动的进程，并在后台运行。例如，httpd 是著名的Apache服务器的监控进程。&lt;/p&gt;

&lt;h3&gt;kill命令的工作原理&lt;/h3&gt;

&lt;p&gt;　　向Linux系统的内核发送一个系统操作信号和某个程序的进程标识号，然后系统内核就可以对进程标识号指定的进程进行操作。比如在top命令中，我们看到系统运行许多进程，有时就需要使用kill中止某些进程来提高系统资源。在讲解安装和登陆命令时，曾提到系统多个虚拟控制台的作用是当一个程序出错造成系统死锁时，可以切换到其它虚拟控制台工作关闭这个程序。此时使用的命令就是kill，因为kill是大多数Shell内部命令可以直接调用的。&lt;/p&gt;

&lt;h3&gt;示例&lt;/h3&gt;

&lt;p&gt;kill单个进程&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
#查找进程的pid
$ ps -aux | grep &quot;java&quot; | cut -c 9-15
#kill 进程
$ kill -9 pid
&lt;/pre&gt;


&lt;p&gt;&lt;strong&gt;说明:&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;管道符“|”用来隔开两个命令，管道符左边命令的输出会作为管道符右边命令的输入&lt;/li&gt;
&lt;li&gt;ps -aux  查看所有进程的命令。这时检索出的进程将作为下一条命令grep &quot;java&quot;的输入&lt;/li&gt;
&lt;li&gt;grep &quot;java&quot; 选出所有含有关键字&quot;java&quot;的进程。&lt;/li&gt;
&lt;li&gt;&quot;cut -c 9-15&quot; 截取输入行的第9个字符到第15个字符，而这正好是进程号PID&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;kill 多个进程&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ ps -aux | grep &quot;java&quot; | cut –c 9-15 | xargs kill –9
$ ps -aux | grep nobody | awk '{print $2}'| sudo xargs -n 1 kill -9 
$ ps -aux | grep nginx | awk '{print $2}' | sudo xargs -L 1  kill -9
&lt;/pre&gt;


&lt;p&gt;&lt;strong&gt;说明:&lt;/strong&gt;&lt;br&gt;
xargs -n 1 表示运行 Command 参数，且使用尽可能多的标准输入自变量，直到 Number 参数指定的最大值。如果满足以下条件，则 xargs 命令使用更少的自变量：&lt;br&gt;
如果积累的命令行长度超出了由 -s Size 标志指定的字节。&lt;br&gt;
最后的迭代有少于 Number（但是非零）的自变量保留。&lt;br&gt;
注： -L、-I（小写的 L）和 -n 标志是互相排斥的；最后指定的标志生效。&lt;br&gt;&lt;/p&gt;

&lt;p&gt;xargs -L 1 用从标准输入读取的指定行数的非空参数运行 Command 命令。如果保留少于指定的 Number，Command 参数的最后调用可以有少数几个参数行。行以第一个换行字符结束，除非该行的最后一个字符是一个空格或制表符。后续的空格表示延续至下一个非空行。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2013/01/25/linux-kill-multi-process/index.html</link>
            <guid>http://demi-panda.com/2013/01/25/linux-kill-multi-process/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Linux 下使用find命令查找最近修改文件 ]]></title>
            <pubDate>Fri, 25 Jan 2013 14:23:22 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;  　　经常会在Linux有查找某个目录下的一些特殊文件，然后根据最近修改的时间来查找，然后获取TOP-N数量返回，今天介绍下根据时间来查找，然后进行相应的处理。&lt;/p&gt;

&lt;h3&gt;find 命令详解&lt;/h3&gt;

&lt;p&gt;请参考我的另一篇文章:&lt;a href=&quot;http://demi-panda.com/2012/11/22/linux-find-practice/&quot; alt=&quot;Linux find命令实践&quot; target=&quot;_bank&quot;&gt;Linux find命令实践&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;按时间查找参数&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;-atime 访问时间&lt;/li&gt;
&lt;li&gt;-ctime 改变状态的时间&lt;/li&gt;
&lt;li&gt;-mtime 修改的时间,但要注意，这里的时间是以24小时为单位&lt;/li&gt;
&lt;li&gt;-mmin  搜索当前目录中，所有过去n分钟修改的文件&lt;/li&gt;
&lt;li&gt;-cmin  过去n分钟改变状态的文件&lt;/li&gt;
&lt;li&gt;-amin  过去n分钟访问&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;示例&lt;/h3&gt;

&lt;p&gt;查看所有文件&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
denghp@denghp:~/temp$ ls -lt 
total 32
-rw-rw-r-- 1 denghp denghp   12 Jan 25 17:22 b.txt
-rw-rw-r-- 1 denghp denghp    9 Jan 25 17:22 a.txt
-rw-rw-r-- 1 denghp denghp  209 Jan 21 15:37 0752.tar.gz
drwxrwxr-x 2 denghp denghp 4096 Jan 21 15:37 test
-rw-rw-r-- 1 denghp denghp    5 Jan 17 17:43 0752.txt
-rw-rw-r-- 1 denghp denghp    4 Jan 17 17:43 abc0752abc.txt
-rw-rw-r-- 1 denghp denghp    4 Jan 17 17:43 abc0752.txt
-rw-rw-r-- 1 denghp denghp    4 Jan 17 17:23 c.txt
&lt;/pre&gt;


&lt;p&gt;查找最近10分钟更新以.txt结尾的文件&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
denghp@denghp:~/temp$ find . -name &quot;*.txt&quot; -mmin -10
./a.txt
./b.txt
&lt;/pre&gt;


&lt;p&gt;查找最近10分钟更新的.txt结尾文件，并俺时间排序，返回前面TOP1&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
denghp@denghp:~/temp$ find . -name &quot;*.txt&quot; -mmin -10 | xargs ls -lta | head -n1
-rw-rw-r-- 1 denghp denghp 12 Jan 25 17:22 ./b.txt
&lt;/pre&gt;


&lt;p&gt;查找目录并移动到指定位置,指定查找目录的深度&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
find -maxdepth 1 -name &quot;abc&quot; -type d -exec mv {} test/ \;
&lt;/pre&gt;


&lt;p&gt;查找文件夹并删除&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
find . -name &quot;*.svn&quot; | xargs rm -rf;
&lt;/pre&gt;


&lt;p&gt;查找文件名称包含的字符串，移动到另一目录&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
find . -name &quot;*0752*&quot; | xargs -i -i cp {} test/;
&lt;/pre&gt;


&lt;p&gt;查找目录并重命名&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
查找目录并重命名
find . -maxdepth 1 -name 'aa*' -type d -exec mv {} tast \;
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2013/01/25/linux-find-command/index.html</link>
            <guid>http://demi-panda.com/2013/01/25/linux-find-command/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[python 调用Linux的Shell命令 ]]></title>
            <pubDate>Fri, 25 Jan 2013 08:27:22 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/python/486px-Python_logo.png&quot; alt=&quot;python&quot; target=&quot;_bank&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/python/486px-Python_logo.png&quot; alt=&quot;python&quot; width=&quot;380px&quot; class=&quot;img-center&quot;/&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  　　Python是一种即译式的，互动的，面向对象的编程语言，它包含了模组式的操作，异常处理，动态资料形态，十分高层次的动态资料结构，以及类别的使用。它具有很多优秀的脚本语言的特点：解释的，面向对象的，内建的高级数据结构，支持模块和包，支持多种平台，可扩展。而且它还支持交互式方式运行，图形方式运行。它拥有众多的编程界面支持各种操作系统平台以及众多的各类函数库。介绍下Python调用Linux的shell命令.&lt;/p&gt;

&lt;h3&gt;os 模块&lt;/h3&gt;

&lt;p&gt;1、os模块的exec方法族。Python的exec系统方法同Unix的exec系统调用是一致的。这些方法适用于在子进程中调用外部程序的情况，因为外部程序会替换当前进程的代码，不会返回。&lt;/p&gt;

&lt;p&gt;2、os.system(cmd) os模块的system方法。system方法会创建子进程运行外部程序，方法只返回外部程序的运行结果。这个方法比较适用于外部程序没有输出结果的情况。比如在Ubuntu下，使用下面命令在桌面上显示一条提示信息。&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
denghp@denghp:~/temp$ python
Python 2.7.3 (default, Aug  1 2012, 05:14:39) 
[GCC 4.6.3] on linux2
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&gt;&gt;&gt; import os
&gt;&gt;&gt; os.system('ls -lt')
total 32
-rw-rw-r-- 1 denghp denghp  209 Jan 21 15:37 0752.tar.gz
drwxrwxr-x 2 denghp denghp 4096 Jan 21 15:37 test
-rw-rw-r-- 1 denghp denghp    5 Jan 17 17:43 0752.txt
-rw-rw-r-- 1 denghp denghp    4 Jan 17 17:43 abc0752abc.txt
-rw-rw-r-- 1 denghp denghp    4 Jan 17 17:43 abc0752.txt
-rw-rw-r-- 1 denghp denghp    4 Jan 17 17:23 c.txt
-rw-rw-r-- 1 denghp denghp    8 Jan 17 17:23 b.txt
-rw-rw-r-- 1 denghp denghp    6 Jan 17 17:23 a.txt
0
&lt;/pre&gt;


&lt;p&gt;3、使用os模块的popen方法。当需要得到外部程序的输出结果时，本方法非常有用。比如使用urllib调用Web API时，需要对得到的数据进行处理。os.popen(cmd) 要得到命令的输出内容，只需再调用下read()或readlines()等 如a=os.popen(cmd).read()&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
&gt;&gt;&gt; print os.popen('ls -lt').read()
total 32
-rw-rw-r-- 1 denghp denghp  209 Jan 21 15:37 0752.tar.gz
drwxrwxr-x 2 denghp denghp 4096 Jan 21 15:37 test
-rw-rw-r-- 1 denghp denghp    5 Jan 17 17:43 0752.txt
-rw-rw-r-- 1 denghp denghp    4 Jan 17 17:43 abc0752abc.txt
-rw-rw-r-- 1 denghp denghp    4 Jan 17 17:43 abc0752.txt
-rw-rw-r-- 1 denghp denghp    4 Jan 17 17:23 c.txt
-rw-rw-r-- 1 denghp denghp    8 Jan 17 17:23 b.txt
-rw-rw-r-- 1 denghp denghp    6 Jan 17 17:23 a.txt
&lt;/pre&gt;


&lt;h3&gt;commands 模块&lt;/h3&gt;

&lt;p&gt;使用commands模块的getoutput方法，这种方法同popend的区别在于popen返回的是一个文件句柄，而本方法将外部程序的输出结果当作字符串返回，很多情况下用起来要更方便些。&lt;br&gt;
&lt;strong&gt;主要方法:&lt;/strong&gt;
commands.getstatusoutput(cmd) 返回(status, output).&lt;br&gt;
commands.getoutput(cmd) 只返回输出结果&lt;br&gt;
commands.getstatus(file) 返回ls -ld file的执行结果字符串，调用了getoutput，不建议使用此方法.&lt;br&gt;&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
&gt;&gt;&gt; import commands
&gt;&gt;&gt; commands.getstatusoutput('find -name &quot;*.txt&quot; ')
(0, './abc0752.txt\n./a.txt\n./c.txt\n./0752.txt\n./test/abc0752.txt\n./test/0752.txt')
&gt;&gt;&gt; result = commands.getstatusoutput('find -name &quot;*.txt&quot;|head -n1')
&gt;&gt;&gt; print result
(0, './abc0752.txt')
&lt;/pre&gt;


&lt;h3&gt;使用subprocess模块&lt;/h3&gt;

&lt;p&gt;使用subprocess模块，这个模块比较复杂，可以对子进程做更多控制。根据Python官方文档说明，subprocess模块用于取代上面这些模块。有一个用Python实现的并行ssh工具—mssh，代码很简短，不过很有意思，它在线程中调用subprocess启动子进程来干活。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2013/01/25/python-shell-command/index.html</link>
            <guid>http://demi-panda.com/2013/01/25/python-shell-command/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[GitHub 无法访问解决方案 ]]></title>
            <pubDate>Thu, 24 Jan 2013 00:30:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/github/github-logo.jpg&quot; alt=&quot;github&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/github/github-logo.jpg&quot; alt=&quot;github&quot; class=&quot;img-center&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;　　被称为“程序员的天堂”的GitHub，因服务器被“12306订票助手”拖垮而为国人所熟知，网友猜测，我国地区无法访问GitHub，或是受到12306抢票插件的影响，12306抢票插件搞垮美国Github服务器。&lt;/p&gt;

&lt;p&gt;　　李开复于22日的微博上，在强烈抗议封锁GitHub中提到，“在GitHub的300万会员中，中国是第四大国。GitHub是程序员学习和与世界接轨的首选工具。GitHub并无意识形态，也没有反动内容。封锁GitHub毫无道理。”&lt;/p&gt;

&lt;h3&gt;修改hosts解决访问github方案&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
sudo vi /etc/hosts
#添加如下配置
#github
207.97.227.239 github.com
65.74.177.129 www.github.com
207.97.227.252 nodeload.github.com
207.97.227.243 raw.github.com
204.232.175.78 documentcloud.github.com
204.232.175.78 pages.github.com
&lt;/pre&gt;


&lt;h3&gt;使用VPN访问github&lt;/h3&gt;

&lt;h4&gt;&lt;a href=&quot;http://a.wy002.info/in.html?userid=195596&quot; alt=&quot;51VPN&quot; target=&quot;_bank&quot;&gt;51VPN&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;其实有很多优质的VPN是搜索不到的，当我发现&lt;a href=&quot;http://a.wy002.info/in.html?userid=195596&quot; alt=&quot;51VPN&quot; target=&quot;_bank&quot;&gt;51VPN&lt;/a&gt;的时候，他们已经创办了两年多，并且已经有了11万多的用户量。可见他们的服务一直都得还都挺不错的。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://a.wy002.info/in.html?userid=195596&quot; alt=&quot;51VPN&quot; target=&quot;_bank&quot;&gt;51VPN&lt;/a&gt;的免费VPN限制了流量，每个月是500M。这个流量，临时看看网页或者干啥的也都够了。要是不够的话，嘿嘿，可以多注册一个帐号的。接下来给大家详细介绍一下51VPN。&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://shayunet.info/170850&quot; alt=&quot;鲨鱼加速器免费VPN&quot; target=&quot;_bank&quot;&gt;鲨鱼加速器免费VPN&lt;/a&gt;&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;没有使用时间限制，随时连随时用，不怕掉线；&lt;/li&gt;
&lt;li&gt;没有速度限制，速度真的很快；&lt;/li&gt;
&lt;li&gt;支持OpenVPN，更加的稳定。而且很多公司限制了PP[......]&lt;/li&gt;
&lt;/ol&gt;


&lt;h4&gt;&lt;a href=&quot;http://gjsq.me/659897&quot; alt=&quot;GreenVPN网络加速器&quot; target=&quot;_bank&quot;&gt;GreenVPN网络加速器 免费美国绿色VPN&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;可能许多朋友都听说过&lt;a href=&quot;http://gjsq.me/659897&quot; alt=&quot;GreenVPN网络加速器&quot; target=&quot;_bank&quot;&gt;GreenVPN网络加速器&lt;/a&gt;，这是一家开办已经3年多的VPN商家，拥有成熟的VPN技术与稳定的客源。目前已经增加到70多条VPN线路，线路包括北美23条、香港4条、日本3条、韩服4条、国内7条、英国2条、德国2条、法国2条、俄罗斯1条、台湾4条。&lt;/p&gt;

&lt;h3&gt;GitHub Pages服务迁移方法&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;保证自己有一个可以修改DNS的域名，非顶级域名也可，例如：demi-panda.com。&lt;/li&gt;
&lt;li&gt;在pages所在根目录新建名为CNAME的文件将域名写入后push：echo &quot;demi-panda.com&quot; &gt;&gt; CNAME。&lt;/li&gt;
&lt;li&gt;去域名提供商修改A记录，将demi-panda.com指向：204.232.175.78。&lt;/li&gt;
&lt;/ol&gt;



 ]]></description>
            <link>http://demi-panda.com/2013/01/24/github-via-dns/index.html</link>
            <guid>http://demi-panda.com/2013/01/24/github-via-dns/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Google Search 无法访问解决方案 ]]></title>
            <pubDate>Wed, 23 Jan 2013 22:30:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt; 　　众所周知，在国内出于国内安全和自我保护意识，google的各项服务都是禁止使用的。很多网站主更是有所感受，那么如何才能正常访问的google的各项服务呢？&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/google/google-search.jpg&quot; alt=&quot;github&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/google/google-search.jpg&quot; alt=&quot;google search&quot; class=&quot;img-center&quot; width=&quot;330px&quot;/&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Windows下修改hosts&lt;/h3&gt;

&lt;p&gt;用记事本打开C:\Windows\System32\drivers\etc下的hosts&lt;/p&gt;

&lt;h3&gt;Linux下修改hosts&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
sudo vi /etc/hosts
&lt;/pre&gt;


&lt;h3&gt;Google 搜索hosts配置&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
#Search
203.208.46.200  www.google.com.hk
203.208.46.200  www.google.cn
203.208.46.200  www.l.google.com
203.208.46.200  www2.l.google.com
203.208.46.200  www3.l.google.com
203.208.46.200  www4.l.google.com
&lt;/pre&gt;


&lt;h3&gt;Google Code hosts配置&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
#Google code
203.208.46.200  autoproxy-gfwlist.googlecode.com
203.208.46.200  chromium.googlecode.com
203.208.46.200  closure-library.googlecode.com
203.208.46.200  earth-api-samples.googlecode.com
203.208.46.200  gmaps-samples-flash.googlecode.com
203.208.46.200  google-code-feed-gadget.googlecode.com
203.208.46.200  codereview.chromium.org
203.208.46.222  smarthosts.googlecode.com
203.208.46.200  code.google.com
203.208.46.200  code.l.google.com 
203.208.46.200  googlecode.l.google.com
203.208.46.200  uploads.code.google.com
203.208.46.202  code-opensocial.googleusercontent.com
&lt;/pre&gt;


&lt;h3&gt;Google Drive hosts配置&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
#google drive and docs
203.208.46.200 0.docs.google.com
203.208.46.200  0.drive.google.com
203.208.46.200  1.docs.google.com
203.208.46.200  1.drive.google.com
203.208.46.200  10.docs.google.com
203.208.46.200  10.drive.google.com
203.208.46.200  11.docs.google.com
203.208.46.200  11.drive.google.com
203.208.46.200  12.docs.google.com
203.208.46.200  12.drive.google.com
203.208.46.200  13.docs.google.com
203.208.46.200  13.drive.google.com
203.208.46.200  14.docs.google.com
203.208.46.200  14.drive.google.com
203.208.46.200  15.docs.google.com
203.208.46.200  15.drive.google.com
203.208.46.200  16.docs.google.com
203.208.46.200  16.drive.google.com
203.208.46.200  2.docs.google.com
203.208.46.200  2.drive.google.com
203.208.46.200  3.docs.google.com
203.208.46.200  3.drive.google.com
203.208.46.200  4.docs.google.com
203.208.46.200  4.drive.google.com
203.208.46.200  5.docs.google.com
203.208.46.200  5.drive.google.com
203.208.46.200  6.docs.google.com
203.208.46.200  6.drive.google.com
203.208.46.200  7.docs.google.com
203.208.46.200  7.drive.google.com
203.208.46.200  8.docs.google.com
203.208.46.200  8.drive.google.com
203.208.46.200  9.docs.google.com
203.208.46.200  9.drive.google.com
&lt;/pre&gt;


&lt;h3&gt;获取Google最新hosts配置地址&lt;/h3&gt;

&lt;p&gt;访问googlecode网站获得，&lt;a href=&quot;https://smarthosts.googlecode.com/svn/trunk/hosts&quot; alt=&quot;google hosts&quot; target=&quot;_bank&quot;&gt;https://smarthosts.googlecode.com/svn/trunk/hosts&lt;/a&gt;，这里提供了最新的映射IP地址，将获得的hosts文件附加到自己电脑的hosts中就可以&lt;/p&gt;

&lt;h3&gt;小贴士&lt;/h3&gt;

&lt;p&gt;以上hosts文件的获得肯定只是临时的，想要经常性的在国内使用google服务肯定要开展一个旷日持久的拉锯战，咱们处于国家安全考虑还是要尊重政府的决定的。如果您试了如上方式可行，就麻烦您点击分享按钮把内容分享给广大的网友朋友们。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2013/01/23/google-hosts/index.html</link>
            <guid>http://demi-panda.com/2013/01/23/google-hosts/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Solr 4.1 正式发布 ]]></title>
            <pubDate>Wed, 23 Jan 2013 12:27:22 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/solr/solr-logo.png&quot; alt=&quot;python&quot; target=&quot;_bank&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/solr/solr-logo.png&quot; alt=&quot;solr&quot; width=&quot;380px&quot; class=&quot;img-center&quot;/&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; 　　Apache Solr是流行的，速度极快，开源的NoSQL的搜索平台，来自于Apache Lucene项目。它的主要功能包括强大的全文搜索，命中高亮显示、面搜索、动态集群、数据库集成、丰富的文档和地理信息搜索。Solr是高度可扩展的、 提供了分布式搜索和索引的容错功能，强大的搜索和导航功能等。&lt;/p&gt;

&lt;h3&gt;主要组件的版本&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Apache Tika 1.2&lt;/li&gt;
&lt;li&gt;Carrot2 3.6.2&lt;/li&gt;
&lt;li&gt;Velocity 1.7 and Velocity Tools 2.0&lt;/li&gt;
&lt;li&gt;Apache UIMA 2.3.1&lt;/li&gt;
&lt;li&gt;Apache ZooKeeper 3.4.5&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;新增加的功能&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Solr的大部分功能，包括复制，实现自定义目录和DirectoryFactory实现&lt;/li&gt;
&lt;li&gt;索引的长期偏移，可指定通过&quot;storeOffsetsWithPositions&quot;标志字段定义的架构&lt;/li&gt;
&lt;li&gt;solr的QParsers可能现在可以直接调用Lucene的查询语法,通过localParams和_query_,例如:foo AND &amp;#123;!term f=myfield v=$qq&amp;#125;&lt;/li&gt;
&lt;li&gt;Solr的解析请求参数（URL或发送POST使用内容类型application/x-www的形式,进行了urlencoded,不再依赖于容器的特殊配置&lt;/li&gt;
&lt;li&gt;Directory IO速率限制的基础上的IO方面&lt;/li&gt;
&lt;li&gt;分布式搜索为MoreLikeThis的支持&lt;/li&gt;
&lt;li&gt;Multi-core: On-demand core loading and LRU-based core unloading afterreaching a user-specified maximum number&lt;/li&gt;
&lt;li&gt;The new Solr 4 spatial fields now work with the {!geofilt} and {!bbox}query parsers. The score local-param works too.&lt;/li&gt;
&lt;li&gt;Extra statistics to RequestHandlers - 5 &amp; 15-minute reqs/sec rolling averages; median, 75th, 95th, 99th, 99.9th percentile request times.&lt;/li&gt;
&lt;li&gt;Configurable Content-Type headers for PHPResponseWriters and PHPSerializedResponseWriter&lt;/li&gt;
&lt;li&gt;PostingsHighlighter支持&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;更多详细:&lt;a href=&quot;http://lucene.apache.org/solr/4_1_0/changes/Changes.html&quot; alt=&quot;solr 4.1.0&quot; target=&quot;_bank&quot;&gt;http://lucene.apache.org/solr/4_1_0/changes/Changes.html&lt;/a&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2013/01/23/solr-release-4.1.0/index.html</link>
            <guid>http://demi-panda.com/2013/01/23/solr-release-4.1.0/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[HtmlCleaner+XPath抓取HTML中的数据 ]]></title>
            <pubDate>Wed, 23 Jan 2013 10:27:22 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　以前用过&lt;a href=&quot;http://nutch.apache.org/&quot; alt=&quot;apache-nutch&quot; target=&quot;_bank&quot;&gt;apache-nutch&lt;/a&gt;,功能虽然很强大，可以配置抓取的线程数，抓取页面的频率，创建索引实现搜索功能等等，但是在现实工作中，往往是针对不同的功能，需求，使用不同的技术实现，最近有一个小小的需求：对国内的招聘网站的职位类别的数据进行抓取。针对这个需求可以使用htmlcleaner+xpath来实现,因为htmlcleaner实用性很强，而且非常容易上手。&lt;/p&gt;

&lt;h3&gt;HtmlCleaner Html文档解析器&lt;/h3&gt;

&lt;p&gt;　　HtmlCleaner是一个开源的Java语言的Html文档解析器。HtmlCleaner能够重新整理HTML文档的每个元素并生成结构良好(Well-Formed)的 HTML 文档。默认它遵循的规则是类似于大部份web浏览器为创文档对象模型所使用的规则。然而，用户可以提供自定义tag和规则组来进行过滤和匹配。它被设计的小，快速，灵活而且独立。解析后编程轻量级文档对象，能够很容易的被转换到DOM或者JDom标准文档，或者通过各种方式(压缩，打印)连续输出XML。&lt;/p&gt;

&lt;h4&gt;HtmlCleaner主要功能&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;HtmlCleaner的&lt;a href=&quot;http://baike.baidu.com/view/758570.htm&quot; target=&quot;_bank&quot;&gt;文档对象模型&lt;/a&gt;现在拥有了一些函数，处理节点和属性，所以现在在序列化之前搜索或者编辑是非常容易的。&lt;/li&gt;
&lt;li&gt;提供基本HtmlCleaner DOM的XPath支持&lt;/li&gt;
&lt;li&gt;使用XML配置文件让创建定制tag变得更加容易&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;XPath&lt;/h3&gt;

&lt;p&gt;　　XPath即为XML路径语言（XML Path Language），它是一种用来确定XML文档中某部分位置的语言。XPath基于XML的树状结构，提供在数据结构树中找寻节点的能力。起初 XPath 的提出的初衷是将其作为一个通用的、介于XPointer与XSL间的语法模型。但是 XPath 很快的被开发者采用来当作小型查询语言。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;XPath语法:&lt;a href=&quot;http://baike.baidu.com/view/307399.htm&quot; target=&quot;_bank&quot;&gt;http://baike.baidu.com/view/307399.htm&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;代码实现&lt;/h3&gt;

&lt;h4&gt;下载HtmlCleaner的jar包&lt;/h4&gt;

&lt;pre id=&quot;wiki&quot;&gt;
http://www.java2s.com/Code/Jar/h/Downloadhtmlcleanerjar.htm
&lt;/pre&gt;


&lt;h4&gt;使用XPath获取Document路径&lt;/h4&gt;

&lt;p&gt;1、使用firefox安装firebug,firepath&lt;br&gt;
2、打开需要抓取页面，然后按F12或者点击firebug图标打开firebug界面，获取XPath路径&lt;br&gt;
3、XPath定位路径&lt;br&gt;&lt;/p&gt;

&lt;pre id=&quot;java&quot;&gt;
.//*[@id='wrapper']/div[3]/div[4]/dl
&lt;/pre&gt;


&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/java/firebug_firepath.jpg&quot; alt=&quot;firebug firepath&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/java/firebug_firepath.jpg&quot; width=&quot;580px&quot;  alt=&quot;firebug firepath&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;Spider代码&lt;/h4&gt;

&lt;pre id=&quot;java&quot;&gt;
package com.cpy.spider;

import java.io.IOException;
import org.htmlcleaner.HtmlCleaner;
import org.htmlcleaner.XPatherException;

public class Spider {

  private static final HtmlCleaner cleaner = new HtmlCleaner();

  public static void main(String[] args) throws IOException, XPatherException {
    fetchGanji(&quot;http://bj.ganji.com/zhaopin/&quot;);
  }

  public static void fetchGanji(String url) throws IOException, XPatherException {
    TagNode node = cleaner.clean(new URL(url), &quot;utf-8&quot;);
    Object[] ns=node.getElementsByName(&quot;title&quot;, true);  

    if(ns.length &gt; 0){  
      System.out.println(&quot;title是：&quot;+((TagNode) ns[0]).getText());//取title值  
    }  
    Object[] ns = node.evaluateXPath(&quot;.//*[@id='wrapper']/div[3]/div[4]/dl&quot;);
    for (Object object : ns) {
      TagNode node2 = (TagNode) object;
      Object[] nsDts = node2.evaluateXPath(&quot;/dt&quot;);
      for (Object obj : nsDts) {
        TagNode node3 = (TagNode) obj;
        System.out.println(&quot;一级职位类别 : &quot; + node3.getText());
      }

      Object[] nsDds = node2.evaluateXPath(&quot;/dd&quot;);
      for (Object objDd : nsDds) {
        TagNode dd = (TagNode) objDd;
        System.out.println(&quot;二级职位类别 : &quot; + dd.getText());
      }
    }
  }
}

&lt;/pre&gt;



 ]]></description>
            <link>http://demi-panda.com/2013/01/23/htmlcleaner-xpath-html/index.html</link>
            <guid>http://demi-panda.com/2013/01/23/htmlcleaner-xpath-html/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[GitHub网站及关键字被屏蔽 ]]></title>
            <pubDate>Tue, 22 Jan 2013 10:30:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　全球知名的分布式代码托管网站GitHub昨天被中国关键字屏蔽，目前已经无法从中国访问，前几天12306抢票插件曾经直接引用了Github上的js文件，导致&lt;a href=&quot;http://diy.pconline.com.cn/315/3155207.html&quot; alt=&quot;Github服务器被拖跨&quot; target=&quot;_bank&quot;&gt;Github服务器被拖垮&lt;/a&gt;了，插件作者不得不将js文件托管在其他网站,1月21日测试，https版本的github也无法访问了。
&lt;a href=&quot;http://github.com&quot; target=&quot;_bank&quot;&gt;
&lt;img src=&quot;/media/pub/github/github.jpg&quot; width=&quot;330px&quot; alt=&quot;github屏蔽&quot; class=&quot;img-center&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Git控制工具&lt;/h3&gt;

&lt;p&gt;　　Git是一个分布式版本控制工具，很多有名的软件都使用Git来进行版本控制，与常用的版本控制工具CVS、SVN等不同，它采用了分布式版本库的方式，不必服务器端软件支持，使源代码的发布和交流极其方便，GitHub是流行的Git存取站点，可以托管各种Git库，开源项目可以通过GitHub免费托管，GitHub深受广大程序员的喜爱。&lt;/p&gt;

&lt;h3&gt;Github被屏蔽原因？&lt;/h3&gt;

&lt;p&gt;　　关于GitHub被屏蔽关键字的原因，我猜测，一种可能性和12306抢票插件有关，因为该插件使用了GitHub进行托管，而日前工信部已经明确&lt;a href=&quot;http://it.sohu.com/20130119/n363987456.shtml&quot; alt=&quot;叫停浏览器抢票插件&quot; target=&quot;_bank&quot;&gt;叫停浏览器插件&lt;/a&gt;，对于境外网站，叫停的方法估计只能是屏蔽了；另一种可能是和内容分享有关，我以前曾经看到有人把GitHub当Blog来用，还有人在GitHub上分享一些非常敏感的政治性文章，这都不是一个正确使用代码托管网站的方法。&lt;/p&gt;

&lt;h3&gt;解决方案-免费VPN&lt;/h3&gt;

&lt;h4&gt;&lt;a href=&quot;http://a.wy002.info/in.html?userid=195596&quot; alt=&quot;51VPN&quot; target=&quot;_bank&quot;&gt;51VPN&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;其实有很多优质的VPN是搜索不到的，当我发现&lt;a href=&quot;http://a.wy002.info/in.html?userid=195596&quot; alt=&quot;51VPN&quot; target=&quot;_bank&quot;&gt;51VPN&lt;/a&gt;的时候，他们已经创办了两年多，并且已经有了11万多的用户量。可见他们的服务一直都得还都挺不错的。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://a.wy002.info/in.html?userid=195596&quot; alt=&quot;51VPN&quot; target=&quot;_bank&quot;&gt;51VPN&lt;/a&gt;的免费VPN限制了流量，每个月是500M。这个流量，临时看看网页或者干啥的也都够了。要是不够的话，嘿嘿，可以多注册一个帐号的。接下来给大家详细介绍一下51VPN。&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://shayunet.info/170850&quot; alt=&quot;鲨鱼加速器免费VPN&quot; target=&quot;_bank&quot;&gt;鲨鱼加速器免费VPN&lt;/a&gt;&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;没有使用时间限制，随时连随时用，不怕掉线；&lt;/li&gt;
&lt;li&gt;没有速度限制，速度真的很快；&lt;/li&gt;
&lt;li&gt;支持OpenVPN，更加的稳定。而且很多公司限制了PP[......]&lt;/li&gt;
&lt;/ol&gt;


&lt;h4&gt;&lt;a href=&quot;http://gjsq.me/659897&quot; alt=&quot;GreenVPN网络加速器&quot; target=&quot;_bank&quot;&gt;GreenVPN网络加速器 免费美国绿色VPN&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;可能许多朋友都听说过&lt;a href=&quot;http://gjsq.me/659897&quot; alt=&quot;GreenVPN网络加速器&quot; target=&quot;_bank&quot;&gt;GreenVPN网络加速器&lt;/a&gt;，这是一家开办已经3年多的VPN商家，拥有成熟的VPN技术与稳定的客源。目前已经增加到70多条VPN线路，线路包括北美23条、香港4条、日本3条、韩服4条、国内7条、英国2条、德国2条、法国2条、俄罗斯1条、台湾4条。&lt;/p&gt;

&lt;h3&gt;解决国外facebook,twitter,github等著名网站的访问&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://github.com&quot; target=&quot;_bank&quot;&gt;
&lt;img src=&quot;/media/pub/github/github-home.jpg&quot; width=&quot;330&quot; class=&quot;img-center&quot; alt=&quot;github屏蔽&quot;  &gt;&lt;/img&gt;
&lt;/a&gt;
&lt;a href=&quot;http://twitter.com&quot; target=&quot;_bank&quot;&gt;
&lt;img src=&quot;/media/pub/web/twitter.jpg&quot; width=&quot;330px&quot; alt=&quot;twitter&quot; class=&quot;img-center&quot; &gt;&lt;/img&gt;
&lt;/a&gt;
&lt;a href=&quot;http://facebook.com&quot; target=&quot;_bank&quot;&gt;
&lt;img src=&quot;/media/pub/web/facebook.jpg&quot; width=&quot;330px&quot; alt=&quot;facebook&quot; class=&quot;img-center&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2013/01/22/github-shield/index.html</link>
            <guid>http://demi-panda.com/2013/01/22/github-shield/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[HTTPResponse实现详解 ]]></title>
            <pubDate>Mon, 21 Jan 2013 08:20:20 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　上一篇介绍了HTTPRequest的详细实现，及主要知识点，这一篇了解下HTTPResponse的主要知识点，及代码实现。&lt;/p&gt;

&lt;h3&gt;HTTP协议-状态行&lt;/h3&gt;

&lt;p&gt;所有HTTP响应的第一行都是状态行，依次是当前HTTP版本号，3位数字组成的状态代码，以及描述状态的短语，彼此由空格分隔。&lt;/p&gt;

&lt;p&gt;状态代码的第一个数字代表当前响应的类型：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;1xx消息——请求已被服务器接收，继续处理&lt;/li&gt;
&lt;li&gt;2xx成功——请求已成功被服务器接收、理解、并接受&lt;/li&gt;
&lt;li&gt;3xx重定向——需要后续操作才能完成这一请求&lt;/li&gt;
&lt;li&gt;4xx请求错误——请求含有词法错误或者无法被执行&lt;/li&gt;
&lt;li&gt;5xx服务器错误——服务器在处理某个正确请求时发生错误&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;详情参考:&lt;a href=&quot;http://demi-panda.com/2012/11/21/http-status/&quot; target=&quot;_bank&quot; alt=&quot;HTTP状态码&quot;&gt;HTTP状态码&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;HTTP协议-消息报头&lt;/h3&gt;

&lt;p&gt; 　　HTTP消息由客户端到服务器的请求和服务器到客户端的响应组成。请求消息和响应消息都是由开始行（对于请求消息，开始行就是请求行，对于响应消息，开始行就是状态行），消息报头（可选），空行（只有CRLF的行），消息正文（可选）组成。&lt;/p&gt;

&lt;p&gt;HTTP消息报头包括普通报头、请求报头、响应报头、实体报头。
每一个报头域都是由名字+“：”+空格+值 组成，消息报头域的名字是大小写无关的。&lt;/p&gt;

&lt;h4&gt;普通报头&lt;/h4&gt;

&lt;p&gt;在普通报头中，有少数报头域用于所有的请求和响应消息，但并不用于被传输的实体，只用于传输的消息。&lt;/p&gt;

&lt;h4&gt;请求报头&lt;/h4&gt;

&lt;p&gt;请求报头允许客户端向服务器端传递请求的附加信息以及客户端自身的信息。&lt;/p&gt;

&lt;table style=&quot;width:580px&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th style=&quot;width:120px&quot;&gt;参数:&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
      Accept
      &lt;/hd&gt;
      &lt;td&gt;
      Accept请求报头域用于指定客户端接受哪些类型的信息。eg：Accept：image/gif，表明客户端希望接受GIF图象格式的资源；Accept：text/html，表明客户端希望接受html文本。
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      Accept-Charset
      &lt;/hd&gt;
      &lt;td&gt; 
      Accept-Charset请求报头域用于指定客户端接受的字符集。eg：Accept-Charset:iso-8859-1,gb2312.如果在请求消息中没有设置这个域，缺省是任何字符集都可以接受。
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      Accept-Encoding
      &lt;/hd&gt;
      &lt;td&gt; 
      Accept-Encoding请求报头域类似于Accept，但是它是用于指定可接受的内容编码。eg：Accept-Encoding:gzip.deflate.如果请求消息中没有设置这个域服务器假定客户端对各种内容编码都可以接受。
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      Accept-Language
      &lt;/hd&gt;
      &lt;td&gt; 
      Accept-Language请求报头域类似于Accept，但是它是用于指定一种自然语言。eg：Accept-Language:zh-cn.如果请求消息中没有设置这个报头域，服务器假定客户端对各种语言都可以接受。
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      Authorization
      &lt;/hd&gt;
      &lt;td&gt; 
      请求报头域主要用于证明客户端有权查看某个资源。当浏览器访问一个页面时，如果收到服务器的响应代码为401（未授权），可以发送一个包含Authorization请求报头域的请求，要求服务器对其进行验证。
      Host（发送请求时，该报头域是必需的）,Host请求报头域主要用于指定被请求资源的Internet主机和端口号，它通常从HTTP URL中提取出来的
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
    User-Agent
      &lt;/hd&gt;
      &lt;td&gt; 
      User-Agent请求报头域允许客户端将它的操作系统、浏览器和其它属性告诉服务器。不过，这个报头域不是必需的，如果我们自己编写一个浏览器，不使用User-Agent请求报头域，那么服务器端就无法得知我们的信息了。
      &lt;/td&gt;
    &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;h4&gt;响应报头&lt;/h4&gt;

&lt;p&gt;响应报头允许服务器传递不能放在状态行中的附加响应信息，以及关于服务器的信息和对Request-URI所标识的资源进行下一步访问的信息。&lt;/p&gt;

&lt;table style=&quot;width:580px&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th style=&quot;width:120px&quot;&gt;参数:&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
      Location
      &lt;/hd&gt;
      &lt;td&gt;
      Location响应报头域用于重定向接受者到一个新的位置。Location响应报头域常用在更换域名的时候。
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      Server
      &lt;/hd&gt;
      &lt;td&gt; 
      Server响应报头域包含了服务器用来处理请求的软件信息。与User-Agent请求报头域是相对应的。eg:Server：Apache-Coyote/1.1
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      WWW-Authenticate
      &lt;/hd&gt;
      &lt;td&gt; 
        WWW-Authenticate响应报头域必须被包含在401（未授权的）响应消息中，客户端收到401响应消息时候，并发送Authorization报头域请求服务器对其进行验证时，服务端响应报头就包含该报头域。
        eg：WWW-Authenticate:Basic realm=&quot;Basic Auth Test!&quot;  //可以看出服务器对请求资源采用的是基本验证机制。
      &lt;/td&gt;
    &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;h4&gt;实体报头&lt;/h4&gt;

&lt;p&gt;请求和响应消息都可以传送一个实体。一个实体由实体报头域和实体正文组成，但并不是说实体报头域和实体正文要在一起发送，可以只发送实体报头域。实体报头定义了关于实体正文（eg：有无实体正文）和请求所标识的资源的元信息。&lt;/p&gt;

&lt;table style=&quot;width:580px&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th style=&quot;width:120px&quot;&gt;参数:&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
      Content-Encoding
      &lt;/hd&gt;
      &lt;td&gt;
      实体报头域被用作媒体类型的修饰符，它的值指示了已经被应用到实体正文的附加内容的编码，因而要获得Content-Type报头域中所引用的媒体类型，必须采用相应的解码机制。Content-Encoding这样用于记录文档的压缩方法，eg：Content-Encoding：gzip
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      Content-Language
      &lt;/hd&gt;
      &lt;td&gt; 
      实体报头域描述了资源所用的自然语言。没有设置该域则认为实体内容将提供给所有的语言阅读者。eg：Content-Language:en
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
        Content-Length
      &lt;/hd&gt;
      &lt;td&gt; 
      实体报头域用于指明实体正文的长度，以字节方式存储的十进制数字来表示。
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
        Content-Length
      &lt;/hd&gt;
      &lt;td&gt; 
      实体报头域用于指明实体正文的长度，以字节方式存储的十进制数字来表示。
      &lt;/td&gt;
    &lt;/tr&gt;
 &lt;tr&gt;
      &lt;td&gt;
      Content-Type
      &lt;/hd&gt;
      &lt;td&gt; 
      实体报头域用语指明发送给接收者的实体正文的媒体类型。eg：
      Content-Type:text/html;charset=ISO-8859-1
      &lt;/td&gt;
    &lt;/tr&gt;
 &lt;tr&gt;
      &lt;td&gt;
      Last-Modified
      &lt;/hd&gt;
      &lt;td&gt; 
      实体报头域用于指示资源的最后修改日期和时间。
      &lt;/td&gt;
    &lt;/tr&gt;
 &lt;tr&gt;
      &lt;td&gt;
      Expires
      &lt;/hd&gt;
      &lt;td&gt; 
      实体报头域给出响应过期的日期和时间。
      &lt;/td&gt;
    &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;h3&gt;HTTPResponse代码实现&lt;/h3&gt;

&lt;pre id=&quot;java&quot;&gt;
package com.cpy.nio.broker.http;

import static com.cpy.nio.broker.utils.Utils.*;
import java.io.*;
import java.nio.ByteBuffer;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.TimeZone;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.zip.GZIPInputStream;

public class HttpResponse {

  public static final byte[] ST_OK = &quot;200 OK\r\n&quot;.getBytes();
  private byte[] status;
  private ArrayList&lt;String&gt; keys = new ArrayList&lt;String&gt;();
  private ArrayList&lt;String&gt; values = new ArrayList&lt;String&gt;();
  public static final SimpleDateFormat gmtdf;
  public ByteBuffer buffer;
  private int contentOffset;
  private int contentLength;
  private int iread;
  public int versionRange;
  public int statusRange;
  public int reasonRange;

  static {
    gmtdf = new SimpleDateFormat(&quot;EEE, dd MMM yyyy hh:mm:ss&quot;);
    gmtdf.setTimeZone(TimeZone.getTimeZone(&quot;GMT:00&quot;));
  }

  public HttpResponse() {
    this(ST_OK);
  }

  public HttpResponse(byte[] statusb) {
    this.status = statusb;
    this.buffer = ByteBuffer.allocate(64 * 102400);
  }

  public void setStatus(String statusMsg) {
    if (!statusMsg.endsWith(&quot;\r\n&quot;)) {
      statusMsg = statusMsg + &quot;\r\n&quot;;
    }
    this.status = statusMsg.getBytes();
  }

  public HttpResponse(String statusMsg) {
    this();
    this.setStatus(statusMsg);
  }

  public HttpResponse addField(String key, String value) {
    this.keys.add(key);
    this.values.add(value);
    return this;
  }

  public HttpResponse addField(String key, int valRange) {
    this.keys.add(key);
    this.values.add(this.extractRange(valRange));
    return this;
  }

  public void readFrom(EndPoint endpoint) throws Exception {
    this.iread = 0;
    this.readHeader(endpoint);
    this.readBody(endpoint);
  }

  private void readHeader(EndPoint endpoint) throws Exception {

    int headerLength = 0;
    int n;
    do {
      n = this.readLine(endpoint); // includes 2 bytes for CRLF
      headerLength += n;
    } while (n &gt; 2); // until blank line (CRLF)
    // dumpBuffer(buffer);
    HttpResponseParser.initHeader(this, headerLength);
    this.contentOffset = headerLength; // doesn't mean there's necessarily
    // any content.
    String cl = this.getHeader(&quot;Content-Length&quot;);
    if (cl.length() &gt; 0) {
      try {
        this.contentLength = Integer.parseInt(cl);
      } catch (NumberFormatException nfe) {
        throw new IOException(&quot;Malformed Content-Length hdr&quot;);
      }
    } else if (this.getHeader(&quot;Transfer-Encoding&quot;).indexOf(&quot;chunked&quot;) &gt;= 0
            || this.getHeader(&quot;TE&quot;).indexOf(&quot;chunked&quot;) &gt;= 0) {
      this.contentLength = -1;
    } else {
      this.contentLength = 0;
    }
  }

  private int readLine(EndPoint endpoint) throws Exception {
    int ireadSave = this.iread;
    int i = ireadSave;
    while (true) {
      int end = this.buffer.position();
      byte[] bufa = this.buffer.array();
      for (; i &lt; end; i++) {
        if (bufa[i] == CR) {
          ++i;
          if (i &gt;= end) {
            this.buffer = endpoint.fill(this.buffer, 1);
            bufa = this.buffer.array(); // fill could have changed
            // the buffer.
            end = this.buffer.position();
          }
          if (bufa[i] != LF) {
            throw new IOException(&quot;Expected LF at &quot; + i + &quot; but was &quot; + bufa[i]);
            // ++i;
            // continue;
          }
          ++i;
          int lineLength = i - ireadSave;
          this.iread = i;
          return lineLength;
        }
      }
      this.buffer = endpoint.fill(this.buffer, 1); // no CRLF found. fill
      // a bit more and start
      // over.
    }
  }

  private void readBody(EndPoint endpoint) throws Exception {
    this.iread = this.contentOffset;
    if (this.contentLength &gt; 0) {
      this.fill(endpoint, this.contentOffset, this.contentLength);
      this.iread = this.contentOffset + this.contentLength;
    } else if (this.contentLength == -1) {
      this.readAllChunks(endpoint);
    }
    this.readTrailers(endpoint);
  }

  private void readTrailers(EndPoint endpoint) {
  }

  private void fill(EndPoint endpoint, int offset, int size) throws Exception {
    int total = offset + size;
    int currentPos = this.buffer.position();
    if (total &gt; this.buffer.position()) {
      this.buffer = endpoint.fill(this.buffer, (total - currentPos));
    }
  }

  private void readAllChunks(EndPoint endpoint) throws Exception {
    IntList chunkRanges = new IntList(); // alternate numbers in this list
    // refer to the start and end
    // offsets of chunks.
    try {
      do {
        int n = this.readLine(endpoint); // read chunk size text into
        // buffer
        int beg = this.iread;
        int size = parseChunkSize(this.buffer, this.iread - n, this.iread); // Parse
        // size
        // in
        // hex,
        // ignore
        // extension

        if (size == 0) {
          break;
        }
        // If the chunk has not already been read in, do so
        this.fill(endpoint, this.iread, size + 2 /* chunksize + CRLF */);
        // record chunk start and end
        chunkRanges.add(beg);
        chunkRanges.add(beg + size); // without the CRLF
        this.iread += size + 2; // for the next round.
      } while (true);
    } catch (Throwable e) {
      e.printStackTrace();
    }

    // / consolidate all chunkRanges
    if (chunkRanges.numElements == 0) {
      this.contentLength = 0;
      return;
    }
    this.contentOffset = chunkRanges.get(0); // first chunk's beginning
    int endOfLastChunk = chunkRanges.get(1); // first chunk's end

    byte[] bufa = this.buffer.array();
    for (int i = 2; i &lt; chunkRanges.numElements; i += 2) {
      int beg = chunkRanges.get(i);
      int chunkSize = chunkRanges.get(i + 1) - beg;
      System.arraycopy(bufa, beg, bufa, endOfLastChunk, chunkSize);
      endOfLastChunk += chunkSize;
    }

    this.contentLength = endOfLastChunk - this.contentOffset;
    // At this point, the contentOffset and contentLen give the entire
    // content
  }

  /**
   * Get the value for a given key
   *
   * @param key
   * @return null if the key is not present in the header.
   */
  public String getHeader(String key) {
    for (int i = 0; i &lt; this.keys.size(); i++) {
      if (key.equalsIgnoreCase(this.keys.get(i))) {
        return this.values.get(i);
      }
    }
    return &quot;&quot;; // no point returning null
  }

  public void setContentLength(long length) {
    this.addField(&quot;Content-Length&quot;, Long.toString(length));
  }

  public void setContentType(String contentType) {
    this.addField(&quot;Content-Type&quot;, contentType);
  }

  public String status() {
    return this.extractRange(this.statusRange);
  }

  public String reason() {
    return this.extractRange(this.reasonRange);
  }

  private String extractRange(int range) {
    int beg = range &gt;&gt; 16;
    int end = range &amp; 0xFFFF;
    return this.extractRange(beg, end);
  }

  public String extractRange(int beg, int end) {
    try {
      return new String(this.buffer.array(), beg, (end - beg), &quot;UTF-8&quot;);
    } catch (Exception e) {
      e.printStackTrace();
    }
    return null;
  }
  private static final Pattern charsetRegex = Pattern.compile(&quot;charset=([0-9A-Za-z-]+)&quot;);

  public String charset() {
    String contentType = this.getHeader(&quot;Content-Type&quot;);
    String charset = null;
    Matcher matcher = this.charsetRegex.matcher(contentType);
    if (matcher.find()) {
      charset = matcher.group(1);
    } else {
      charset = &quot;utf-8&quot;;
    }
    return charset;
  }

  /**
   * Get the response content
   *
   * @return
   */
  public String content() {
    if (this.isGZipContent()) {
      return this.uncompress(this.buffer.array(), this.contentOffset, this.contentLength);
    } else {
      try {
        return new String(this.buffer.array(), this.contentOffset, this.contentLength, this.charset());
      } catch (UnsupportedEncodingException e) {
        throw new RuntimeException(e);
      }
    }

  }

  /**
   * Check if contents are gzip compressed.
   *
   * @return
   */
  public boolean isGZipContent() {
    final String encoding = this.getHeader(&quot;Content-Encoding&quot;);
    if (null != encoding) {
      if (encoding.toLowerCase().indexOf(&quot;gzip&quot;) &gt; -1) {
        return true;
      }
    }
    return false;
  }

  /**
   * Uncompress the content
   *
   * @param buf
   * @param offset
   * @param length
   * @return
   */
  private String uncompress(byte[] buf, int offset, int length) {

    InputStream is = null;
    GZIPInputStream gzin = null;
    InputStreamReader isr = null;
    BufferedReader br = null;
    StringBuilder sb = new StringBuilder();
    try {
      is = new ByteArrayInputStream(buf, offset, length);
      gzin = new GZIPInputStream(is);
      isr = new InputStreamReader(gzin, this.charset());
      br = new BufferedReader(isr);
      char[] buffer = new char[4096];
      int readlen = -1;
      while ((readlen = br.read(buffer, 0, 4096)) != -1) {
        sb.append(buffer, 0, readlen);
      }
    } catch (Exception e) {
      e.printStackTrace();
    } finally {
      try {
        br.close();
      } catch (Exception e1) {
        // ignore
      }
      try {
        isr.close();
      } catch (Exception e1) {
        // ignore
      }
      try {
        gzin.close();
      } catch (Exception e1) {
        // ignore
      }
      try {
        is.close();
      } catch (Exception e1) {
        // ignore
      }
    }
    return sb.toString();
  }
}
&lt;/pre&gt;


&lt;h3&gt;HTTPResponse代码实现-EndPoint&lt;/h3&gt;

&lt;pre id=&quot;java&quot;&gt;
package com.cpy.nio.broker.http;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class EndPoint {
  static final int YIELD_COUNT = 4;
  private Logger logger = LoggerFactory.getLogger(EndPoint.class);
  
  private SocketChannel socketChannel;

  public EndPoint(SocketChannel socketChannel) {
    this.socketChannel = socketChannel;
  }

  public ByteBuffer fill(ByteBuffer buf, int atLeast) throws Exception {
    if (buf.remaining() &lt; atLeast) {
      ByteBuffer newByteBuffer = ByteBuffer.allocate(Math.max(buf.capacity() * 3 / 2, buf.position() + atLeast));
      buf.flip();
      newByteBuffer.put(buf);
      buf = newByteBuffer;
    }
    SocketChannel ch = this.socketChannel;
    if (!ch.isOpen()) {
      //throw new EOFException();
      logger.warn(&quot;EOFException SocketChannel is close.&quot;);
    }
    int yieldCount = 0;
    do {
      int n = ch.read(buf);
      if (n == 0) {
        //break;
        //TODO:在程序压力大的情况下有可能socket的接受数据无法正常响应过来,结果导致n==0,原来使用break,但是会导致数据丢失,就会产生\u0000,
        //解决方案：使当前处理的线程从执行状态转换成可执行状态,处理3次,如果3次都为0,则表示读取完成
        if (++yieldCount &lt; YIELD_COUNT) {
          Thread.currentThread().yield();
        }
      }
      if (n == -1 &amp;&amp; this != null) {
        this.close();
        break;
      }
      atLeast -= n;

    } while (atLeast &gt; 0);

    return buf;
  }

  public void close() {
    try {

      this.socketChannel.close();
    } catch (Exception e) {
      e.printStackTrace();
    }
  }
}
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2013/01/21/http-response/index.html</link>
            <guid>http://demi-panda.com/2013/01/21/http-response/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[HTTPRequest实现详解 ]]></title>
            <pubDate>Mon, 21 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;  　　HTTP是一个属于应用层的面向对象的协议，由于其简捷、快速的方式，适用于分布式超媒体信息系统。它于1990年提出，经过几年的使用与发展，得到不断地完善和扩展。目前在WWW中使用的是HTTP/1.0的第六版，HTTP/1.1的规范化工作正在进行之中，而且HTTP-NG(Next Generation of HTTP)的建议已经提出。&lt;/p&gt;

&lt;h3&gt;HTTP协议的主要特点&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;支持客户/服务器模式。&lt;/li&gt;
&lt;li&gt;简单快速：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。&lt;/li&gt;
&lt;li&gt;灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。&lt;/li&gt;
&lt;li&gt;无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。&lt;/li&gt;
&lt;li&gt;无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;HTTP协议-URL&lt;/h3&gt;

&lt;p&gt;  　　http（超文本传输协议）是一个基于请求与响应模式的、无状态的、应用层的协议，常基于TCP的连接方式，HTTP1.1版本中给出一种持续连接的机制，绝大多数的Web开发，都是构建在HTTP协议之上的Web应用。&lt;/p&gt;

&lt;p&gt;HTTP URL (URL是一种特殊类型的URI，包含了用于查找某个资源的足够的信息)的格式如下:&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
http://host[&quot;:&quot;port][abs_path]
&lt;/pre&gt;


&lt;p&gt;&lt;strong&gt;URL-解释:&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;http表示要通过HTTP协议来定位网络资源；&lt;/li&gt;
&lt;li&gt;host表示合法的Internet主机域名或者IP地址；&lt;/li&gt;
&lt;li&gt;port指定一个端口号，为空则使用缺省端口80；&lt;/li&gt;
&lt;li&gt;abs_path指定请求资源的URI；如果URL中没有给出abs_path，那么当它作为请求URI时，必须以“/”的形式给出，通常这个工作浏览器自动帮我们完成。&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;例如;&lt;br&gt;
1、输入：www.guet.edu.cn&amp;lt;br?
浏览器自动转换成：http://www.guet.edu.cn/&lt;br&gt;
2、http:192.168.0.116:8080/index.jsp &lt;br&gt;&lt;/p&gt;

&lt;h3&gt;HTTP协议-请求&lt;/h3&gt;

&lt;p&gt;http请求由三部分组成，分别是：请求行、消息报头、请求正文&lt;/p&gt;

&lt;h3&gt;请求行&lt;/h3&gt;

&lt;p&gt;请求行以一个方法符号开头，以空格分开，后面跟着请求的URI和协议的版本，格式如下：Method Request-URI HTTP-Version CRLF&lt;/p&gt;

&lt;p&gt;其中 Method表示请求方法；Request-URI是一个统一资源标识符；HTTP-Version表示请求的HTTP协议版本；CRLF表示回车和换行（除了作为结尾的CRLF外，不允许出现单独的CR或LF字符）。&lt;/p&gt;

&lt;h4&gt;请求方法&lt;/h4&gt;

&lt;table style=&quot;width:580px&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th style=&quot;width:120px&quot;&gt;请求方法:&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
      GET
      &lt;/hd&gt;
      &lt;td&gt;
      请求获取Request-URI所标识的资源
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      POST
      &lt;/hd&gt;
      &lt;td&gt; 
      在Request-URI所标识的资源后附加新的数据
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      HEAD
      &lt;/hd&gt;
      &lt;td&gt; 
      请求获取由Request-URI所标识的资源的响应消息报头
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      PUT
      &lt;/hd&gt;
      &lt;td&gt; 
      请求服务器存储一个资源，并用Request-URI作为其标识
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      DELETE
      &lt;/hd&gt;
      &lt;td&gt; 
      请求服务器删除Request-URI所标识的资源
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      TRACE
      &lt;/hd&gt;
      &lt;td&gt; 
      请求服务器回送收到的请求信息，主要用于测试或诊断
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      CONNECT
      &lt;/hd&gt;
      &lt;td&gt; 
      保留将来使用
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      OPTIONS
      &lt;/hd&gt;
      &lt;td&gt; 
      请求查询服务器的性能，或者查询与资源相关的选项和需求
      &lt;/td&gt;
    &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;p&gt;strong&gt;举例：&lt;/strong&gt;
GET方法：在浏览器的地址栏中输入网址的方式访问网页时，浏览器采用GET方法向服务器获取资源，&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
GET /form.html HTTP/1.1 (CRLF)
&lt;/pre&gt;


&lt;p&gt;POST方法要求被请求服务器接受附在请求后面的数据，常用于提交表单&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
POST /reg.jsp HTTP/ (CRLF)
Accept:image/gif,image/x-xbit,... (CRLF)
...
HOST:www.guet.edu.cn (CRLF)
Content-Length:22 (CRLF)
Connection:Keep-Alive (CRLF)
Cache-Control:no-cache (CRLF)
&lt;/pre&gt;


&lt;p&gt;请求行和标题必须以&lt;CR&gt;&lt;LF&gt;作为结尾（也就是，回车然后换行）。空行内必须只 有&lt;CR&gt;&lt;LF&gt;而无其他空格。在HTTP/1.1协议中，所有的请求头，除Host外，都是可选的。
user=admin&amp;amp;pwd=1234  //此行以下为提交的数据&lt;/p&gt;

&lt;h3&gt;请求头部&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/2013/01/21/http-response/&quot; alt=&quot;HTTP请求报头&quot; target=&quot;_bank&quot;&gt;请求报头&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;请求正文&lt;/h3&gt;

&lt;p&gt;请求正文(省略)&lt;/p&gt;

&lt;h3&gt;HTTP协议-版本号&lt;/h3&gt;

&lt;p&gt;超文本传输协议已经演化出了很多版本，它们中的大部分都是&lt;a href=&quot;http://zh.wikipedia.org/zh-cn/%E5%90%91%E4%B8%8B%E5%85%BC%E5%AE%B9&quot; alt=&quot;&quot; target=&quot;_bank&quot;&gt;向下兼容&lt;/a&gt;的。在&lt;a href=&quot;http://tools.ietf.org/html/rfc2145&quot; target=&quot;_bank&quot; alt=&quot;RFC_2145&quot;&gt;RFC 2145&lt;/a&gt;中描述了HTTP版本号的用法。客户端在请求的开始告诉 服务器它采用的协议版本号，而后者则在响应中采用相同或者更早的协议版本。&lt;/p&gt;

&lt;h4&gt;0.9&lt;/h4&gt;

&lt;p&gt;已过时。只接受GET一种请求方法，没有在通讯中指定版本号，且不支持请求头。由于该版本不支持POST方法，因此客户端无法向服务器传递太多信 息。&lt;/p&gt;

&lt;h4&gt;HTTP/1.0&lt;/h4&gt;

&lt;p&gt;这是第一个在通讯中指定版本号的HTTP协议版本，至今仍被广泛采用，特别是在&lt;a href=&quot;http://zh.wikipedia.org/zh-cn/%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8&quot; alt=&quot;代理服务器&quot; target=&quot;_bank&quot;&gt;代理服务器&lt;/a&gt;中。&lt;/p&gt;

&lt;h4&gt;HTTP/1.1&lt;/h4&gt;

&lt;p&gt;当前版本。持久连接被默认采用，并能很好地配合代理服务器工作。还支持以&lt;a href=&quot;http://zh.wikipedia.org/zh-cn/HTTP%E7%AE%A1%E7%BA%BF%E5%8C%96&quot; alt=&quot;管道方式&quot; target=&quot;_bank&quot;&gt;管道方式&lt;/a&gt;在同时发送多个请求，以便降低线路负载，提高传输速度。&lt;/p&gt;

&lt;h4&gt;HTTP/1.1相较于HTTP/1.0协议的区别&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;缓存处理&lt;/li&gt;
&lt;li&gt;带宽优化及网络连接的使用&lt;/li&gt;
&lt;li&gt;错误通知的管理&lt;/li&gt;
&lt;li&gt;消息在网络中的发送&lt;/li&gt;
&lt;li&gt;互联网地址的维护&lt;/li&gt;
&lt;li&gt;安全性及完整性&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;HTTPRequest实现代码&lt;/h3&gt;

&lt;pre id=&quot;java&quot;&gt;
package com.cpy.nio.broker.http;

import com.cpy.nio.broker.buffer.ByteBufferOutputStream;
import static com.cpy.nio.broker.utils.Utils.*;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.net.URL;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.List;

public final class HttpRequest {

  public static final String GET_METHOD = &quot;GET&quot;;
  public static final String POST_METHOD = &quot;POST&quot;;
  private String method;
  private String path;
  private List&lt;Header&gt; headers = new ArrayList&lt;Header&gt;();
  private byte[] body;
  private String version;
  private String host;

  public boolean keepAlive() {
    if (headers.isEmpty()) {
      return true;
    }
    for (Header nv : headers) {
      if (nv.getName().equalsIgnoreCase(CONN_DIRECTIVE)
              &amp;&amp; nv.getValue().toLowerCase().indexOf(&quot;close&quot;) &gt; -1) {
        return false;
      }
    }
    return true;
  }

  public String getHost() {
    return host;
  }

  public HttpRequest(URL url, String method, String version) {
    String query = &quot;&quot;;
    if (url.getQuery() != null &amp;&amp; url.getQuery().length() &gt; 0) {
      query = &quot;?&quot; + url.getQuery();
    }
    this.method = method;
    this.version = version;
    this.host = url.getHost() + ((url.getPort() != -1) ? (&quot;:&quot; + url.getPort()) : &quot;&quot;);
    this.path = url.getPath() + query;

    if (path == null || path.length() == 0) {
      this.path = &quot;/&quot;;
    }

    addHeader(new Header(&quot;Host&quot;, host));
    addHeader(new Header(&quot;User-Agent&quot;, &quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.97 Safari/537.11&quot;));
    addHeader(new Header(&quot;Accept-Charset&quot;,&quot;ISO-8859-1,utf-8;q=0.7,*;q=0.3&quot;));
    addHeader(new Header(&quot;Accept-Encoding&quot;, &quot;&quot;));
    addHeader(new Header(&quot;Connection&quot;, &quot;close&quot;));

  }

  public HttpRequest(URL url, String method) {
    this(url, method, HTTP_1_1);
  }

  public void addHeader(Header header) {
    headers.add(header);
  }

  public void setBody(byte[] body) {
    this.body = body;
  }

  public ByteBuffer toBuffer() throws IOException {
    ByteBufferOutputStream bufferStream = new ByteBufferOutputStream();
    writeTo(bufferStream);
    return bufferStream.toByteBuffer();
  }

  private void writeTo(OutputStream os) throws IOException {
    DataOutputStream dos = new DataOutputStream(os);
    dos.write(method.toUpperCase().getBytes());
    dos.write(&quot; &quot;.getBytes());
    dos.write(path.getBytes());
    dos.write(&quot; &quot;.getBytes());
    dos.write(version.getBytes());
    dos.write(CR);
    dos.write(LF);

    dos.write(TARGET_HOST.getBytes());
    dos.write(&quot;: &quot;.getBytes());
    dos.write(host.getBytes());
    dos.write(CR);
    dos.write(LF);

    if (!headers.isEmpty()) {
      for (Header e : headers) {
        dos.write(e.getName().getBytes());
        dos.write(&quot;: &quot;.getBytes());
        dos.write(e.getValue().getBytes());
        dos.write(CR);
        dos.write(LF);
      }
    }

    if (body != null) {
      dos.write(CONTENT_LEN.getBytes());
      dos.write(&quot;: &quot;.getBytes());
      dos.write(body.length);
      dos.write(CR);
      dos.write(LF);
    }

    dos.write(CR);
    dos.write(LF);

    if (body != null) {
      dos.write(body);
    }

  }
}
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2013/01/21/http-request/index.html</link>
            <guid>http://demi-panda.com/2013/01/21/http-request/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[魅力女人修成法 ]]></title>
            <pubDate>Sun, 20 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/pub/woman.jpg&quot; alt=&quot;魅力女人&quot; rel=&quot;prettyPhoto[201301201537]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/pub/woman.jpg&quot; width=&quot;330px&quot; alt=&quot;魅力女人&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;女人&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;不要当三瓶女人：年轻时是花瓶，中年时是醋瓶，老年时是药瓶。&lt;/li&gt;
&lt;li&gt;不要只做三转女人：围着锅台转，围着老公转，围着孩子转。&lt;/li&gt;
&lt;li&gt;女人一成不变，男人一定会变！因为男人挣钱女人花，太太不舍得花，一定会有别的女人替你花！千万别做男 人不喜欢的三心女人：留在家里放心，想起来伤心，看着恶心。世界上没有丑女人，只有懒女人！&lt;/li&gt;
&lt;li&gt;要做三独立的女人：思想独立、能力独立、经济独立！&lt;/li&gt;
&lt;li&gt;三养女人：修养，涵养、保养！&lt;/li&gt;
&lt;li&gt;三丽女人：美丽、能力、魅力！ 因为女人是：20岁比脸蛋，30岁比身段，40岁比韵味，50岁比健康，60岁比财富！&lt;/li&gt;
&lt;li&gt;女人可以长得不漂亮，但是绝对不能让自己的人生不漂亮！&lt;/li&gt;
&lt;li&gt;20岁以前长得不漂亮，不是自己的过错。20岁以后不漂亮，就是自己的错！&lt;/li&gt;
&lt;li&gt;要想得到别人的爱，首先就是要自己爱自己！ 因为，漂亮的女人象宝石，但是花有几日红，岁月不饶人！而智慧的女人象宝藏，男人愿意一辈子去挖掘！&lt;/li&gt;
&lt;li&gt;行走在智慧中的女人最美丽，而要得到智慧就要参与一个智慧的环境，在里面学习提高，只有学习，才不会被淘汰！因为竞争太激烈了，已经竞争到家庭了！...&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;女人修炼&lt;/h3&gt;

&lt;p&gt;一个中心：以健康为中心。&lt;br&gt;
两个基本点：潇洒点、糊涂点。&lt;br&gt;
三个忘记：忘记年龄、忘记病痛、忘记恩怨。&lt;br&gt;
四个拥有：老公、居所、积蓄、老友。&lt;br&gt;
五个要：要唱、要跳、要掉（肉）、要俏、要笑。&lt;br&gt;
六不要：饿了才吃、渴了才喝、困了才睡、累了才休、老了才炼(运动)&lt;br&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2013/01/20/glamour-woman/index.html</link>
            <guid>http://demi-panda.com/2013/01/20/glamour-woman/index.html</guid>
            <author>网络文章</author>
        </item>

        
        <item>
            <title><![CDATA[魅力男人应该有的样子 ]]></title>
            <pubDate>Sun, 20 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/pub/man.jpg&quot; alt=&quot;魅力男人&quot; rel=&quot;prettyPhoto[20130120153723]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/pub/man.jpg&quot; width=&quot;330px&quot; alt=&quot;魅力男人&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;男人&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;一定要有一个男人的样子，利利索索、痛痛快快，千万不要扭扭捏捏、婆婆妈妈。&lt;/li&gt;
&lt;li&gt;要懂得保护女人和尊重女人，尤其是后者，千万不要强迫她做她不愿意的事情，不要打女人，无论她伤过你还是骗过你……&lt;/li&gt;
&lt;li&gt;要说话算话，吐出去的东西再咽回来，自己都会觉得恶心。&lt;/li&gt;
&lt;li&gt;可以不帅，但是一定要有风度，要有修养，要有内涵，要有底蕴，男人可以丑，但决不能丑陋。&lt;/li&gt;
&lt;li&gt;可以不用才高八斗，学富五车，但是应该有自己的一技之长，无论怎样，你总要养家糊口&lt;/li&gt;
&lt;li&gt;要有自己的目标和追求，人也就这一辈子，头顶的天都是一样的，你可以失败，但是不能自甘平庸。&lt;/li&gt;
&lt;li&gt;要有责任感，无论是对事业还是对家庭，无论是对父母妻儿还是朋友兄弟，都要担当起自己的职责，自私自利的不是好男人，推脱逃避的不是男人！&lt;/li&gt;
&lt;li&gt;还应该强悍，社会上鱼龙混杂，充满了危机和诱惑，意志力不够坚定，很容易被击败，被打垮。一个随随便便就会被击败打垮的人，其他一切也无从谈起，也无需谈起。&lt;/li&gt;
&lt;li&gt;应该学会赚钱，千万不要以为攒钱可以发家致富，钱都是赚出来的，而不是攒出来的……&lt;/li&gt;
&lt;li&gt;要勤奋果敢，天道酬勤的道理已属老生常谈，而自己觉得对的事情就要努力去做。&lt;/li&gt;
&lt;li&gt;要沉稳冷静，沉稳，是男人区别于男孩的标志，而冷静，可以让你最大限度发挥优势，降低风险，也让你显得更加成熟&lt;/li&gt;
&lt;li&gt;不要习惯于解释。做了就是做了，无论好坏成败，都是自己做的，解释这东西是最最没用的，你想当初干吗去了！再者，有些时候，沉默确实是金。 做 一个男人，一个真正的男人，顶天立地，纵横四海！！&lt;/li&gt;
&lt;/ol&gt;



 ]]></description>
            <link>http://demi-panda.com/2013/01/20/glamour-man/index.html</link>
            <guid>http://demi-panda.com/2013/01/20/glamour-man/index.html</guid>
            <author>网络文章</author>
        </item>

        
        <item>
            <title><![CDATA[Ubuntu root 权限详解 ]]></title>
            <pubDate>Thu, 17 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;   　　Ubantu是一个比较大的Linux发行版本，而其中有关Linux root权限的问题很值得讨论。新接触ubuntu的人（base on debian），大多会因为安装中没有提示root密码而不太清楚为什么会这样。根据ubuntu的中文文档，总结了本文，看过之后肯定会清楚有关 Ubantu Linux root权限的问题。&lt;/p&gt;

&lt;h3&gt;如何设定/改变/启用 root 使用者的密码?&lt;/h3&gt;

&lt;h6&gt;启用 root 帐号 (也就是 设置一个口令)&lt;/h6&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo passwd root
[sudo] password for denghp: 
Enter new UNIX password: 
Retype new UNIX password: 
passwd: password updated successfully
&lt;/pre&gt;


&lt;h6&gt;root 帐号禁用&lt;/h6&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo passwd -l root
passwd: password expiry information changed.
#验证是否禁用
$ sudo - 
#或者
$ sudo root
Password: 
su: Authentication failure #输入正确密码，提示失败，表示已经禁用
&lt;/pre&gt;


&lt;h3&gt;如何在终端机模式下切换到 root 身份?&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo -
#或者
$ sudo root
Password: #在这注明您的密码&gt;缺省禁止 root 的好处包括了以下内容.
&lt;/pre&gt;


&lt;ol&gt;
&lt;li&gt;起初 Ubuntu 的开发团队团队希望安装尽可能的简单. 不设置 root ,这样在安装过程中,用户的设置可以剩掉.&lt;/li&gt;
&lt;li&gt;如果在安装中设置了 root, 用户将被要求永远记住他们设置的密码--即使很少使用到. 对 Unix 安全模型不熟悉的用户经常忘记 Root 密码.&lt;/li&gt;
&lt;li&gt;它防止了在默认登录时,进行一些容易影响到系统目录或系统设置之类的操作,或一些对系统稳定或安全有影响的操作,将被提示输入口令,这可以使你考虑你这样做的结果. 如果你作为 root 登录, 你的这些操作,将不会被提示,但如果你的操作错误，那时已经就没得救拉.它是让长时间使用 &quot;su-command-^D&quot;操作,来代替一直在root shell下工作的,除非你做重大的系统维护 (那时你仍然可以使用 &quot;sudo su&quot;).&lt;/li&gt;
&lt;li&gt;Sudo 增加了对运行命令的日志记录 (在 /var/log/auth.log). 如果陷入困境, 总是可以返回并看见那些运行的命令.&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;安全问题&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
与传统的 superuser 模型相比，这种方法有不同的利弊，两者都不总是好的.
&lt;/li&gt;
&lt;li&gt;
在鼓励使用 root 权限执行一个单独的命令, sudo 好过打开一个 shell
&lt;/li&gt;
&lt;li&gt;
减少使用 root 权限的时间总耗用, 降低了不注意使用 root 执行命令的风险
&lt;/li&gt;
&lt;li&gt;提供了有用的审核痕迹&lt;/li&gt;
&lt;li&gt;有一个单独的 root 密码 (传统模型) 提供了一层额外的保护，当如果一个管理员的密码被侵害时。&lt;/li&gt;
&lt;li&gt;无论怎样, 如果管理员 (使用 sudo 或 su 变成 root) 被侵害, 攻击者一般可以通过一次间接的攻击来获得 root&lt;/li&gt;
&lt;/ol&gt;



 ]]></description>
            <link>http://demi-panda.com/2013/01/17/ubuntu-root-authority/index.html</link>
            <guid>http://demi-panda.com/2013/01/17/ubuntu-root-authority/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Linux下如何修改终端提示符？ ]]></title>
            <pubDate>Thu, 17 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　Linux终端大家想必都清楚吧，最近在使用的时候发现在进入到某个文件夹目录比较深的层次后，终端提示的绝对路径很长，这样给人的感觉很不习惯，在这里给大家介绍下如何修改终端的提示，顺便介绍下提示符的颜色:&lt;/p&gt;

&lt;h3&gt;PS1变量简介&lt;/h3&gt;

&lt;p&gt;PS1是Linux终端用户的一个环境变量，用来说明命令行提示符的设置。&lt;/p&gt;

&lt;p&gt;可以使用 man bash命令查看bash手册，找到该变量支持的特殊字符，以及这些特殊字符的意义：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
\d ：#代表日期，格式为weekday month date，例如：&quot;Mon Aug 1&quot;   
\H ：#完整的主机名称。   
\h ：#仅取主机的第一个名字，如上例，则为fc4，.linux则被省略   
\t ：#显示时间为24小时格式，如：HH：MM：SS   
\T ：#显示时间为12小时格式   
\A ：#显示时间为24小时格式：HH：MM   
\u ：#当前用户的账号名称   
\v ：#BASH的版本信息   
\w ：#完整的工作目录名称。家目录会以 ~代替   
\W ：#利用basename取得工作目录名称，所以只会列出最后一个目录 
\# ：#下达的第几个命令   
\$ ：#提示字符，如果是root时，提示符为：# ，普通用户则为：$  
&lt;/pre&gt;


&lt;h3&gt;修改终端提示符&lt;/h3&gt;

&lt;p&gt;查看默认提示符设置&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ echo $PS1
\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\u@\h:\w\$
&lt;/pre&gt;


&lt;p&gt;修改默认设置,将如下命令添加到当前登录用户的~/.bashrc文件中,然后使用source使其生效，如果有不明白~/.bashrc文件作用的，可以参考我的这篇文章介绍：&lt;a href=&quot;http://demi-panda.com/2012/11/22/bash-profile/&quot; target=&quot;_bank&quot;&gt;.bash_profile .bashrc profile 文件的作用的执行顺序&lt;/a&gt;&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ vi ~/.bashrc
#在文件最后添加如下设置
export PS1=&quot;[\u@\h \W] \$ &quot;
$ source ~/.bashrc #使其设置生效
&lt;/pre&gt;


&lt;h3&gt;颜色设置&lt;/h3&gt;

&lt;p&gt;在PS1中设置字符序列颜色的格式为：[\e[F;Bm]&lt;/p&gt;

&lt;p&gt;其中“F”为字体颜色，编号30~37；“B”为背景色，编号40~47。&lt;/p&gt;

&lt;p&gt;下面看下颜色表：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
 前景   背景      颜色
 ------------------------
 30      40      黑色   
 31      41      红色   
 32      42      绿色   
 33      43      黄色   
 34      44      蓝色   
 35      45      紫红色   
 36      46      青蓝色   
 37      47      白色  
 &lt;/pre&gt;


&lt;p&gt;效果控制代码：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
代码              意义   
-------------------------   
0                 OFF   
1                 高亮显示   
4                 underline   
5                 闪烁   
7                 反白显示   
8                 不可见  
&lt;/pre&gt;


&lt;h3&gt;修改提示符颜色示例&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ PS1=&quot;\[\e[32m\]#\##\[\e[1;31m\]\u@\[\e[36m\]\h \w]\$\[\e[m\&quot;
&lt;/pre&gt;


&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;‘\[\e[32m\]’用来设置‘#\##’的颜色为绿色，#\##就是显示现在运行的是第几条命令&lt;/li&gt;
&lt;li&gt;‘[\e[31m\]’设置‘\u@’的颜色为红色并高亮显示，如果指定多个数字需要用分号隔开。\u@ 就是当前登录的用户名后跟一个‘@’符号。&lt;/li&gt;
&lt;li&gt;‘\[\e[36m\]’设置‘\h\w’为青蓝色，\h表示主机名的第一位，如果主机名为centos6.lampbo.org，那么就显示centos6；\w将显示完整的绝对路径。&lt;/li&gt;
&lt;li&gt;‘\$’ 提示字符，如果是root时，提示符为：# ，普通用户则为：$。&lt;/li&gt;
&lt;li&gt;‘\[\e[m\]’使用来关闭颜色设置的。要是你没有这个的话；那么，你的命令提示符，包括你通过命令提示符输出的东西都是和最后一次的颜色设置相同。&lt;/li&gt;
&lt;li&gt;为了能够在启动和登录是可以保持刚刚设置的变量，需要将PS1的设置加入到用户home目录的.bashrc文件后。&lt;/li&gt;
&lt;/ol&gt;



 ]]></description>
            <link>http://demi-panda.com/2013/01/17/linux-update-terminal-suggest/index.html</link>
            <guid>http://demi-panda.com/2013/01/17/linux-update-terminal-suggest/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Shell脚本实现监控指定进程负载 ]]></title>
            <pubDate>Wed, 16 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt; 　　在Linux下监控的工具还真不少，并且非常强大，各有各的好处，但是也有一定缺陷，要想使其达到自己想要的功能，就得自己花点时间啦。
Linux下大家都知道TOP这个命令工具，可以查看系统的负载。但是却无法将监控的数据存储下来，最近用shell写了一个小程序，对自己有点帮助吧。&lt;/p&gt;

&lt;h3&gt;监控程序功能支持&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;基于TOP的工具实现&lt;/li&gt;
&lt;li&gt;支持监控系统的负载，并格式化存储到文件中&lt;/li&gt;
&lt;li&gt;支持监控单个进程的负载,并格式化存储到文件中&lt;/li&gt;
&lt;li&gt;支持时间间隔监控，比如2秒钟监控一次&lt;/li&gt;
&lt;li&gt;利用存储的数据,可以生成图表&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;Shell脚本监控程序代码&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
#!/bin/sh
#用于监控系统cpu及内存等信息
#用法: mytop [pid] [sleeptime (option)] [log_alias (option)]
#参数：pid (必须)  如果需要监控系统性能，那么请将[pid]设置为0
#      sleeptime (可选) 单位为秒,默认1秒
#      log_alias (可选) 默认为top.log


curr_dir=`pwd`
dir=$curr_dir
log_name=top.log
#sleep time (sec)
sleep_time=1

if [ -z $1 ] ; then
  echo 'Usage: mytop [pid] [sleeptime (option)] [log_alias (option)]'
  echo 'system monitor : [pid] = 0'
  exit &quot;Missing paramters!&quot;
fi

if [ -z $2 ] ; then
 echo &quot;sleep $sleep_time &quot;
  else
    sleep_time=$2
 echo &quot;sleep $sleep_time &quot;
fi

if [ -z $3 ] ; then
 echo &quot;to $log_name &quot;
  else
 log_name=top_$3.log 
 echo &quot;to $log_name &quot;
fi

       if [ &quot;$1&quot; != &quot;0&quot; ] ; then
       echo 'PID USER PR  NI  VIRT RES  SHR S %CPU %MEM TIME+' &gt;&gt; $dir/$log_name
       fi

while true
  do
       if [ &quot;$1&quot; = &quot;0&quot; ] ; then
            nowtime=`date +%Y-%m-%d' '%H:%M:%S`
            echo $nowtime &gt;&gt; $dir/$log_name 
            top -b  -n 1 | grep  &quot;top - \|Tasks\|Cpu(s)\|Mem\|Swap&quot; &gt;&gt; $dir/$log_name
            sleep  $sleep_time
            echo &quot;----------------------------------------------------------&quot; &gt;&gt; $dir/$log_name 
       else
             nowtime=`date +%Y-%m-%d' '%H:%M:%S`
             top -p $1 -d 1 -b -c  -n 1 | grep $1 | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11}'  &gt;&gt; $dir/$log_name
#             echo $nowtime &gt;&gt; $dir/$log_name 
             sleep  $sleep_time
       fi
  done
&lt;/pre&gt;


&lt;h3&gt;存储日志格式&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
PID USER PR  NI  VIRT RES  SHR S %CPU %MEM TIME+
10515 root 20 0 905m 338m 11m S 92 16.9 0:06.24
10515 root 20 0 905m 248m 11m S 0 12.4 0:06.59
10515 root 20 0 905m 248m 11m S 0 12.4 0:06.59
10515 root 20 0 905m 248m 11m S 0 12.4 0:06.59
10515 root 20 0 905m 248m 11m S 0 12.4 0:06.59
10515 root 20 0 905m 248m 11m S 0 12.4 0:06.60
10515 root 20 0 905m 248m 11m S 0 12.4 0:06.60
10515 root 20 0 905m 248m 11m S 0 12.4 0:06.61
10515 root 20 0 905m 248m 11m S 4 12.4 0:06.63
10515 root 20 0 905m 287m 11m S 107 14.4 0:08.14
10515 root 20 0 905m 364m 11m S 0 18.2 0:08.73
10515 root 20 0 905m 364m 11m S 2 18.2 0:08.74
10515 root 20 0 905m 364m 11m S 0 18.2 0:08.76
10515 root 20 0 905m 364m 11m S 0 18.2 0:08.77
&lt;/pre&gt;


&lt;h3&gt;生成报告&lt;/h3&gt;

&lt;p&gt;这里需要人工手动复制数据到excel中生成图表，呵呵
&lt;img src=&quot;http://demi-panda.com/media/pub/linux/mytop.jpg&quot; width=&quot;560px&quot;  alt=&quot;mytop&quot; &gt;&lt;/img&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2013/01/16/shell-monitor/index.html</link>
            <guid>http://demi-panda.com/2013/01/16/shell-monitor/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[单元测试规范 ]]></title>
            <pubDate>Wed, 16 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt; 　　本规范适合开发人员在产品开发时上进行单元测试时使用的参考手册，基于JTestCase+Junit基础上的架构，
可以给开发人员的研发工作上提供高效、可靠、正确、简单的达到产品高质量。&lt;/p&gt;

&lt;h3&gt;适用对象&lt;/h3&gt;

&lt;p&gt; 　　本文档适用于在公司各产品、项目上构建应用的测试框架，适用于系统构建工程师、软件工程师、系统测试人员等相关使用者使用。要求这些人员能够具备使用Java开发应用的技能。&lt;/p&gt;

&lt;h3&gt;版本说明&lt;/h3&gt;

&lt;p&gt; 　　本手册基于JTestCase4.0+Junit4.8版本而编写，随着公司产品本身的不断升级，本手册也会不断进行扩展、更新。届时请关注本节说明。&lt;/p&gt;

&lt;h3&gt;参考文档&lt;/h3&gt;

&lt;p&gt;1、JDK开发文档&lt;br&gt;
2、JUINT 4.8 API 开发文档&lt;br&gt;
3、YOYO单元测试框架使用手册&lt;br&gt;
4、测试用例编码规范&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;规范的使用场景说明，即目的&lt;/h3&gt;

&lt;p&gt;1、规范是为了检查开发过程中尽可能早的发现问题，让程序员编写的代码有个纸面上的评估及确认.&lt;br&gt;
2、规范是为了便于维护后期开发代码，进行正确性检查的依据。&lt;br&gt;
3、    使用JTestCase+Junit测试框架&lt;br&gt;
4、    结合ANT脚本执行测试程序&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;规范的范围&lt;/h3&gt;

&lt;p&gt;1、规范适用于整个项目的开发过程，其中单元测试代码规范应该参考。&lt;br&gt;
2、规范适用于整个项目的阶段性功能代码结束后进行集成测试，性能，压力测试的说明。&lt;br&gt;
3、规范适用于整个项目完成后，进行安装测试的说明。&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;单元测试分类&lt;/h3&gt;

&lt;h4&gt;接口测试&lt;/h4&gt;

&lt;p&gt;1、针对被测接口的输入、输出参数&lt;br&gt;
2、被测接口的异常及异常信息是否合理&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;持久层类方法测试&lt;/h4&gt;

&lt;p&gt;1、结构化数据、非结构化数据的持久化测试&lt;br&gt;
2、结构化数据使用SQL语句测试，保证SQL语句参数的灵活性、对持久化的数据进行确认，事务的可靠性等&lt;br&gt;
3、非结构化数据保证非结构化数据的准确性，事务的可靠性，如：文件大小、内容是否丢失、以及一些结构化数据的准确性等&lt;br&gt;
4、数据确认流程：调用持久测试方法，对应调用查询测试方法进行数据确认&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;工具类方法、帮助类方法&lt;/h4&gt;

&lt;p&gt;1、被测工具方法、帮助类方法的作用及要达到的目的&lt;br&gt;
2、被测试方法的输入、输出参数的是否合理&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;业务过程类方法&lt;/h4&gt;

&lt;p&gt;1、业务过程类方法测试首先设计TestCase，考虑各种因素设计不同的TestCase&lt;br&gt;
2、被测方法的安全性，指的是要考虑多线程情况下如何设计测试用例及方法代码编写&lt;br&gt;
3、业务逻辑的被测方法的覆盖率&lt;br&gt;
4、被测试方法中的成员变量的安全性、&lt;br&gt;
5、被测试方法中的for、while等逻辑处理是否正常退出&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;外部系统类方法、属性文件读写类方法&lt;/h4&gt;

&lt;p&gt;1、外部系统类方法的被测方法输入、输出参数、异常的准确行性&lt;br&gt;
2、被测方法的安全性等&lt;br&gt;
3、属性文件读写类的被测试方法是否支持多个实例、参数的输入、输出&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;异常测试&lt;/h4&gt;

&lt;p&gt;1、轻量级错误测试&lt;br&gt;
2、系统是否异常终止？&lt;br&gt;
3、系统是否输出异常信息？&lt;br&gt;
4、抛出的异常被谁捕获处理？&lt;br&gt;
5、程序是否正常的退出而不是崩溃？&lt;br&gt;
6、测试信息内容&lt;br&gt;
错误码是否符合设计？&lt;br&gt;
错误信息是否准确的反应了错误原因？&lt;br&gt;
错误信息是否通俗易懂？&lt;br&gt;
错误信息是否能定位出错位置？&lt;br&gt;
错误信息中是否包含了不要的其他信息？&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;测试用例编写规范&lt;/h3&gt;

&lt;h4&gt;常规测试用例&lt;/h4&gt;

&lt;p&gt;1、对于功能的一个模块，每个数据类型输入项或选取典型的取值，生成用例&lt;br&gt;
2、参数的类型输入生成用例&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;初始化测试用例&lt;/h4&gt;

&lt;p&gt;1、针对功能模块，一些初始化的功能数据，确保所有的初始化数据正确。&lt;/p&gt;

&lt;h4&gt;边界的测试用例&lt;/h4&gt;

&lt;p&gt;1、针对每个参数项，生成一个边界用例&lt;br&gt;
2、字符串参数的长度&lt;br&gt;
3、布尔值数据的所有取值&lt;br&gt;
4、集合参数，或null&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;空值的测试用例&lt;/h4&gt;

&lt;p&gt;1、对于每个必填数据项,都生成一个用例(不提供空值的除外,比如无空值的下拉框、有缺省值的单选按钮组),则预期结果提示该数据项为空&lt;/p&gt;

&lt;h4&gt;格式化错误的测试用例&lt;/h4&gt;

&lt;p&gt;1、对于每个参数项，都生成一个用例，预期结果提示该数据项格式错误日期格式、数值、字符串：Email、邮编、用户名格式等&lt;/p&gt;

&lt;h4&gt;溢出的测试用例&lt;/h4&gt;

&lt;p&gt;1、对于参数项，都生成一个取值范围外的测试用例,预期结果提示该数据项超出范围&lt;/p&gt;

&lt;h4&gt;唯一值的测试用例&lt;/h4&gt;

&lt;p&gt;1、根据某业务设计某字段是唯一，预期结果提示该数据已经存在&lt;/p&gt;

&lt;h4&gt;权限的测试用例&lt;/h4&gt;

&lt;p&gt;1、对于功能模块，生成一个用例，生成有权限和没用权限的身份访问，预期结果提示权限不足等&lt;/p&gt;

&lt;h4&gt;角色权限的测试用例&lt;/h4&gt;

&lt;p&gt;1、业务功能流程涉及一到多个角色,对于每个角色,都生成一个用例,预期结果为用户以这个角色登陆时,他仅能执行权限允许的操作&lt;/p&gt;

&lt;h3&gt;测试工作指导&lt;/h3&gt;

&lt;h4&gt;开发阶段单元测试步骤&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;编写TestCase&lt;/strong&gt;
1、    创建测试类，每个被测试类对应一个测试类，测试需继承AbstractTestCase基类，便于统一管理及初始化基本参数，也可以直接继承Junit框架的TestCase&lt;br&gt;
2、    测试类需要按照统一的命名方式如Testxxx.java,便于统一管理&lt;br&gt;
3、    添加无参构造函数，使用JTestCase初始化数据源，也可以直接在基类中初始化，但是要保证JTestCase的实例是唯一的，否则会覆盖其他的实例&lt;br&gt;
4、    测试用例编写遵循上述原则，编写合适的测试用例，数据源在xml中配置，示例&lt;/p&gt;

&lt;pre id=&quot;java&quot;&gt;
/** 
   *
   * 初始化JTestCase实例
   *
   */
  public TestDocument()
  {
    try {
      jtestcase = new JTestCase(data[0], data[1]);
    } catch (FileNotFoundException e) {
      e.printStackTrace();
    } catch (JTestCaseException e) {
      e.printStackTrace();
    }   
  }
  
 /** 
   *
   *测试抛出的异常是否属于正常
   *
   */
  public void testDeleteCheckException() throws JTestCaseException
  {
    log.info(&quot;methodName : &quot; + methods[1]);
    getTestCases(methods[1], jtestcase);
    for (int i = 0; i &lt; testcases.size(); i++) {
      // 获取testcase实例及每个testcase中的参数
      TestCaseInstance instance = (TestCaseInstance) testcases
        .elementAt(i);
      try {
        params = instance.getTestCaseParams();
        Long docId = (Long) params.get(&quot;doc_id&quot;);
        // 执行test方法
        int code = docService.deleteDoc(docId);
      } catch (IllegalArgumentException ex) {
        log.debug(&quot;IllegalArgumentException&quot; + ex.getMessage());
        // 进行实际测试结果与测试数据中定义的预期结果进行断言
        assertResult = instance.assertTestVariable(expectedResult,
            ex.getMessage());
        assertTrue(instance.getFailureReason(), assertResult);
      }
    }
  }
&lt;/pre&gt;


&lt;h4&gt;准备测试数据&lt;/h4&gt;

&lt;p&gt;1、    测试数据源的统一格式以xml格式定义&lt;br&gt;
2、    数据源定义规则参考YOYO单元测试框架使用文档&lt;br&gt;
3、    测试数据源名称统一使用小写，都以testxxx.xml形式&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;ANT脚本编写规范&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;1、build-test脚本规范及格式&lt;/strong&gt;&lt;br&gt;
1、命名以build-test.xml为基准&lt;br&gt;
2、属性格式&lt;br&gt;&lt;/p&gt;

&lt;pre id=&quot;xml&quot;&gt;
* xx 属性，【必须】
* 1. name: xx, 如：test.dir
* 2. value: xx, 如：junit.xml
* 例子：
*       &amp;lt;property name=&quot;test.reports.xml.dir&quot; value=&quot;${test.reports.dir}/junit-xml&quot; /&amp;gt;
&lt;/pre&gt;


&lt;p&gt;3、target属性&lt;/p&gt;

&lt;pre id=&quot;xml&quot;&gt;
&amp;lt;!-- 
  * target 元素 test-xxx
  * 1、name 属性 taget name
  * 2、depends 属性 引用其他target
  * junit 元素 
  * 1、printsummary 打印出测试用例的信息
  * 2、haltonfailure 停止测试过程中失败的用例
  * 3、showoutput 将测试过程中输出信息发送给ant日志记录系统
  * 4、batchtest 执行测试类                                                                                                                                  
  * 其他属性请参考http://ant.apache.org/manual/Tasks/junit.html
 --&amp;gt;
&lt;/pre&gt;


&lt;p&gt;&lt;strong&gt;2、build-test脚本规范及格式&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;

&lt;pre id=&quot;xml&quot;&gt;
 &amp;lt;target name=&quot;test-api-document&quot; depends=&quot;compile-test-api&quot;&amp;gt;
   &amp;lt;junit printsummary=&quot;yes&quot; haltonfailure=&quot;no&quot;  showoutput=&quot;true&quot;&amp;gt;
     &amp;lt;classpath refid=&quot;test.classpath&quot; /&amp;gt;
     &amp;lt;formatter type=&quot;xml&quot; /&amp;gt;
      &amp;lt;!— 执行测试的测试类 --&amp;gt;
   &amp;lt;test name=&quot;com.yoyosys.smartstorage.test.TestDocument&quot; todir=&quot;${test.reports.xml.today}&quot;/&amp;gt;
   &amp;lt;/junit&amp;gt;
   &amp;lt;junitreport todir=&quot;${test.reports.html.today}&quot;&amp;gt;
     &amp;lt;fileset dir=&quot;${test.reports.xml.today}&quot;&amp;gt;
       &amp;lt;include name=&quot;*.xml&quot; /&amp;gt;
     &amp;lt;/fileset&amp;gt;
     &amp;lt;report format=&quot;frames&quot; todir=&quot;${test.reports.html.today}&quot; /&amp;gt;
   &amp;lt;/junitreport&amp;gt;
 &amp;lt;/target&amp;gt;
&lt;/pre&gt;


&lt;p&gt;&lt;strong&gt;3、测试所有类的执行脚本示例如：&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;

&lt;pre id=&quot;xml&quot;&gt;
 &amp;lt;target name=&quot;test-api-all&quot; depends=&quot;compile-test-api&quot;&amp;gt;
   &amp;lt;junit printsummary=&quot;yes&quot; haltonfailure=&quot;no&quot;  showoutput=&quot;true&quot;&amp;gt;
     &amp;lt;classpath refid=&quot;test.classpath&quot; /&amp;gt;
     &amp;lt;formatter type=&quot;xml&quot; /&amp;gt;
     &amp;lt;batchtest fork=&quot;yes&quot; todir=&quot;${test.reports.xml.today}&quot;&amp;gt;
       &amp;lt;fileset dir=&quot;${src.test.api}&quot; includes=&quot;com/yoyosys/smartstorage/test/Test*.java&quot;/&amp;gt;
     &amp;lt;/batchtest&amp;gt;
   &amp;lt;/junit&amp;gt;
   &amp;lt;!-- 生成日期命名的测试报告--&amp;gt;
   &amp;lt;junitreport todir=&quot;${test.reports.html.today}&quot;&amp;gt;
     &amp;lt;fileset dir=&quot;${test.reports.xml.today}&quot;&amp;gt;
       &amp;lt;include name=&quot;*.xml&quot; /&amp;gt;
     &amp;lt;/fileset&amp;gt;
     &amp;lt;report format=&quot;frames&quot; todir=&quot;${test.reports.html.today}&quot; /&amp;gt;
   &amp;lt;/junitreport&amp;gt;
 &amp;lt;/target&amp;gt;
&lt;/pre&gt;


&lt;h4&gt;使用ANT执行测试，生成测试报告&lt;/h4&gt;

&lt;p&gt;1、    ANT执行的方法 ant -f build-test.xml target &lt;br&gt;
2、    测试报告在第3点编写build脚本已经实现，也可以只在需要生成报告时添加&lt;br&gt;
3、    执行所有的测试类并生成报告如：ant -f build-test.xml test-api-all&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;使用Cobertura测试代码覆盖率&lt;/h4&gt;

&lt;p&gt;1、    引用cobertura-xxx.jar包 &lt;br&gt;&lt;/p&gt;

&lt;pre id=&quot;xml&quot;&gt;
&amp;lt;property name=&quot;cobertura.dir&quot; value=&quot;${env.YOYO_SVN_HOME}/app/java/cobertura/cobertura-1.9.4.1&quot; /&amp;gt; 
&lt;/pre&gt;


&lt;p&gt;2、设置classpath&lt;br&gt;&lt;/p&gt;

&lt;pre id=&quot;xml&quot;&gt;
&amp;lt;path id=&quot;test.classpath&quot; &amp;gt; 
 &amp;lt;fileset dir=&quot;${cobertura.dir}&quot;&amp;gt;
     &amp;lt;include name=&quot;cobertura.jar&quot; /&amp;gt;
     &amp;lt;include name=&quot;lib/**/*.jar&quot; /&amp;gt;
   &amp;lt;/fileset&gt;
&amp;lt;/path&gt;
&lt;/pre&gt;


&lt;p&gt;3、cobertura的全局属性文件 &lt;br&gt;&lt;/p&gt;

&lt;pre id=&quot;xml&quot;&gt;
&amp;lt;taskdef classpathref=&quot;test.classpath&quot; resource=&quot;tasks.properties&quot;/&amp;gt;
&lt;/pre&gt;


&lt;p&gt;4、编写测试覆盖率的脚本，请参考build-test.xml中的示例&lt;br&gt;
5、代码覆盖率执行方法 ant -f build-test.xml coverage&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;回归测试流程如下&lt;/h3&gt;

&lt;p&gt;1、测试流程步骤如上 &lt;br&gt;
2、参考规范列表，如测试流程手册，TestLink使用手册，Bugzilla使用手册。&lt;br&gt;
3、准备帐号，向Lead申请测试帐号&lt;br&gt;
4、根据测试用例设计规范准备TestCase&lt;br&gt;
5、根据测试记录填写&lt;br&gt;
6、提交测试，修改bug，进行反馈的机制。规定如何填写好测试反馈，以及解决方案&lt;br&gt;
7、总结测试报告&lt;br&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2013/01/16/java-Unit-testing/index.html</link>
            <guid>http://demi-panda.com/2013/01/16/java-Unit-testing/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[BlockingQueue实现生产者-消费者模式 ]]></title>
            <pubDate>Tue, 15 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　生产者消费者问题是一个著名的线程同步问题，该问题描述如下：有一个生产者在生产产品，这些产品将提供给若干个消费者去消费，
为了使生产者和消费者能并发执行，在两者之间设置一个具有多个缓冲区的缓冲池，生产者将它生产的产品放入一个缓冲区中，消费者可
以从缓冲区中取走产品进行消费，显然生产者和消费者之间必须保持同步，即不允许消费者到一个空的缓冲区中取产品，也不允许生产者
向一个已经放入产品的缓冲区中再次投放产品。&lt;/p&gt;

&lt;p&gt;　　本例介绍一个特殊的队列：BlockingQueue，如果BlockingQueue是空的，从BlockingQueue取东西的操作将会被阻断进入 等待状态，
直到BlockingQueue进了东西才会被唤醒，同样，如果BlockingQueue是满的，任何试图往里存东西的操作也会被阻断进入等 待状态，直到BlockingQueue里有空间时才会被唤醒继续操作。&lt;/p&gt;

&lt;p&gt;　　本例再次实现前面介绍的篮子程序，不过这个篮子中最多能放得苹果数不是1，可以随意指定。当篮子满时，生产者进入等待状态，当篮子空时，
消费者等待。&lt;/p&gt;

&lt;h3&gt;BlockingQueue定义的常用方法如下&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;add(anObject)：把anObject加到BlockingQueue里，如果BlockingQueue可以容纳，则返回true，否则抛出异常。 &lt;/li&gt;
&lt;li&gt;offer(anObject)：表示如果可能的话，将anObject加到BlockingQueue里，即如果BlockingQueue可以容纳，则返回true，否则返回false。 &lt;/li&gt;
&lt;li&gt;put(anObject)：把anObject加到BlockingQueue里，如果BlockingQueue没有空间，则调用此方法的线程被阻断直到BlockingQueue里有空间再继续。&lt;/li&gt;
&lt;li&gt;poll(time)：取走BlockingQueue里排在首位的对象，若不能立即取出，则可以等time参数规定的时间，取不到时返回null。 &lt;/li&gt;
&lt;li&gt;take()：取走BlockingQueue里排在首位的对象，若BlockingQueue为空，阻断进入等待状态直到BlockingQueue有新的对象被加入为止。 &lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;BlockingQueue有四个具体的实现类，根据不同需求，选择不同的实现类&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
ArrayBlockingQueue : 规定大小的BlockingQueue，其构造函数必须带一个int参数来指明其大小。其所含的对象是以FIFO（先入先出）顺序排序的。 
&lt;/li&gt;
&lt;li&gt;
LinkedBlockingQueue：大小不定的BlockingQueue，若其构造函数带一个规定大小的参数，生成的BlockingQueue 有大小限制，若不带大小参数，所生成的BlockingQueue的大小由Integer.MAX_VALUE来决定。其所含的对象是以FIFO顺序排序 的。 
&lt;/li&gt;
&lt;li&gt;
PriorityBlockingQueue：类似于LinkedBlockingQueue,但其所含对象的排序不是FIFO，而是依据对象的自然排序顺序或者是构造函数所带的Comparator决定的顺序。 
&lt;/li&gt;
&lt;li&gt;
SynchronousQueue：特殊的BlockingQueue，对其的操作必须是放和取交替完成的。 
&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;LinkedBlockingQueue和ArrayBlockingQueue比较起来，它们背后所用的数据结构不一样，导致 LinkedBlockingQueue的数据吞吐量要大于ArrayBlockingQueue，但在线程数量很大时其性能的可预见性低于 ArrayBlockingQueue。&lt;/p&gt;

&lt;h3&gt;代码示例&lt;/h3&gt;

&lt;h4&gt;生产者类&lt;/h4&gt;

&lt;pre id=&quot;java&quot;&gt;
package com.mycom.smart.consumer;

import java.util.concurrent.BlockingQueue;
/**
 * 生产者类
 *
 * @author Denghaiping
 * @version 1.0
 */
public class Fetcher implements Runnable
{
  @SuppressWarnings(&quot;unused&quot;)
  private BlockingQueue&lt;String&gt; queue = null ;

  public Fetcher(BlockingQueue&lt;String&gt; queue)
  {
    this.queue = queue;
  }

  public void run() 
  {
    try {
      while (true) {
        //往queue中添加对象
        queue.put(&quot;segment-name-&quot;+i);
        System.out.println(&quot;ThreadName : &quot;+ Thread.currentThread().getName() +&quot; 抓取完成&quot;);
      }   
    } catch (InterruptedException ex) {
      ex.printStackTrace();    
    }   
  }
}                                                                                                                                                                      
&lt;/pre&gt;


&lt;h4&gt;消费者类&lt;/h4&gt;

&lt;pre id=&quot;java&quot;&gt;
package com.mycom.smart.consumer;

import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;
/**
 * 消费者类
 *
 * @author Denghaiping
 * @version 1.0
 */
public class Indexer implements Runnable
{

  private  BlockingQueue&lt;String&gt; queue ;
  public Indexer(BlockingQueue&lt;String&gt; queue)
  {
    this.queue = queue;
  }

  public void run()
  {
    try {
      while(true) {
        Thread.sleep(1000);
        //从queue中消费对象
        String name = queue.take();
        System.out.println(&quot;ThreadName : &quot; +Thread.currentThread().getName()+ &quot; 索引创建完成 &quot; +name);
      }
    } catch (InterruptedException ex) {
      ex.printStackTrace(); 
    }
  }
} 
&lt;/pre&gt;


&lt;h4&gt;测试类&lt;/h4&gt;

&lt;pre id=&quot;java&quot;&gt;
import java.util.concurrent.*;

/**
 * 测试类
 *
 * @author Denghaiping
 * @version 1.0
 */
public class TestConsumer
{
  private static BlockingQueue&lt;String&gt; queue = new ArrayBlockingQueue&lt;String&gt; (10);
  
  public static void main(String [] args) 
  {
    ExecutorService service = Executors.newCachedThreadPool();  
    Fetcher producer = new Fetcher(queue);  
    Indexer consumer = new Indexer(queue);  
    Indexer consumer1 = new Indexer(queue);  
    service.submit(producer);  
    service.submit(consumer);
    service.submit(consumer1);
    // 程序运行5s后，所有任务停止  
    try {
      Thread.sleep(5000);
    } catch (InterruptedException e) {
      e.printStackTrace();
    }
    //service.shutdownNow();  
  }
}
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2013/01/15/product-consumer/index.html</link>
            <guid>http://demi-panda.com/2013/01/15/product-consumer/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[浏览器的用户脚本管理工具 ]]></title>
            <pubDate>Mon, 14 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt; 　　最近在网上购票的时候，使用了购票助手，当然这些购票助手都是一些热心的IT牛人写的,哈哈，
我们只能站在巨人的肩膀上挖掘更多的价值。这些购票助手的插件都是基于浏览器使用javascript实现的，
自然需要使用用户脚本工具来管理。今天给大家介绍下用户脚本工具使用：&lt;/p&gt;

&lt;h3&gt;用户脚本 UserScript&lt;/h3&gt;

&lt;p&gt; 　　用户脚本（UserScript）是一种强大的客户端（浏览器）Javascript脚本。下载了用户脚本保存在电脑里，
通过浏览器的某些扩展程序（最常用的是Firefox的Greasemonkey扩展），就可以运行于相关页面上。用户脚本可以任意修改HTML页面，
请求其他站点的数据等。比如任意网页上选中了文字，按快捷键就帮你翻译或搜索，把Baidu、Google搜索页重新排版去广告，等等。
介绍可以参见&lt;a href=&quot;http://zh.wikipedia.org/wiki/Greasemonkey&quot; target=&quot;_bank&quot;&gt;维基百科的Greasemonkey条目&lt;/a&gt;。&lt;/p&gt;

&lt;h3&gt;如何使用安装用户脚本&lt;/h3&gt;

&lt;h4&gt;火狐Firefox安装&lt;/h4&gt;

&lt;h6&gt;Greasemonkey扩展&lt;br&gt;&lt;/h6&gt;

&lt;p&gt;&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/748&quot; alt=&quot;Greasemonkey&quot; target=&quot;_bank&quot;&gt;https://addons.mozilla.org/en-US/firefox/addon/748&lt;/a&gt;
官方网站：&lt;br&gt;
&lt;a href=&quot;http://www.greasespot.net/&quot; target=&quot;_bank&quot;&gt;http://www.greasespot.net/&lt;/a&gt;&lt;br&gt;&lt;/p&gt;

&lt;h6&gt;Scriptish扩展：&lt;/h6&gt;

&lt;p&gt;&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/scriptish/&quot; alt=&quot;scriptish&quot; target=&quot;_bank&quot;&gt;https://addons.mozilla.org/en-US/firefox/addon/scriptish/&lt;/a&gt;
官方网站：&lt;br&gt;
&lt;a href=&quot;http://scriptish.org/&quot; alt=&quot;scriptish&quot; target=&quot;_bank&quot;&gt;http://scriptish.org/&lt;/a&gt;&lt;br&gt;
这是Greasemonkey的一个分支项目，使用方式和Greasemonkey差不多&lt;br&gt;&lt;/p&gt;

&lt;h6&gt;安装步骤&lt;/h6&gt;

&lt;ol&gt;
&lt;li&gt;安装火狐浏览器&lt;/li&gt;
&lt;li&gt;
点击打开安装&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/748&quot; alt=&quot;Greasemonkey&quot; target=&quot;_bank&quot;&gt;https://addons.mozilla.org/en-US/firefox/addon/748&lt;/a&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/web/Greasemonkey.jpg&quot; width=&quot;530px&quot;  alt=&quot;Greasemonkey&quot; &gt;&lt;/img&gt;
&lt;/li&gt;

&lt;li&gt;
打开工具-找到附加组件就可以看到自己安装的用户脚本管理工具
&lt;img src=&quot;http://demi-panda.com/media/pub/web/userscript.jpg&quot; width=&quot;530px&quot;  alt=&quot;Greasemonkey&quot; &gt;&lt;/img&gt;
&lt;/li&gt;
&lt;li&gt;
添加用户脚本&lt;br&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/web/add-userscript.jpg&quot; width=&quot;530px&quot;  alt=&quot;Greasemonkey&quot; &gt;&lt;/img&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;h4&gt;Internet Explorer安装&lt;/h4&gt;

&lt;h6&gt;IE7Pro扩展：&lt;/h6&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ie7pro.com/&quot; alt=&quot;&quot; target=&quot;_bank&quot;&gt;http://www.ie7pro.com/&lt;/a&gt;&lt;br&gt;
将*.user.js脚本改为.ieuser.js后缀，放在C:\Program Files\IEPro\userscripts\下，&lt;br&gt;
在IE7Pro的选项的“User Script”面板中启用该脚本。&lt;/p&gt;

&lt;h6&gt;Trixie扩展：&lt;/h6&gt;

&lt;p&gt;&lt;a href=&quot;http://www.bhelpuri.net/Trixie/&quot; alt=&quot;trixie&quot; target=&quot;_bank&quot;&gt;http://www.bhelpuri.net/Trixie/&lt;/a&gt;&lt;br&gt;
把用户脚本放在C:\Program Files\Bhelpuri\Trixie\Scripts文件夹下，&lt;br&gt;
在工具-&gt;Trixie Options（Trixie选项）中点击Reload Scripts（重新载入）按钮，再选中该脚本，即可使用&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;Google Chrome和Chromium 安装&lt;/h3&gt;

&lt;p&gt;Google Chrome和Chromium 安装虽然原生支持用户脚本，但是2012年8月后的新版Google Chrome已不允许直接点击安装用户脚本，会显示“只可添加来自 Chrome 网上应用店的扩展程序、应用和用户脚本。”。解决方法有3种：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
将用户脚本文件.user.js下载到电脑里；点击Google Chrome浏览器工具栏上的扳手图标；选择工具 &gt; 扩展程序；将用户脚本文件.user.js拖动到“扩展程序”页；点击安装即可完成（参考官方帮助&lt;a href=&quot;http://support.google.com/chrome_webstore/bin/answer.py?hl=zh-Hans&amp;hlrm=en&amp;p=crx_warning&amp;answer=2664769&quot; target=&quot;_bank&quot;&gt;《添加来自其他网站的扩展程序》&lt;/a&gt;）
&lt;/li&gt;
&lt;li&gt;
带“ --enable-easy-off-store-extension-install”命令行参数运行Google Chrome（Windows下可以建立chrome.exe的快捷方式，快捷方式属性中的目标文件路径末尾添加“ --enable-easy-off-store-extension-install”，并使用此快捷方式打开Google Chrome），这样网上应用店外的扩展、脚本就像以前一样，再也不会被阻止了；
&lt;/li&gt;
&lt;/ol&gt;



 ]]></description>
            <link>http://demi-panda.com/2013/01/14/userscript-on-various-browsers/index.html</link>
            <guid>http://demi-panda.com/2013/01/14/userscript-on-various-browsers/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[2013 萌猫大收藏 ]]></title>
            <pubDate>Sun, 13 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;前段时间在网上看了&lt;a href=&quot;http://video.baidu.com/v?ct=301989888&amp;rn=20&amp;pn=0&amp;db=0&amp;s=8&amp;word=%C3%C8%C3%A8%C8%FD%BD%A3%BF%CD&amp;fr=ala5&amp;ty=21&quot; alt=&quot;萌猫三剑客&quot; taget=&quot;_bank&quot;&gt;《萌猫三剑客》&lt;/a&gt;小短片，片长:13分钟 又名: 穿靴子的猫之萌猫三剑客,被片中的画面效果给吸引了，制作的很逼真，很形象，哈哈。今天给大家共享自己收集的图片，个人很喜欢。&lt;/p&gt;

&lt;h3&gt;萌猫三剑客&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/photo/kitty-sanjiangke.jpg&quot; alt=&quot;萌猫三剑客&quot; rel=&quot;prettyPhoto[201301101527]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/photo/kitty-sanjiangke.jpg&quot; width=&quot;480px&quot; alt=&quot;萌猫三剑客&quot; &gt;&lt;/img&gt;
&lt;/a&gt;
&lt;a href=&quot;http://demi-panda.com/media/pub/life/photo/kitty-sanjiangke-2.jpg&quot; alt=&quot;萌猫&quot; rel=&quot;prettyPhoto[201301101527]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/photo/kitty-sanjiangke-2.jpg&quot; width=&quot;480px&quot; alt=&quot;萌猫三剑客&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;嗨，看招&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/photo/mengmao-1.jpg&quot; alt=&quot;萌猫-嗨，看招&quot; rel=&quot;prettyPhoto[201301101527]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/photo/mengmao-1.jpg&quot; width=&quot;480px&quot; alt=&quot;萌猫-嗨，看招&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;深情的眼眸&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/photo/mengmao-2.jpg&quot; alt=&quot;深情的眼眸&quot; rel=&quot;prettyPhoto[201301101527]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/photo/mengmao-2.jpg&quot; width=&quot;480px&quot; alt=&quot;深情的眼眸&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;秀一个哆啦A萌&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/photo/mengmao-3.jpg&quot; alt=&quot;秀一个哆啦A萌-萌猫&quot; rel=&quot;prettyPhoto[201301101527]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/photo/mengmao-3.jpg&quot; width=&quot;480px&quot; alt=&quot;秀一个哆啦A萌-萌猫&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;累啦，俺得休息会～&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/photo/mengmao-4.jpg&quot; alt=&quot;累啦，俺得休息会-萌猫&quot; rel=&quot;prettyPhoto[201301101527]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/photo/mengmao-4.jpg&quot; width=&quot;480px&quot; alt=&quot;累啦，俺得休息会-萌猫&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;公爵&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/photo/mengmao-5.jpg&quot; alt=&quot;公爵-萌猫&quot; rel=&quot;prettyPhoto[201301101527]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/photo/mengmao-5.jpg&quot; width=&quot;480px&quot; alt=&quot;公爵-萌猫&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;忧郁&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/photo/mengmao-6.jpg&quot; alt=&quot;忧郁-萌猫&quot; rel=&quot;prettyPhoto[201301101527]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/photo/mengmao-6.jpg&quot; width=&quot;480px&quot; alt=&quot;忧郁-萌猫&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;伪装&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/photo/mengmao-7.jpg&quot; alt=&quot;伪装-萌猫&quot; rel=&quot;prettyPhoto[201301101527]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/photo/mengmao-7.jpg&quot; width=&quot;480px&quot; alt=&quot;伪装-萌猫&quot; &gt;&lt;/img&gt;&lt;/p&gt;

&lt;h3&gt;金猫狮王&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/photo/mengmao-8.jpg&quot; alt=&quot;金猫狮王-萌猫&quot; rel=&quot;prettyPhoto[201301101527]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/photo/mengmao-8.jpg&quot; width=&quot;480px&quot; alt=&quot;金猫狮王-萌猫&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;灰色猫度&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/photo/mengmao-9.jpg&quot; alt=&quot;灰色猫度-萌猫&quot; rel=&quot;prettyPhoto[201301101527]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/photo/mengmao-9.jpg&quot; width=&quot;480px&quot; alt=&quot;灰色猫度-萌猫&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;有一种爱叫：陪伴&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/photo/mengmao-10.jpg&quot; alt=&quot;有一种爱叫：陪伴-萌猫&quot; rel=&quot;prettyPhoto[201301101527]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/photo/mengmao-10.jpg&quot; width=&quot;480px&quot; alt=&quot;有一种爱叫：陪伴-萌猫&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2013/01/13/kitty-collections/index.html</link>
            <guid>http://demi-panda.com/2013/01/13/kitty-collections/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[2013年的空气污染程度你知道吗？ ]]></title>
            <pubDate>Sun, 13 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;  　　2013年元旦过完没多长时间，北京的空气发生了从所未有得变化，10日晚间开始笼罩京城的雾霾仍在继续，12日北京PM2．5指数
濒临“爆表”，空气质量持续六级严重污染。北京环境监测中心专家表示，从污染形势预报的分析结果看，此次影响北京市的重污染过程
在下周一之前不会发生明显改变。&lt;/p&gt;

&lt;h3&gt;北京污染指数&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/pub/4271097954.jpg&quot; alt=&quot;北京空气污染&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/pub/4271097954.jpg&quot; alt=&quot;北京污染指数&quot;  width=&quot;330px&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;北京空气的污染前后比较&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/pub/air-2013.jpg&quot; &gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/pub/air-2013.jpg&quot; alt=&quot;北京天空的污染&quot;  width=&quot;580px&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  　　空气质量指数大多突破400，空气质量级别6级，严重污染。这就是昨天的京城，在市环保局空气质量日报上全市均被代表严重污染的“褐红色”所覆盖。
昨天上午，北京市环保局实施应急方案，监督排污单位减少污染物排放。预计到下周一以前，本市的污染物扩散条件依然不理想，敏感人群和老人、
儿童应尽量避免室外活动。&lt;/p&gt;

&lt;p&gt;  　　12日上午9时的北京空气质量监测数据显示，北京几乎所有区域仍被意味着最严重污染的“深褐色”覆盖，pm2．5指数最高站点为456。&lt;/p&gt;

&lt;p&gt;北京市气象台在继续发布大雾黄色预警的同时，中央气象台12日6时继续发布大雾蓝色预警：河北中南部、天津南部、山东北部和西部、
河南东部、苏皖中北部、浙江西北部、湖北东南部、四川盆地等地的部分地区有能见度不足1000米的雾，局地能见度不足200米。&lt;/p&gt;

&lt;h3&gt;环保局启动应急方案&lt;/h3&gt;

&lt;p&gt;  　　市环保局介绍，按照应急方案，首先通过微博、网络、电视、广播等渠道及时发布空气质量信息，建议市民尽量减少出行和户外停留时间，建议中小学减少户外活动。同时，市环保局组织市、
  区县相关部门加强执法监管，监督相关排污单位减少污染物排放；向公众发出污染减排建议，尽量乘坐公交出行，减少车辆上路行驶。&lt;/p&gt;

&lt;h3&gt;专家释疑&lt;/h3&gt;

&lt;p&gt;  　　中央气象台首席预报员马学款介绍，近期中东部地区出现的雾在气象学上称为辐射雾，其形成原因主要有三点：一是这些地区近地面空气
相对湿度比较大；二没有明显冷空气活动，风力较小，大气层比较稳定；三是天空晴朗少云，有利于夜间的辐射降温，使得近地面原本湿度比
较高的空气饱和凝结形成雾。&lt;/p&gt;

&lt;p&gt;  　　针对大雾天气引发的空气污染问题，马学款说，“一般来说，雾本身不是污染物，但产生雾的大气环境处于比较稳定的状态，
对于空气中的污染物不易向外扩散，容易造成集聚效应，使得空气污染越来越重。”&lt;/p&gt;

&lt;h3&gt;空气污染最严重前10城市曝光&lt;/h3&gt;

&lt;p&gt;  　　环保部今天公布城市空气质量日报，API污染指数最高的前10位城市是，第一名石家庄、第二名邯郸、第三名保定、第四名唐山、第五名天津、第六名郑州、第七名济南、第八名秦皇岛、第九名济宁、第十名乌鲁木齐和武汉并列。此排名不包括PM2.5和臭氧污染指数。&lt;/p&gt;

&lt;h3&gt;小贴士&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;出门戴口罩&lt;/li&gt;
&lt;li&gt;勿做剧烈运动,老人、儿童、呼吸系统疾病和心血管系统疾病患者尽量待在室内,如需外出请缩短外出时间，在室外停留时做好自身防护，如戴口罩等，不要做呼吸量较大的剧烈运动。&lt;/li&gt;
&lt;li&gt;应多喝水，多吃素菜及水果&lt;/li&gt;
&lt;li&gt;注意保暖，别导致感冒&lt;/li&gt;
&lt;/ol&gt;

 ]]></description>
            <link>http://demi-panda.com/2013/01/13/air-pollution-programs-do-you-know/index.html</link>
            <guid>http://demi-panda.com/2013/01/13/air-pollution-programs-do-you-know/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Linux下GBK->UTF-8文件编码批量转换命令 ]]></title>
            <pubDate>Sat, 12 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;   　　在工作中，经常会遇到使用操作系统不一样的环境，从而导致在不同环境下的文件编辑的编码是不一样的，Windows默认是GBK编码格式，Linux默认是UTF-8的格式，这样就会出现把GBK编码的文件拷贝到Linux下出现乱码情况，很是让人头疼，下面给大家介绍下GBK-&gt;UTF-8文件编码批量转换。&lt;/p&gt;

&lt;h3&gt;Linux命令-enca 查看文件的编码&lt;/h3&gt;

&lt;h4&gt;enca语法&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
Usage:  enca [-L LANGUAGE] [OPTION]... [FILE]...
        enconv [-L LANGUAGE] [OPTION]... [FILE]...
        Detect encoding of text files and convert them if required.
&lt;/pre&gt;


&lt;h4&gt;enca用法&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ enca -L zh_CN file 检查文件的编码
$ enca -L zh_CN -x UTF-8 file 将文件编码转换为&quot;UTF-8&quot;编码
$ enca -L zh_CN -x UTF-8 file1 file2 如果不想覆盖原文件可以这样
&lt;/pre&gt;


&lt;p&gt;除了有检查文件编码的功能以外，”enca”还有一个好处就是如果文件本来就是你要转换的那种编码，它不会报错，还是会print出结果来， 而”iconv”则会报错。这对于脚本编写是比较方便的事情。&lt;/p&gt;

&lt;h4&gt;转换单个文件的编码&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ enca -L none -x utf-8  index.html
&lt;/pre&gt;


&lt;h4&gt;转换多个文件的编码&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ enca -x utf-8 *
&lt;/pre&gt;


&lt;h3&gt;Linux文件名编码批量转换--convmv&lt;/h3&gt;

&lt;h4&gt;convmv语法&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ convmv -f 源编码 -t 新编码 [选项] 文件名
&lt;/pre&gt;


&lt;h4&gt;convmv 常用参数&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
-r 递归处理子文件夹
–notest 真正进行操作，请注意在默认情况下是不对文件进行真实操作的，而只是试验。
–list 显示所有支持的编码
–unescap 可以做一下转义，比如把%20变成空格
&lt;/pre&gt;


&lt;h4&gt;示例&lt;/h4&gt;

&lt;p&gt;转换一个文件由GBK转换成UTF-8&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
convmv -f GBK -t UTF-8 --notest utf8 filename
&lt;/pre&gt;


&lt;p&gt;GBK-&gt;UTF-8文件编码批量转换脚本&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ find default -type f -exec convmv -f GBK -t UTF-8 --notest utf8 {} -o utf/{} \;
&lt;/pre&gt;


&lt;h3&gt;使用iconv 转换&lt;/h3&gt;

&lt;h4&gt;iconv语法&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
iconv -f encoding -t encoding inputfile
&lt;/pre&gt;


&lt;h4&gt;示例&lt;/h4&gt;

&lt;p&gt;单个文件转换&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ iconv -f GBK -t UTF-8 file1 -o file2
&lt;/pre&gt;


&lt;p&gt;批量转换&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ find default -type d -exec mkdir -p utf/{} \;
$ find default -type f -exec iconv -f GBK -t UTF-8 {} -o utf/{} \;
&lt;/pre&gt;


&lt;p&gt;这两行命令将default目录下的文件由GBK编码转换为UTF-8编码，目录结构不变，转码后的文件保存在utf/default目录下。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2013/01/12/linux-encoding-convert/index.html</link>
            <guid>http://demi-panda.com/2013/01/12/linux-encoding-convert/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Ubuntu 下如何找回密码？ ]]></title>
            <pubDate>Sat, 12 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt; 　　Ubuntu操作系统已经深得广泛用户的使用，当然对于新手来说想必存在很多问题，今天给大家介绍，如果您忘记了您的Ubuntu操作系统的密码，您可以使用以下步骤恢复：&lt;/p&gt;

&lt;h3&gt;Step 1 打开你的电脑&lt;/h3&gt;

&lt;h3&gt;Step 2 在GRUB提示符下按ESC键&lt;/h3&gt;

&lt;h3&gt;Step 3 在 kernel ......开头的那行按E进行编辑。&lt;/h3&gt;

&lt;h3&gt;Step 4 进入到了最后的行,找到kernel参数在最后加上“init=/bin/bash”&lt;/h3&gt;

&lt;h3&gt;Step 5 按回车键，然后按b键启动您的系统&lt;/h3&gt;

&lt;h3&gt;Step 6 您的系统会启动将进入root shell 而无须任何密码。&lt;/h3&gt;

&lt;h3&gt;Step 7 设置密码&amp;amp;重启&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
#输入 passwd &lt;你的用户名&gt;
Type in passwd username
#设置密码
Set your password.
#输入 reboot 重启后用新密码登陆！
Type in reboot
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2013/01/12/how-to-recover-password-under-ubuntu/index.html</link>
            <guid>http://demi-panda.com/2013/01/12/how-to-recover-password-under-ubuntu/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Ubuntu32位使用4G内存的解决方案 ]]></title>
            <pubDate>Fri, 11 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;  　　新升级系统内存，从原来的2G加到4G，但是在使用命令查看的时候只能看到3291M，今天给大家分享我的解决方案。如下：&lt;/p&gt;

&lt;h3&gt;查看内存 free -m&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ free -m
             total       used       free     shared    buffers     cached
Mem:          3291       801        2489          0        236       95
-/+ buffers/cache:       363       2054
Swap:         1906          0       1906
&lt;/pre&gt;


&lt;p&gt;上面的信息显示，默认32bit的Linux系统只能识别出3291 (3G) 内存，所以如果想在32位的系统上使用大于3G的内存，需要安装Physical Address Extension (PAE) ，在Ubuntu上的具体步骤如下：&lt;/p&gt;

&lt;h3&gt;更新内核&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo apt- get  update  
$ sudo sudo apt-get  install linux-headers-server linux-image-server linux-server  
$ sudo reboot 
&lt;/pre&gt;


&lt;h3&gt;重新启动系统后，查看内存情况&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ free -m  
             total       used       free     shared    buffers     cached  
Mem:          3862       3732        129          0        127       1149  
-/+ buffers/cache:       2455       1406  
Swap:         5720        170       5550  
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2013/01/11/use-4g-memery-in-ubuntu-32bit/index.html</link>
            <guid>http://demi-panda.com/2013/01/11/use-4g-memery-in-ubuntu-32bit/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Linux常用的压力测试工具Apache-ab ]]></title>
            <pubDate>Wed, 09 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;Apache-ab是超文本传输协议(HTTP)的性能测试工具。 其设计意图是描绘当前所安装的Apache的执行性能， 主要是显示你安装的Apache每秒可以处理多少个请求 ab是Apache超文本传输协议(HTTP)的性能测试工具。 其设计意图是描绘当前所安装的Apache的执行性。&lt;/p&gt;

&lt;p&gt;开发人员应该都知道不少的测试工具，这里给大家列几个，找到合适自己的就行。今天给大家主要介绍Apache-AB。&lt;/p&gt;

&lt;h3&gt;功能和性能测试工具AB&lt;/h3&gt;

&lt;p&gt;ab是Apache超文本传输协议(HTTP)的性能测试工具。 其设计意图是描绘当前所安装的Apache的执行性能， 主要是显示你安装的Apache每秒可以处理多少个请求。
&lt;img src=&quot;http://demi-panda.com/media/pub/linux/apache-ab.jpg&quot; alt=&quot;Apache-ab&quot;  width=&quot;560px&quot; /&gt;&lt;/p&gt;

&lt;h5&gt;参数详细介绍&lt;/h5&gt;

&lt;table style=&quot;width:580px&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th style=&quot;width:120px&quot;&gt;参数:&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -A attribute
      &lt;/hd&gt;
      &lt;td&gt;
      对服务器提供BASIC认证信任。 用户名和密码由一个:隔开，并以base64编码形式发送。 无论服务器是否需要(即, 是否发送了401认证需求代码)，此字符串都会被发送。
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -n requests
      &lt;/hd&gt;
      &lt;td&gt; 
      在测试会话中所执行的请求个数。 默认时，仅执行一个请求，但通常其结果不具有代表意义。 
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -c concurrency 
      &lt;/hd&gt;
      &lt;td&gt; 
      一次产生的请求个数。默认是一次一个。
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -t timelimit
      &lt;/hd&gt;
      &lt;td&gt; 
      测试所进行的最大秒数。其内部隐含值是-n 50000。
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -C attribute
      &lt;/hd&gt;
      &lt;td&gt; 
      Add cookie, eg. 'Apache=1234'. (repeatable)
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -H attribute
      &lt;/hd&gt;
      &lt;td&gt; 
      Add Arbitrary header line, eg. 'Accept-Encoding: gzip'
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -i
      &lt;/hd&gt;
      &lt;td&gt; 
      执行HEAD请求，而不是GET。
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -k
      &lt;/hd&gt;
      &lt;td&gt; 
      启用HTTP KeepAlive功能，即, 在一个HTTP会话中执行多个请求。 默认时，不启用KeepAlive功能. 
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -p POST-file
      &lt;/hd&gt;
      &lt;td&gt; 
      包含了需要POST的数据的文件.
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -X proxy[:port] 
      &lt;/hd&gt;
      &lt;td&gt; 
      对请求使用代理服务器。 
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -T content-type 
      &lt;/hd&gt;
      &lt;td&gt; 
      POST数据所使用的Content-type头信息
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -q
      &lt;/hd&gt;
      &lt;td&gt; 
      如果处理的请求数大于150， ab每处理大约10%或者100个请求时，会在stderr输出一个进度计数。 此-q标记可以抑制这些信息。 
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -w 
      &lt;/hd&gt;
      &lt;td&gt; 
      以HTML表的格式输出结果。默认时，它是白色背景的两列宽度的一张表。 
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -e csv-file 
      &lt;/hd&gt;
      &lt;td&gt; 
      产生一个以逗号分隔的(CSV)文件， 其中包含了处理每个相应百分比的请求所需要(从1%到100%)的相应百分比的(以微妙为单位)时间。
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -g gnuplot-file 
      &lt;/hd&gt;
      &lt;td&gt; 
      把所有测试结果写入一个'gnuplot'或者TSV (以Tab分隔的)文件。
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -h
      &lt;/hd&gt;
      &lt;td&gt; 
      显示使用方法。 
      &lt;/td&gt;
    &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;h3&gt;示例&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
[denghp@denghp src] $ ab -n 100 -c 10 http://demi-panda.com/2013/01/02/dongtian-chihuoguo/
This is ApacheBench, Version 2.3 &lt;$Revision: 655654 $&gt;
Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/
Licensed to The Apache Software Foundation, http://www.apache.org/

Benchmarking demi-panda.com (be patient).....done


Server Software:        GitHub.com
Server Hostname:        demi-panda.com
Server Port:            80

Document Path:          /2013/01/02/dongtian-chihuoguo/
Document Length:        28906 bytes

Concurrency Level:      10
Time taken for tests:   40.546 seconds
Complete requests:      100
Failed requests:        0
Write errors:           0
Total transferred:      2918700 bytes #整个场景中的网络传输量
HTML transferred:       2890600 bytes #整个场景中的HTML内容传输量
Requests per second:    2.47 [#/sec] (mean)  #相当于LR 中的 每秒事务数 ，后面括号中的 mean 表示这是一个平均值
Time per request:       4054.636 [ms] (mean) #相当于 LR 中的 平均事务响应时间 ，后面括号中的 mean 表示这是一个平均值
Time per request:       405.464 [ms] (mean, across all concurrent requests) 
Transfer rate:          70.30 [Kbytes/sec] received #平均每秒网络上的流量


#网络上消耗的时间
Connection Times (ms)
              min  mean[+/-sd] median   max
              Connect:      379  566 567.6    401    3510
              Processing:  1553 2728 2375.2   1975   20318
              Waiting:      381  530 894.5    402    9134
              Total:       1954 3294 2402.6   2392   20819

#下面是整个场景中所有请求的响应报告。其中 50％ 的用户响应时间小于 2392 毫秒,最大响应时间是20819毫秒.
Percentage of the requests served within a certain time (ms)
              50%   2392
              66%   3263
              75%   3654
              80%   3793
              90%   5182
              95%   8093
              98%   9811
              99%  20819
              100%  20819 (longest request)

&lt;/pre&gt;


&lt;h3&gt;推荐几款常用的压力测试工具&lt;/h3&gt;

&lt;h5&gt;Loadrunner工业标准级负载测试工具&lt;/h5&gt;

&lt;p&gt;&lt;a href=&quot;http://learnloadrunner.com/&quot; alt=&quot;LoadRunner&quot; taget=&quot;_bank&quot;&gt;LoadRunner &lt;/a&gt;是一种预测系统行为和性能的负载测试工具。通过以模拟上千万用户实施并发负载及实时性能监测的方式来确认和查找问题，LoadRunner 能够对整个企业架构进行测试。通过使用LoadRunner ，企业能最大限度地缩短测试时间，优化性能和加速应用系统的发布周期。&lt;/p&gt;

&lt;p&gt;虽然工具很强大，很多大型的企业和专业人员都会选择它，但是相对小企业的选型就很难选择这么庞大的工具。
&lt;img src=&quot;http://demi-panda.com/media/pub/linux/LoadRunner.jpg&quot; alt=&quot;Loadrunner&quot;  width=&quot;560px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里有一个网站转门介绍了Loadrunner的教材，很全面，有兴趣的可以去学习&lt;a href=&quot;http://www.ltesting.net/ceshi/ceshijishu/rjcsgj/mercury/loadrunner/&quot;&gt;http://www.ltesting.net/ceshi/ceshijishu/rjcsgj/mercury/loadrunner/&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;功能测试工具Rational Robot&lt;/h5&gt;

&lt;p&gt;&lt;a href=&quot;http://www-142.ibm.com/software/products/cn/zh/robot&quot; alt=&quot;Rational&quot; taget=&quot;_bank&quot;&gt;IBM Rational Robot &lt;/a&gt;是业界最顶尖的功能测试工具，它甚至可以在测试人员学习高级脚本技术之前帮助其进行成功的测试。可针对电子商务、客户端/服务器和企业资源规划 (ERP) 应用程序自动执行回归、功能和配置测试。它用于根据各种各样的用户界面技术测试应用程序。该软件与 IBM Rational TestManager 解决方案集成，为所有测试活动提供桌面管理支持。
&lt;img src=&quot;http://demi-panda.com/media/pub/linux/Rational-Robot.png&quot; alt=&quot;Rational-Robot&quot;  width=&quot;560px&quot; /&gt;&lt;/p&gt;

&lt;h5&gt;功能和性能测试的工具JMeter&lt;/h5&gt;

&lt;p&gt;&lt;a href=&quot;http://jmeter.apache.org/&quot; alt=&quot;JMeter&quot; target=&quot;_bank&quot;&gt;JMeter&lt;/a&gt;是Apache组织的开放源代码项目，它是功能和性能测试的工具，100%的用java实现。&lt;/p&gt;

&lt;p&gt;前段时间在针对webservice压力测试就使用了Jmeter，个人比较喜欢。
&lt;img src=&quot;http://demi-panda.com/media/pub/java/json-http-test-plan.jpg&quot; alt=&quot;Jmeter&quot;  width=&quot;560px&quot; /&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2013/01/09/apache-utils-ab/index.html</link>
            <guid>http://demi-panda.com/2013/01/09/apache-utils-ab/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[JSON在线格式化工具 ]]></title>
            <pubDate>Tue, 08 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt; 　　JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。 易于人阅读和编写。同时也易于机器解析和生成。 它基于&lt;a href=&quot;http://www.crockford.com/javascript/&quot; tagert=&quot;_bank&quot;&gt;JavaScript Programming Language&lt;/a&gt;, &lt;a href=&quot;http://www.ecma-international.org/publications/files/ecma-st/ECMA-262.pdf&quot; target=&quot;_bank&quot;&gt;Standard ECMA-262 3rd Edition - December 1999&lt;/a&gt;的一个子集。 JSON采用完全独立于语言的文本格式，但是也使用了类似于C语言家族的习惯（包括C, C++, C#, Java, JavaScript, Perl, Python等）。 这些特性使JSON成为理想的数据交换语言&lt;/p&gt;

&lt;h3&gt;常用的Java JSON开发包&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://jackson.codehaus.org/&quot; target=&quot;_bank&quot;&gt;Jackson&lt;/a&gt; 是一个 Java 用来处理 JSON 格式数据的类库，性能非常好。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/AlibabaTech/fastjson/wiki&quot; target=&quot;_bank&quot;&gt;fastjson&lt;/a&gt; 是一个性能很好的 Java 语言实现的 JSON 解析器和生成器，来自阿里巴巴的工程师开发。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://code.google.com/p/google-gson/&quot; target=&quot;_bank&quot;&gt;Gson&lt;/a&gt; 是 Google 提供的用来在 Java 对象和 JSON 数据之间进行映射的 Java 类库。可以将一个 JSON 字符串转成一个 Java 对象，或者反过来。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://json-lib.sourceforge.net/&quot; target=&quot;_bank&quot;&gt;JSON-lib&lt;/a&gt; 是一个用来映射 JSON 到 Java Bean 的一个 Java 类库。&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;在线格式化工具&lt;a href=&quot;http://www.bejson.com/go.html?u=http://www.bejson.com/index.php&quot; target=&quot;_bank&quot;&gt;Be JSON&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;在开发过程中，基本上都会用到json来传递数据，那么下面给大家介绍一个在线格式化json的工具，非常强大。&lt;br&gt;
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;Be JSON地址:&lt;a href=&quot;http://www.bejson.com/go.html?u=http://www.bejson.com/index.php&quot; alt=&quot;Be JSON&quot; target=&quot;_bank&quot;&gt;http://www.bejson.com/go.html?u=http://www.bejson.com/index.php&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;验证&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://demi-panda.com/media/pub/web/json-validate.jpg&quot; width=&quot;480px&quot;  alt=&quot;json-validate&quot; &gt;&lt;/img&gt;&lt;/p&gt;

&lt;h4&gt;格式化&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://demi-panda.com/media/pub/web/json-format.jpg&quot; width=&quot;380px&quot;  alt=&quot;json-validate&quot; &gt;&lt;/img&gt;&lt;/p&gt;

&lt;h4&gt;编辑&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://demi-panda.com/media/pub/web/josn-enitor-online.jpg&quot; width=&quot;480px&quot;  alt=&quot;json-enitor&quot; &gt;&lt;/img&gt;&lt;/p&gt;

&lt;h4&gt;压缩和传输&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://demi-panda.com/media/pub/web/json-compress.jpg&quot; width=&quot;480px&quot;  alt=&quot;json-compress&quot; &gt;&lt;/img&gt;&lt;/p&gt;

&lt;h4&gt;发送json请求&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://demi-panda.com/media/pub/web/send-json.jpg&quot; width=&quot;480px&quot;  alt=&quot;send-json&quot; &gt;&lt;/img&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2013/01/08/json-format-online/index.html</link>
            <guid>http://demi-panda.com/2013/01/08/json-format-online/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Jmeter http 压力测试使用csv文件发送json数据 ]]></title>
            <pubDate>Tue, 08 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt; 　　Apache JMeter( http://jakarta.apache.org/jmeter/ )是来自 Apache Jakarta 项目的一个压力测试工具, 目前版本2.0.3, JMeter 支持 HTTP, FTP, SOAP/XML-RPC, JDBC 等多种目标的压力测试。
最近在工作中实现了一个webservice，支持json的post请求，使用JMeter来进行压力测试显得就非常简单啦。&lt;/p&gt;

&lt;h3&gt;Step 1 创建测试计划&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://demi-panda.com/media/pub/java/json-http-test-plan.jpg&quot; width=&quot;560px&quot;  alt=&quot;json-http-test-plan&quot; &gt;&lt;/img&gt;&lt;/p&gt;

&lt;h3&gt;Step 2 添加Header Manager&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://demi-panda.com/media/pub/java/json-http-header-manager.jpg&quot; width=&quot;560px&quot;  alt=&quot;json-http-header-manager&quot; &gt;&lt;/img&gt;&lt;/p&gt;

&lt;h3&gt;Step 3 添加CSV&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://demi-panda.com/media/pub/java/json-http-request-csv.jpg&quot; width=&quot;560px&quot;  alt=&quot;json-http-request-csv.jpg&quot; &gt;&lt;/img&gt;&lt;/p&gt;

&lt;p&gt;您需要填写至少3个值：&lt;br&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;文件名：如果您的文件在/bin目录中，这可能是仅仅是文件名。如果是在别的地方，使用该文件的完整路径。&lt;/li&gt;
&lt;li&gt;变量名：这相当于在电子表格中的“列名”。&lt;/li&gt;
&lt;li&gt;分隔符：逗号是默认的分隔符，但如果你的文件使用制表符，这是地方说出这样的话。&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;Step 4 CSV中的JSON格式&lt;/h3&gt;

&lt;pre id=&quot;json&quot;&gt;
{
  &quot;searchRequest&quot;: [
    &quot;http://192.168.10.14:9001/search/search.json?word=%E7%83%A4%E9%B1%BC&quot;,
    &quot;http://192.168.10.14:9001/search/search.json?word=%E7%83%A4%E9%B1%BC&amp;cityId=1&quot;
      ]
}
&lt;/pre&gt;


&lt;h3&gt;Step 5 创建HttpRequest&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://demi-panda.com/media/pub/java/json-http-search-request.jpg&quot; width=&quot;560px&quot;  alt=&quot;json-http-search-request.jpg&quot; &gt;&lt;/img&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2013/01/08/how-to-use-a-csv-file-from-json-with-jmeter/index.html</link>
            <guid>http://demi-panda.com/2013/01/08/how-to-use-a-csv-file-from-json-with-jmeter/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[使用这些提示，帮助你的减肥计划 ]]></title>
            <pubDate>Thu, 03 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;  　　很多人都在为减肥相关的提示和建议的数量感到困惑。在下面的文章中，你会学到正确的方式开始你的减肥之旅。这提示应该被证明是一个良好的开端。&lt;/p&gt;

&lt;h3&gt;注重重量训练&lt;/h3&gt;

&lt;p&gt;尝试的心，如果你打算减肥，最好注重重量训练。虽然指定数量的举重是很好的保持色调的肌肉，它实际上是有氧锻炼，燃烧脂肪，帮你减少的重量。脱落磅的关键是专注于心血管的好处，而不是把自己发展大肌肉。&lt;/p&gt;

&lt;h3&gt;喝冰水会帮助你减肥&lt;/h3&gt;

&lt;p&gt;当你喝冷水，它开始冷却你的身体。为了确保你的身体会恢复你的身体会燃烧脂肪。饮用冰水好多了，比喝苏打水和其他不健康的饮料。&lt;/p&gt;

&lt;h3&gt;健康零食&lt;/h3&gt;

&lt;p&gt;如果你是全职工作，包装工作的健康零食。这是非常重要的，如果你的工作时间很长，因为你不要崩溃了，当你回家。这可能会导致你达到不健康的垃圾。&lt;/p&gt;

&lt;h3&gt;睡觉前避免吃任何东西&lt;/h3&gt;

&lt;p&gt;睡觉前尽量避免吃任何东西，在你上床睡觉之前的几个小时。虽然这是说起来容易做起来难。消耗任何食物在睡前将简单地坐在你的胃，未使用的，注定直脂肪堆积。吃上几个小时之前，你去睡觉，整个晚上，所以你消耗这些热量。&lt;/p&gt;

&lt;h3&gt;掂量自己的定期&lt;/h3&gt;

&lt;p&gt;追求减肥目标时，你应该总是掂量自己的定期。这将帮助你看到你已经失去了多少重量，你有多少去。您还可以录制你的腰围尺寸和其他重要的测量。监控他们的进度，以这种方式更容易减肥。&lt;/p&gt;

&lt;h3&gt;有氧运动&lt;/h3&gt;

&lt;p&gt;如果你和许多人一样，不喜欢甚至思想的运行，你可以找到许多其他的有氧运动可供选择。对于那些谁是旧的或有关节炎，你可以减肥，增加肌肉，游泳。舞蹈班也是一个很好的选择，以帮助你减肥。&lt;/p&gt;

&lt;h3&gt;吃什么？&lt;/h3&gt;

&lt;p&gt;当您试图摆脱那些磅，看你吃什么。一个伟大的方式来减重是每天都在外面吃的权利。这是简单的数学，使用更多的热量比你消耗的。&lt;/p&gt;

&lt;h3&gt;饮用绿茶&lt;/h3&gt;

&lt;p&gt;饮用绿茶已被证明，以帮助争取的脂肪和鼓励减肥。一杯热或冰绿茶是完全的抗氧化剂，最健康的饮料之一。这可以极大地帮助你在你的减肥努力。&lt;/p&gt;

&lt;h3&gt;避免吃的过饱&lt;/h3&gt;

&lt;p&gt;一旦你半路吃了一顿，停了几分钟。我们的身体有时会迷茫，不知道什么时候，我们都充满。注意你的身体发出的信号，并停止进食，只要你觉得饱。花一分钟时间才能真正衡量你的饥饿程度。你应该想想你吃了多少。&lt;/p&gt;

&lt;h3&gt;酸奶&lt;/h3&gt;

&lt;p&gt;任何减肥计划的主食是酸奶。平原或低脂肪酸奶，是您健康的选择。你可以做一个纯酸奶沙拉和一些黄瓜片，盐和胡椒。添加水果，酸奶，纯将有助于减少对糖和热量。酸奶是美味，含钙量高。它也非常适合你的骨头。&lt;/p&gt;

&lt;h3&gt;利用玩手机的时间&lt;/h3&gt;

&lt;p&gt;利用玩手机的时间，并使用它的一些减肥运动。反对坐下来谈话时，试着走动。这是没有必要做任何事情费劲。如果你作出努力，更经常地走，避免闲置，你可以燃烧大量的卡路里。&lt;/p&gt;

&lt;h3&gt;给自己一点奖励&lt;/h3&gt;

&lt;p&gt;如果你坚持你的饮食，犒赏自己的每一个现在，然后用一个小甜点的开胃酒。这样做并不意味着你的饮食车上摔了下来。它只是意味着你都知道，你与你的减肥计划正在取得进展。然而，你不应该不断地得到回报。你的饮食应该成为你的生活方式，而不是是一种惩罚。&lt;/p&gt;

&lt;h3&gt;小贴士&lt;/h3&gt;

&lt;p&gt;在减肥计划开始时，它变得非常困难和混乱，涉水通过节食和减肥有关的信息。当你开始尝试使用简单的策略。这将让你一个良好的开端。然后，咨询你的医生有关健康的和可以接受的锻炼计划。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2013/01/03/use-these-great-tips-to-help-your-weight-loss-plan/index.html</link>
            <guid>http://demi-panda.com/2013/01/03/use-these-great-tips-to-help-your-weight-loss-plan/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[如何迅速缓解皮肤过敏症状 ]]></title>
            <pubDate>Thu, 03 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;  　　经常听到身边的朋友说，这几天皮肤痒痒的，有点不舒服，还有点燥热的感觉，脸蛋红红的，怎么办？&lt;/p&gt;

&lt;h3&gt;敏感肌肤三大特征&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;皮肤表皮层较薄,可以轻易看到皮下的毛细血管(红血丝)。 &lt;/li&gt;
&lt;li&gt;皮肤比较白,因而缺少适当的黑色素保护。 &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://baike.baidu.com/view/239163.htm&quot; alt=&quot;皮肤干燥&quot;&gt;皮肤干燥&lt;/a&gt;,常会有刺痒的感觉,并且总是红红的 &lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;敏感肌肤两大类&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;先天型:&lt;/strong&gt;这一类皮肤在年轻时几乎完美无瑕,但成年后很容易泛出各类斑点。这是因为皮肤中的黑色素含量较少,难以抵抗紫外线的攻击。又因角质层较薄,保持水分能力较差,皮肤也容易感觉干燥。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;后天型:&lt;/strong&gt;是由后天人为造成的,最大的伤害来自不当地去角质。在医学上,只有患有“皮肤角质化症”时,才需要将角质加以软化剥离。在美容界,正确的做法应该是“脱屑”,而不是像剥橘子一样去掉一层“皮”(角质层)。&lt;/p&gt;

&lt;h3&gt;敏感肌肤使用护肤品需注意&lt;/h3&gt;

&lt;p&gt;护肤品成分中以下专有名词是容易引起敏感的化学物质:alcohol(酒精)、bronopol、Sorbic acid(&lt;a href=&quot;http://baike.baidu.com/view/464069.htm&quot;&gt;山梨酸&lt;/a&gt;)、parabens(&lt;a href=&quot;http://baike.baidu.com/view/140315.htm&quot;&gt;防腐剂&lt;/a&gt;)、fragrance(&lt;a href=&quot;http://baike.baidu.com/view/30618.htm&quot;&gt;香料&lt;/a&gt;),若不想造成敏感,购买时就加倍注意吧!&lt;/p&gt;

&lt;h3&gt;饮食注意&lt;/h3&gt;

&lt;p&gt;饮食调理中注意多吃一些水果、蔬菜、小吃鱼虾、牛羊肉等食品。&lt;/p&gt;

&lt;h3&gt;生活条理中过敏性皮肤护理的重要环节&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;生活要有规律，保持充足的睡眠； &lt;/li&gt;
&lt;li&gt;皮肤要保持清洁，经常用冷水洗脸； &lt;/li&gt;
&lt;li&gt;要保持皮肤吸收充足的水分，避免炎热引起的皮肤干燥；&lt;/li&gt; 
&lt;li&gt;避免过度的日晒，否则会引起皮肤受到灼伤，出现红斑、发黑、脱皮等过敏现象；&lt;/li&gt; 
&lt;li&gt;选用敏感系列护肤品，如：冷漠、敏感面霜、细胞乳液霜等，以镇静皮下神经丛； &lt;/li&gt;
&lt;li&gt;使用同一牌子化妆品，选择不含浓烈香味、不含酒精等刺激性的化妆品； &lt;/li&gt;
&lt;li&gt;选用特效的敏感精华素，使皮肤增加纤维组织，使薄弱的皮肤的以改善； &lt;/li&gt;
&lt;li&gt;尽量不化浓妆，如果出现皮肤过敏后，要立即停止使用任何化妆品，对皮肤进行观察和保养护理； &lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;可见，通过饮食和生活方面的皮肤调理。&lt;/p&gt;

&lt;h3&gt;五招防敏感绝活&lt;/h3&gt;

&lt;p&gt;又痒又干又痛,都是敏感性皮肤的人常见的烦恼,想让皮肤少受点罪,有什么法子呢?下面五招防敏感绝活,记得经常使用哦!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;选择微酸性洁面品:&lt;/strong&gt;,不要选太浓太刺激的碱性产品。碱性太强,容易伤害皮肤,因此应以温和而偏微酸性的洁面乳为佳。
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;用不含酒精的爽肤水:&lt;/strong&gt;一般的爽肤水大多含酒精,除了会令敏感皮肤发红外,当酒精挥发后,还会令皮肤绷紧,所以应选择性质温和且不含酒精、香料的爽肤水。涂时应用食指、中指及无名指的指腹轻弹,千万不要用力拍打。
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;日霜忌用控油配方:&lt;/strong&gt;皮肤敏感者不宜选用带刺激性而浓度高的日霜,偏微酸性而无香料或标明敏感皮肤专用的最好,日霜中无须使用油光控制成分,只要有能锁紧肌肤水分的活性粒子成分就可以了。
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;高水分湿粉底:&lt;/strong&gt;敏感性皮肤在使用粉底时,除要顾及防敏感的作用外,也应选择含高水分的湿粉底,以减少因干燥而造成的痒痛。 
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;多补充维他命C:&lt;/strong&gt;缺乏维他命C,容易令&lt;a href=&quot;http://baike.baidu.com/view/1690972.htm&quot;&gt;皮肤粗糙&lt;/a&gt;枯干,从而引发敏感症状。在含丰富维他命C的水果中,梨与奇异果是首选,多吃有助于对抗外来敏感。
&lt;/li&gt;
&lt;/ol&gt;



 ]]></description>
            <link>http://demi-panda.com/2013/01/03/fast-huanjie-pifu-guomin/index.html</link>
            <guid>http://demi-panda.com/2013/01/03/fast-huanjie-pifu-guomin/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[给打算创建一个欢乐的婚礼建议 ]]></title>
            <pubDate>Thu, 03 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;  　　一对夫妇一个非常浪漫的时刻可能是一种参与。然而，婚礼策划的压力可能比较苍白的浪漫。以下的建议将有助于确保任何一对夫妻，规划他们的婚礼顺利。
&lt;a href=&quot;http://demi-panda.com/media/pub/life/13569436189893.jpg&quot; alt=&quot;婚纱照&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/13569436189893.jpg&quot; width=&quot;330px&quot; alt=&quot;婚纱照&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;欢乐婚礼的建议&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
首先把它涉及到规划的行程，您的婚礼仪式和招待会。你要确保你的婚礼是愉快的，大家已同意参加你的特殊日子。
&lt;/li&gt;
&lt;li&gt;
对于在户外举行婚礼，在雨水或其他不可预见的条件的情况下有一个备份计划。有几个方法可以做到这包括帐篷里待命，租用面积与室内和室外空间。中板，也可以安装在他们的鞋子和衣服，以防止你的客人越来越泥。
&lt;/li&gt;
&lt;li&gt;
按计划表坐着，确保客人的数量更是在每个表。促进安排表，按年龄组的谈话。
&lt;/li&gt;
&lt;li&gt;
要记住，在结婚的时候是最关键的因素是和你结婚的人。这辈子不要急于改变终身的决定。小心考虑人的特征都喜欢的事情，你是具有挑战性的方面。
&lt;/li&gt;
&lt;li&gt;
如果你打算创建一个欢乐的婚礼,需要确保正确实行你的婚礼讲话，如果没有适量的规划和实践，你可以很容易地失去观众。
&lt;/li&gt;
&lt;li&gt;
可以肯定的是，您的接待场所具有良好的尺寸舞蹈区。你需要做的给你和你的朋友的足够的空间！
&lt;/li&gt;
&lt;li&gt;
购买订婚戒指，而是寻找一种不同的方式。例如，有可能是一个项目的传家宝珠宝，象征着您的参与，可以通过。这件珠宝的信物，可以显示你已经成为一个新的家庭，也可以穿着漂亮的珠宝作品。
&lt;/li&gt;
&lt;li&gt;
一个被规定的亲戚或朋友，可以加强在主持你的婚礼。这种协调可以快速，轻松地在线。这不仅可以节省你的钱，但也可以到你的婚礼增添了一丝个性。虽然之前敲定的计划，检查当地的法规，以确保您所在地区的，这将是合法的。
&lt;/li&gt;
&lt;li&gt;
您可能会听家庭传统或建议的，但是这是你的日子不是他们的。感谢他们的热情，但让他们知道事情正在做的方式。在你婚礼的当天，当您按照自己的直觉和计划，你不会有任何遗憾。
&lt;/li&gt;
&lt;li&gt;
如果您想购买婚纱，而怀孕的，记住这一点。也许这听起来像是常识，但你应该专注于一件衣服，因为你的身体的扩大，婚纱将扩大。
&lt;/li&gt;
&lt;li&gt;
尝试计划在一段时间内你的婚礼那天早上，做一些放松。在你的大日子里你可以考虑的选项之一是安排一个30分钟的按摩，让你放松和感觉最好的。
&lt;/li&gt;
&lt;li&gt;
规划你的婚礼时，你应该做的第一件事情之一是做一个列表你想要的一切，和排名多么重要，每一个项目是给你的。有些人可能会认为，花携带的蛋糕，更重要的，别人可能会觉得场地进行更多的客人名单上的重要性。现在，你知道什么是对你最重要，你可以相应地分配资金，让你有尽可能最好的一天。
&lt;/li&gt;
&lt;li&gt;
你会想要参加你的婚礼的客人有很多的照片。如果你的婚礼是特别大，找到你想要的所有的人，如果你没有安排专门的时间拍摄,可以被证明是一个真正的麻烦。所以你需要说出你的摄影师花费几个小时，在白天跟大家合影，并告知相应的客人应在什么时间前到何时何地。
&lt;/li&gt;
&lt;li&gt;
邀请函是你的婚礼呈现的整体主题的第一个元素。通常情况下，邀请包括婚礼的颜色，可以是一个线索，为你的客人，你的主题是什么。有很多要考虑的选项做出选择之前。例如，你想要一个传统的婚礼或海滩为主题的婚礼吗？
&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;小贴士&lt;/h3&gt;

&lt;p&gt;任何人愿意使用这些准则是一定要享受更顺畅，更轻松的规划过程。学习计划婚礼是一个伟大的方式来建立的婚姻和生活的基础。这些技巧都是为了不仅对一对夫妇的婚礼伟大的，但他们的未来的关系。&lt;/p&gt;

&lt;p&gt;如果大家有更好的建议，欢迎留言，大家一起完善。说不定以后就会用采纳其中的建议哦。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2013/01/03/create-A-Joyous-Wedding-To-Remember/index.html</link>
            <guid>http://demi-panda.com/2013/01/03/create-A-Joyous-Wedding-To-Remember/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[快速缓解过敏的简单技巧 ]]></title>
            <pubDate>Thu, 03 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt; 　　这些情况可能在你以前遇到过:你有轻微的咳嗽，有的抽鼻子，打喷嚏和意见。这种情况经常发生在大致每年相同的时间。如果你的回答是肯定的，你可能有过敏现象。这些类型的过敏可能是恼人的，但也有方法可以处理与他们使用以下策略。&lt;/p&gt;

&lt;h3&gt;那些患有过敏症可能遇到的建议&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
冬天很多朋友在卧室使用加湿器，当他们睡觉的次数多一些。然而，应当指出，的加湿器可以鼓励霉菌生长。正因为如此，你应该考虑尝试盐水喷雾之前上床睡觉，以保持你的鼻腔湿润。
&lt;/li&gt;
&lt;li&gt;
每天保持房间通风，如果你有过敏症。这将减少过敏原的数量在您的家中。打扫卫生前，请检查您的房间是否通风，以确保囊中并不需要更换或垃圾桶清空。旧的或不使用的空间容器可能会释放一些过敏源到环境中。在新的空间，近99％的过敏源和小颗粒的HEPA过滤器，保持空气清洁。
&lt;/li&gt;
&lt;li&gt;
如果你对乳胶过敏，请提示您的医生或护士她们可能会忽略在您的病历。不要害怕说出来，即使是短暂的接触乳胶手套或一些听诊器，可能会留下严重的和不舒服的过敏性反应。
&lt;/li&gt;
&lt;li&gt;
始终将生活垃圾放在房屋外。垃圾吸引了许多错误和啮齿动物。请记住，老鼠的粪便是一种常见的过敏源。你需要的最后一件事是老鼠爬来爬去留下的粪便到处都是，确保了陷阱，摆脱他们。如果这不是有效的，你可能需要聘请专业人士或雇用用毒药。
&lt;/li&gt;
&lt;li&gt;
用一些方法来控制过敏是确保你的房子没有脏的东西，尤其是电器的背后。这是很重要的原因是，脏东西或垃圾很容易吸引害虫如老鼠和蟑螂。这些生物在物品的背后产生更多的垃圾，从而加剧了一些人的过敏。
&lt;/li&gt;
&lt;li&gt;
如果以前所有的努力都失败了，你的过敏仍然是令人烦恼的，它可能是有意义的咨询医生。你的医生可能会只是对症下药！他也可以告诉你其他的方式来处理与过敏症状。
&lt;/li&gt;
&lt;li&gt;
如果您的孩子有食物过敏，包装行驶时的安全食品。在国外的食品未必有明确的成分标签。这可能会导致意外食入过敏源，如大豆，牛奶，坚果等。
&lt;/li&gt;
&lt;li&gt;
避免使用一个阁楼风扇，如果你患有环境过敏。原因是，阁楼风扇使空气进入家庭，并与它一起，花粉等过敏源。
&lt;/li&gt;
&lt;li&gt;
每当你使用一个新的非处方抗组胺剂，对其进行测试，先在家里。这是常见的这类药物的物质，往往会造成嗜睡。如果包装不包含警告，当你考虑的第一对夫妇的剂量，做到这一点，你可以呆在家里，看看它是如何让你在一个时间里有感觉。
&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;小贴士&lt;/h3&gt;

&lt;p&gt;现在，你已经走到了尽头这篇文章，你已经准备好采取行动。你没有对付过敏症状了。你可以住松口气了。只要你能遵循这些提示，你应该没有任何麻烦挫败那些过敏。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2013/01/03/Relieve-Allergies-Fast/index.html</link>
            <guid>http://demi-panda.com/2013/01/03/Relieve-Allergies-Fast/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[使用命令行配置Ubuntu Networking ]]></title>
            <pubDate>Wed, 02 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　基本上任何网络*无主机是传输控制协议/网际协议（传输控制协议/网际协议）结合三。这个组合包括互联网协议（知识产权），传输控制协议（传输控制协议），和通用数据报协议（协议）。&lt;/p&gt;

&lt;p&gt;　　默认用户配置的网卡已经安装在Ubuntu操作系统中。你可以用ifconfig命令，在shell终端或者Ubuntu graphical network configuration tools，如network-admin，可以在你的系统中编辑系统的网络设备的信息或添加或删除网络设备。&lt;/p&gt;

&lt;h3&gt;在网卡上配置DHCP地址&lt;/h3&gt;

&lt;p&gt;　　如果你想配置动态主机协议地址，你需要编辑/etc/network/interfaces，你需要输入以下eth0替换您的网络接口。&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo vi /etc/network/interfaces
&lt;/pre&gt;


&lt;p&gt;Note: 如果你没有安装图形界面，则使用vim编辑器&lt;br&gt;
　　如果你安装了图形界面，则使用如下命令&lt;br&gt;&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ gksudo gedit /etc/network/interfaces
&lt;/pre&gt;


&lt;pre id=&quot;bash&quot;&gt;
# The primary network interface -- use DHCP to find our address
auto eth0
iface eth0 inet dhcp
&lt;/pre&gt;


&lt;p&gt;配置静态地址到您的网卡中&lt;br&gt;
如果你想配置静态地址，你需要编辑 /etc/network/interfaces，需要输入以下线取代eth0与您的网络接口。&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo vi /etc/network/interfaces
&lt;/pre&gt;


&lt;p&gt;Note: 如果你没有安装图形界面，则使用vim编辑器&lt;br&gt;
　　如果你安装了图形界面，则使用如下命令&lt;br&gt;&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ gksudo gedit /etc/network/interfaces
&lt;/pre&gt;


&lt;p&gt;配置如下：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
# The primary network interface
auto eth0
iface eth0 inet static
address 192.168.3.90
gateway 192.168.3.1
netmask 255.255.255.0
network 192.168.3.0
broadcast 192.168.3.255
&lt;/pre&gt;


&lt;p&gt;细节:你需要重新启动网络服务,使用下面的命令&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo /etc/init.d/networking restart
&lt;/pre&gt;


&lt;h3&gt;在Ubuntu上添加多个IP地址和虚拟IP地址&lt;/h3&gt;

&lt;p&gt; 　　如果你是一个服务器的系统管理员或用户通常有时候需要配置两个或者多个IP地址在你的机器网卡上,此时你需要编辑/etc/network/interfaces文件，您需要添加下面的语法。下面是唯一的一个例子，你需要根据您的网络地址设置变化。&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo vi /etc/network/interfaces
&lt;/pre&gt;


&lt;p&gt;Note: 如果你没有安装图形界面，则使用vim编辑器&lt;br&gt;
　　如果你安装了图形界面，则使用如下命令&lt;br&gt;&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ gksudo gedit /etc/network/interfaces
&lt;/pre&gt;


&lt;p&gt;配置如下：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
auto eth0:1
iface eth0:1 inet static
address 192.168.1.60
netmask 255.255.255.0
network x.x.x.x
broadcast x.x.x.x
gateway x.x.x.x
&lt;/pre&gt;


&lt;p&gt;你需要输入的所有配置，如地址，子网掩码，网络，广播和网关等输入所有的值后保存此文件，您需要重新启动网络服务软件包使用以下命令生效的新的IP地址。&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo /etc/init.d/networking restart
&lt;/pre&gt;


&lt;h3&gt;配置操作系统的hostname&lt;/h3&gt;

&lt;p&gt;在ubuntu上设置hostname则是非常简单的事情,你可以直接查询，或设置，主机的命令。&lt;/p&gt;

&lt;p&gt;作为用户，您可以看到您的当前主机名&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo /bin/hostname
&lt;/pre&gt;


&lt;h5&gt;示例&lt;/h5&gt;

&lt;p&gt;To set the hostname directly you can become root and run&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo /bin/hostname newname
&lt;/pre&gt;


&lt;p&gt;当你的系统启动时会自动读取主机的文件/etc/hostname&lt;/p&gt;

&lt;h3&gt;配置DNS&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo vi /etc/resolv.conf
search test.com
nameserver 192.168.3.2
&lt;/pre&gt;



 ]]></description>
            <link>http://demi-panda.com/2013/01/02/ubuntu-networking-configuration/index.html</link>
            <guid>http://demi-panda.com/2013/01/02/ubuntu-networking-configuration/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[冬天吃火锅的注意事项 ]]></title>
            <pubDate>Wed, 02 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　随着冬季的来临,天气越来越寒冷，很多人都会围坐在火锅前一起吃火锅，但是其实吃火锅是很多注意事项，只有做到才能保证健康吃火锅哦。&lt;/p&gt;

&lt;h3&gt;冬季吃羊肉火锅的益处&lt;/h3&gt;

&lt;p&gt;　　羊肉性温热，这就是说，它会促进人体的能量释放，让人有发热的感觉。如果身体本身怕冷，手脚冰凉，气力不足，吃这个自然是恰到好处；如果身体本来就发热，怕热不怕冷，精力旺盛不知疲倦，那就没必要多吃羊肉了。
&lt;a href=&quot;http://demi-panda.com/media/pub/chihuo/health/huoguo.jpg&quot; alt=&quot;火锅,羊肉火锅&quot; rel=&quot;prettyPhoto[201301022327]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/chihuo/health/huoguo.jpg&quot; width=&quot;330px&quot; alt=&quot;火锅,羊肉火锅&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;如何选锅底&lt;/h3&gt;

&lt;p&gt;怕冷的人，可以选择滋补汤或带辣味的汤，以便进一步促进血液循环，促进身体发热；不怕冷的人，特别是年轻小伙子，宜选择清汤，避免吃辣或吃滋补食材造成长痘、生疮、燥热等问题。市场上好点的锅底有&lt;a href=&quot;http://www.haidilao.com/&quot;&gt;海底捞&lt;/a&gt;,&lt;a href=&quot;http://www.donglaishun.com/&quot;&gt;东来顺&lt;/a&gt;,&lt;a href=&quot;http://www.littlesheep.com/&quot;&gt;小肥羊&lt;/a&gt;等等,大家可以根据自己的口味以及身体的强弱来选择尽可能适合自己的底料。&lt;/p&gt;

&lt;h3&gt;如何选主料&lt;/h3&gt;

&lt;p&gt;从主料的选择来说，瘦弱者可以多选羊肉，红色的薄切细嫩羊肉最好，羊腰、羊肚之类也可以。而原本高血脂、高血压的人应当减少羊肉的量，增加鸭血、豆腐、海鲜之类食材的比例，不吃内脏，减少升高血压和血脂的危险。&lt;/p&gt;

&lt;h3&gt;营养配菜&lt;/h3&gt;

&lt;p&gt;从配菜来说，身体瘦弱的人宜早点配合各种淀粉类食材，最好是在涮肉开始时就下点土豆、山药片、藕片等，它们有健脾胃的作用，柔软美味，又富含多种矿物质和维生素。以它们作为主食，既能提高主食的营养质量，又能早点吃到淀粉类主食，避免一下子吃进去太多高脂肪肉类，给消化系统带来沉重负担。而身体强健的人宜早点配合萝卜、生菜、白菜，以及各种蘑菇，下点豆腐，减少肉类的比例。绿叶蔬菜适合各类人，可以在涮肉的中段加进去，注意及时捞出来，避免煮烂后营养素损失太大。&lt;/p&gt;

&lt;p&gt;吃火锅时，多配合新鲜蔬菜，可以减少亚硝酸盐合成亚硝胺类致癌物的危险。过多的蛋白质会增强致癌物的作用。蔬菜不宜久煮，最好能早一点放入汤中，而不是等汤里亚硝酸盐含量已经很高的时候。
&lt;a href=&quot;http://demi-panda.com/media/pub/chihuo/health/huoguo-peicai.jpg&quot; alt=&quot;火锅配菜&quot; rel=&quot;prettyPhoto[201301022327]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/chihuo/health/huoguo-peicai.jpg&quot; width=&quot;330px&quot; alt=&quot;火锅配菜&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;健康饮料&lt;/h3&gt;

&lt;p&gt;吃涮肉的时候，人们常常配合啤酒或甜饮料，无论对于哪一类人，都不是理想的做法。它们不仅会使一餐中的嘌呤量过高，还会让血脂上升的危险更大。男科专家表示,习惯性饮酒打边炉，从而导致前列腺并发症出现。而冬季因为气温的原因，很多前列腺患者的病情会加重。&lt;/p&gt;

&lt;p&gt;除了体质、疲劳等因素外，海鲜、动物内脏、蘑菇和酒都是引起痛风病的“罪魁祸首”,而火锅中避免不了这些东西。&lt;/p&gt;

&lt;p&gt;对消化不良的人来说，还有妨碍消化的麻烦。相比而言，喝温热的白开水或者淡茶水，才是最合适的饮料。吃了涮肉之后，千万不要再吃冷饮，也不要吃冰镇的水果。&lt;/p&gt;

&lt;h3&gt;吃火锅注意小贴士&lt;/h3&gt;

&lt;h3&gt;错误一：一热当三鲜&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;表现：&lt;/strong&gt;热腾腾的火锅中的美味一夹起来便直往嘴里送，烫得舌头发麻额头发汗大呼过瘾，并美其名曰：“一热当三鲜”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;真实伤害：&lt;/strong&gt;口腔、食道和胃黏膜一般只能耐受50℃的温度，太烫的食物，就会损伤黏膜，而火锅浓汤的温度可高达120℃，取出即吃的话，很易烫伤口腔、舌部、食道以及胃的黏膜。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;纠错：&lt;/strong&gt;吃火锅千万不可心急，从火锅中取出的食物要量小，并等降温后入口为宜。应做到“宁舍三鲜，不要太烫”。&lt;/p&gt;

&lt;h3&gt;错误二：半生不熟最鲜美&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;表现：&lt;/strong&gt;为追求鲜脆嫩滑的口感，食物在火锅里烫一下就吃。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;真实伤害：&lt;/strong&gt;这样的吃法除了造成消化不良外，潜藏于食物中的细菌、寄生虫卵会随食物吞入胃肠从而导致疾病的发生。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;纠错：&lt;/strong&gt;吃火锅的时候一定要将肉切薄、多烫，涮猪肉片、牛肉片时，一定要涮熟再吃。同时，还要看肉片上有无白色、米粒状物质，如有，则可能是囊虫卵。&lt;/p&gt;

&lt;h3&gt;错误三：冷、热混吃求“中和”&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;表现：&lt;/strong&gt;一口麻辣烫一口冰冻啤酒，这是许多人喜欢的火锅吃法，美其名曰“中和”。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;真实伤害：&lt;/strong&gt;忽冷忽热，对胃黏膜极为不利，极易造成胃肠疾病。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;纠错：&lt;/strong&gt;吃火锅时应尽量避免喝冷饮。&lt;/p&gt;

&lt;h3&gt;错误四：让辣来得更猛烈些吧&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;表现：&lt;/strong&gt;一提起火锅，又麻又辣又烫的口味总成了首选，因为那被辣得大汗淋淋的感觉实在太过瘾了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;真实伤害：&lt;/strong&gt;麻辣火锅对胃肠的杀伤力不难想像。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;纠错：&lt;/strong&gt;尽管每个人对辣的耐受度不同，但是为肠胃着想。&lt;/p&gt;

&lt;h3&gt;错误五：火锅汤底营养好&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;表现：&lt;/strong&gt;把涮完的火锅汤底当“营养汤”喝光。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;真实伤害：&lt;/strong&gt;火锅的汤大多采用猪、羊、牛油等高脂肪物质为底料，又多以辣椒、胡椒和花椒等为佐料，吃多了易导致高血脂、胆石症、十二指肠溃疡、口腔溃疡、牙龈炎、痔疮等疾病。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;纠错：&lt;/strong&gt;对于一次吃不完剩下的涮料和底汤，应倒掉。如果是放在铜火锅中过夜，更不要吃，不但有害健康，还可能引起铜氧化物急性中毒。&lt;/p&gt;

&lt;h3&gt;小贴士&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;健康饮食,需要从每一个细节开始&lt;/li&gt;
&lt;li&gt;火锅虽好，但是不宜多吃&lt;/li&gt;
&lt;li&gt;切记吃火锅注意事项，希望大家过个愉快寒冷的冬天&lt;/li&gt;
&lt;/ol&gt;

 ]]></description>
            <link>http://demi-panda.com/2013/01/02/dongtian-chihuoguo/index.html</link>
            <guid>http://demi-panda.com/2013/01/02/dongtian-chihuoguo/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[在冰上的猫 ]]></title>
            <pubDate>Wed, 02 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/photo/8317160695_429346840e_z.jpg&quot; rel=&quot;prettyPhoto[201301022227]&quot; alt=&quot;猫&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/photo/8317160695_429346840e_z.jpg&quot; width=&quot;480px&quot; alt=&quot;猫&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;我们有一只橘黄色和奶油条纹的小猫,他是非常可爱惹人喜欢的,但是在一个周末的最后一天, 他却走在冰上。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/photo/8318215794_05a3d9340d_z.jpg&quot; rel=&quot;prettyPhoto[201301022227]&quot; alt=&quot;猫&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/photo/8318215794_05a3d9340d_z.jpg&quot; width=&quot;480px&quot; alt=&quot;猫&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;孩子们叫凯蒂猫！&lt;/p&gt;

&lt;p&gt;小心！你会掉下去的！&lt;/p&gt;

&lt;p&gt;但是凯蒂说：&quot;不用担心！我只重10.2！&quot;
&lt;a href=&quot;http://demi-panda.com/media/pub/life/photo/8318215614_85bb18acdf_z.jpg&quot; rel=&quot;prettyPhoto[201301022227]&quot; alt=&quot;猫&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/photo/8318215614_85bb18acdf_z.jpg&quot; width=&quot;480px&quot; alt=&quot;猫&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;此外，它说:&quot;对于冰冷的水一贯对待。&lt;/p&gt;

&lt;p&gt;它的凉爽，清新的味道是一个不可战胜的事实。&quot;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/photo/8318216694_39176b3564_z.jpg&quot; rel=&quot;prettyPhoto[201301022227]&quot; alt=&quot;猫&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/photo/8318216694_39176b3564_z.jpg&quot; width=&quot;480px&quot; alt=&quot;猫&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;但我必须的说:&quot;这水已经麻木了我的脚趾。&lt;/p&gt;

&lt;p&gt;如果我接受了太多冻结了我的鼻子。&quot;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/photo/8317161721_5cc47c1c03_z.jpg&quot; rel=&quot;prettyPhoto[201301022227]&quot; alt=&quot;猫&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/photo/8317161721_5cc47c1c03_z.jpg&quot; width=&quot;480px&quot; alt=&quot;猫&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;好吧，我现在准备好了。&lt;/p&gt;

&lt;p&gt;离开这个池塘里的冰川之地，回到属于俺的怀抱。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2013/01/02/Kitty-on-the-Ice/index.html</link>
            <guid>http://demi-panda.com/2013/01/02/Kitty-on-the-Ice/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[告别2012，拥抱2013 ]]></title>
            <pubDate>Tue, 01 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;  　　告别2012,拥抱2013!新年快乐! 今天是2012的最后一天，同时也是兄弟的生日，我们在北漂的朋友陪着他一起告别2012，拥抱2013，想想大家伙过着&lt;a href=&quot;http://demi-panda.com/2012/12/04/north-drift-life/&quot;&gt;《北漂生活》&lt;/a&gt;的日子，回眸一望，感觉历历在目。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/2012.jpg&quot; alt=&quot;2012&quot;&gt;
&lt;img src=&quot;/media/pub/life/2012.jpg&quot; width=&quot;480px&quot; alt=&quot;2012&quot;  &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;2012年12月21日-世界末日&lt;/h3&gt;

&lt;p&gt;大家经历过了&lt;a href=&quot;http://demi-panda.com/2012/12/21/shijiemori/&quot;&gt;《世界末日》&lt;/a&gt;,这一天给大家留下了不少回忆，跟话语权，当然很多朋友也跟我一样，发表了一些自己的看法及言论。《末日》已经过去，明天的生活还得继续。&lt;/p&gt;

&lt;h3&gt;2012国内十大新闻&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;3月3日 海域管理加强-公布钓鱼岛标准名称并设立三沙市&lt;/li&gt;
&lt;li&gt;4月10日 反腐力度加大- 薄熙来等高官被查处&lt;/li&gt;
&lt;li&gt;6月24日 “神九”飞天首次对接&lt;/li&gt;
&lt;li&gt;9月17日 建成最大医疗保障网-覆盖人数超13亿&lt;/li&gt;
&lt;li&gt;9月25日 首艘航母交接入列-歼—15战机展开训练&lt;/li&gt;
&lt;li&gt;9月26日 文化体制改革全面推进&lt;/li&gt;
&lt;li&gt;9月 中国经济运行企稳&lt;/li&gt;
&lt;li&gt;11月8日 &lt;a alt=&quot;十八大&quot; href=&quot;http://baike.baidu.com/view/4160404.htm?subLemmaId=4160404&amp;fromenter=%CA%AE%B0%CB%B4%F3&quot;&gt;十八大&lt;/a&gt;胜利召开 高举旗帜、继往开来、团结奋进&lt;/li&gt;
&lt;li&gt;12月1日 粮食产量“九连增”,农民增收“九连快”&lt;/li&gt;
&lt;li&gt;12月4日 中央出台八项规定&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;2012年互联网十大新闻&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://youku.com&quot; alt=&quot;优酷&quot;&gt;优酷&lt;/a&gt;&lt;a href=&quot;http://tudou.com&quot;&gt;土豆&lt;/a&gt;突然合并 冤冤相“抱”“合”时了&lt;/li&gt;
&lt;li&gt;互联网公司发力移动终端 不卖硬件卖服务,百度、360、腾讯、阿里巴巴、网易、搜狐、小米等相继进军移动终端市场&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.vipshop.com&quot; alt=&quot;唯品会&quot;&gt;唯品会&lt;/a&gt;、欢聚时代成功上市 为中概股赴美上市“破冰”&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://china.alibaba.com&quot;&gt;阿里巴巴&lt;/a&gt;、盛大退市 环境因素应为始作俑者&lt;/li&gt;
&lt;li&gt;“双11”&lt;a href=&quot;http://tmall.com&quot; alt=&quot;天猫&quot;&gt;天猫&lt;/a&gt;&lt;a href=&quot;http://taobao.com&quot;&gt;淘宝&lt;/a&gt;创记录 电商2012年呈现井喷&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://360buy.com&quot;&gt;京东&lt;/a&gt;副总裁吴声被曝“食京” 齐家治国顺序不能反&lt;/li&gt;
&lt;li&gt;&lt;a alt=&quot;小米&quot; href=&quot;http://www.xiaomi.com/&quot;&gt;小米&lt;/a&gt;盒子亮相一周即夭折 互联网电视尚处“早春”&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://weixin.softonic.cn/&quot; alt=&quot;微信&quot;&gt;微信&lt;/a&gt;用户量快速增长 赶超微博恐成定局&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.360.cn/&quot;&gt;360&lt;/a&gt;进军搜索引擎 百度如鲠在喉遭遇最难缠对手&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://suning.com/&quot; alt=&quot;苏宁&quot;&gt;苏宁&lt;/a&gt;国美加速转型 线上线下同步发展&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;身边大事&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://demi-panda.com/2012/12/04/north-drift-li&quot; art=&quot;北漂生活&quot;&gt;北漂生活&lt;/a&gt;已经3年,经历了酸，甜，苦，辣,让人回味无穷&lt;/li&gt;
&lt;li&gt;五大名山-&lt;a href=&quot;http://demi-panda.com/2012/05/06/taishan/&quot; alt=&quot;泰山之旅&quot;&gt;泰山之旅&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;买了乔布斯的经典之作 &lt;a href=&quot;http://apple.com&quot;&gt;iphone4s&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;考取驾照&lt;/li&gt;
&lt;li&gt;使用Jekyll搭建个人博客 &lt;a href=&quot;http://demi-panda.com&quot; alt=&quot;熊猫家族&quot;&gt;熊猫家族&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;家里新房建设&lt;/li&gt;
&lt;li&gt;2012国庆回家游-&lt;a href=&quot;http://demi-panda.com/2012/11/26/dongan-shunhuangyan/&quot; alt=&quot;舜皇岩&quot;&gt;舜皇岩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;工作能力提升&lt;/li&gt;
&lt;li&gt;末日之行&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;2013计划&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;技术，工作进一步深入研究&lt;/li&gt;
&lt;li&gt;旅游-上海，浙江，苏州&lt;/li&gt;
&lt;li&gt;博客内容坚持更新&lt;/li&gt;
&lt;li&gt;尝试做更多的美食&lt;/li&gt;
&lt;li&gt;生活，健康的提高&lt;/li&gt;
&lt;li&gt;待续...&lt;/li&gt;
&lt;/ol&gt;

 ]]></description>
            <link>http://demi-panda.com/2013/01/01/summary/index.html</link>
            <guid>http://demi-panda.com/2013/01/01/summary/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[12306订票助手-给力火车票自动订票插件 ]]></title>
            <pubDate>Tue, 01 Jan 2013 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;  　　在外漂泊了漫长的一年，每到年底，大家最忙碌，最紧张，最无奈的却不是工作上的困难，而是一票难求。从而导致散失了跟家人团聚的机会，现在的【国情】实在是让人心寒。今天给大家介绍12306订票助手使用经验。&lt;/p&gt;

&lt;h3&gt;怎么网上购票?&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;打开&lt;a href=&quot;http://www.12306.cn&quot; target=&quot;_blank&quot; alt=&quot;铁道部火车票网&quot; &gt;铁道部火车票网&lt;/a&gt;上订票唯一官网 - 铁路客户服务中心&lt;/li&gt;
&lt;li&gt;如果是第一次登录，则需要下载跟证书&lt;/li&gt;
&lt;li&gt;注册一个登陆名，需要你的身份证号&lt;/li&gt;
&lt;li&gt;如果需要帮别人购买，则需要添加常用联系人&lt;/li&gt;
&lt;li&gt;选择购票，并查询你所要够的车票，选择订票&lt;/li&gt;
&lt;li&gt;你要有网上银行，付款,注意订单有效期40分钟，也就是说必须在40分钟内完成付款&lt;/li&gt;
&lt;li&gt;取票，带上二代身份证可以到火车站也可以去代售点(需要手续费5元)&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;12306订票助手&lt;/h3&gt;

&lt;h4&gt;郑重提醒&lt;/h4&gt;

&lt;p&gt;12306.CN订票助手是由【木鱼】开发的『免费软件』，并没有授权任何人以任何形式在任何渠道上进行销售（如淘宝等），助手本身的使用也不收任何费用！目前助手只接受捐助（请参考捐助页面），如果您是从淘宝或任何第三方渠道购买的，请申请退款并向作者举报！&lt;br&gt;
同时强烈鄙视任何未经授权便拿来为自己谋利的无良卖家！&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;支持功能&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;记录登录的用户名和密码，在打开登录页面后自动填写；&lt;/li&gt; 
&lt;li&gt;自动登录，遇到人过多或繁忙的时候自动重试，直到登录成功（有点儿抢线的味道）；&lt;/li&gt; 
&lt;li&gt;自动记录查询信息，一次查询线路后下次再查询自动填入；&lt;/li&gt; 
&lt;li&gt;自动刷新查询，当没有需要的车次时，自动重新刷新；&lt;/li&gt; 
&lt;li&gt;在Chrome/遨游3/猎豹下，查票和登录有右下角提示和声音提示；Firefox下暂不支持声音提示，但有桌面弹窗提示。&lt;/li&gt; 
&lt;li&gt;自动提交订单，直到订单成功&lt;/li&gt; 
&lt;li&gt;查询失败时自动刷新&lt;/li&gt; 
&lt;li&gt;预定失败时自动重新预定&lt;/li&gt; 
&lt;li&gt;禁用查询缓存&lt;/li&gt; 
&lt;li&gt;查询界面参数和设置自动保存&lt;/li&gt; 
&lt;li&gt;支持过滤无法预定车次&lt;/li&gt; 
&lt;li&gt;支持过滤无需要席别车次&lt;/li&gt; 
&lt;li&gt;现在系统已禁止验证码自动跳过，所以当出现验证码错误时，系统将会自动刷新验证码并自动定位到验证码输入框中并请求输入验证码，输入满四位的时候系统将会自动重新提交。&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;安装需求&lt;/h3&gt;

&lt;h4&gt;&lt;a href=&quot;http://www.maxthon.cn/mx3/&quot;&gt;遨游3&lt;/a&gt;下安装&lt;/h4&gt;

&lt;p&gt;[遨游3] 请至官方的扩展库中安装，请 &lt;strong&gt;&lt;a href=&quot;http://extension.maxthon.cn/detail/index.php?view_id=1339&quot;&gt;点击这里转到扩展页面&lt;/a&gt;&lt;/strong&gt;。&lt;/p&gt;

&lt;h4&gt;在Chrome上安装（推荐)&lt;/h4&gt;

&lt;p&gt;[Chrome]下可以直接安装。直接打开 &lt;a href=&quot;http://www.fishlee.net/soft/44/&quot;&gt;助手主页&lt;/a&gt;，在&lt;strong&gt;下载&lt;/strong&gt;一节中点击&lt;strong&gt;通用版本&lt;/strong&gt;后（如果您实在木有找到，也可以直接&lt;a href=&quot;http://www.fishlee.net/Service/Download.ashx/44/47/12306_ticket_helper.user.js&quot;&gt;点击这里安装&lt;/a&gt;），Chrome将会在浏览器下方的下载区域通知进行安装：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://demi-panda.com/media/pub/google/chrome_1.png&quot; alt=&quot;Chrome安装提示1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击『继续』后，在弹出的对话框中继续点击『安装』。安装完成后即可。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://demi-panda.com/media/pub/google/chrome_2.png&quot; alt=&quot;Chrome安装提示2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果您未能看到安装提示，而是提示了下载或其它内容，请确认您的浏览器版本较新。&lt;/p&gt;

&lt;h4&gt;在Firefox上安装&lt;/h4&gt;

&lt;p&gt;在[Firefox]上运行需要&lt;strong&gt;Scriptish&lt;/strong&gt;扩展提供支持。&lt;strong&gt;请注意，由于使用了Scriptish提供的新语法，因此&lt;em&gt;GreaseMonkey&lt;/em&gt;扩展是不支持的&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;如果您尚未给[Firefox]安装Scriptish扩展，请&lt;a href=&quot;https://addons.mozilla.org/zh-CN/firefox/addon/scriptish/&quot;&gt;在此安装&lt;/a&gt;；&lt;br&gt;
打开 &lt;a href=&quot;http://www.fishlee.net/soft/44/&quot;&gt;助手主页&lt;/a&gt;，在&lt;strong&gt;下载&lt;/strong&gt;一节中点击&lt;strong&gt;通用版本&lt;/strong&gt;后（如果您实在木有找到，也可以直接&lt;a href=&quot;http://www.fishlee.net/Service/Download.ashx/44/47/12306_ticket_helper.user.js&quot;&gt;点击这里安装&lt;/a&gt;）&lt;br&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;正常情况下，Scriptish会弹出下列的安装提示，请点击『安装』继续；如果没有这样的提示框而是看到了下载或一堆『乱码』，那么请检查是否成功安装了Scriptish扩展。&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;12306订票助手免费注册方法&lt;/h4&gt;

&lt;p&gt;12306订票助手免费注册方法方法非常简单，点击注册，再点击“点击这里免费申请序列号”，就会跳转到12306订票助手官网去注册，填入自己的相关信息即可完成注册，非常简单方便。
&lt;a href=&quot;http://demi-panda.com/media/pub/google/149673862.jpg&quot; alt=&quot;12306订票助手&quot; rel=&quot;prettyPhoto[201301011537]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/google/149673862.jpg&quot; width=&quot;480px&quot; alt=&quot;12306订票助手&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;点击“点击这里免费申请序列号”&lt;br&gt;
填入自己的相关信息&lt;br&gt;
然后把免费申请的序列号填入，确定完成注册即可。&lt;/p&gt;

&lt;h4&gt;12306订票助手安装成功&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/google/149673861.jpg&quot; alt=&quot;12306订票助手&quot; rel=&quot;prettyPhoto[201301011537]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/google/149673861.jpg&quot; width=&quot;480px&quot; alt=&quot;12306订票助手&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;小贴士&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;注意，如果您以前有安装过类似的脚本（如自动登录、自动查询等等），请先移除它们。&lt;/li&gt;
&lt;li&gt;由于各大网银都不支持Firefox/Chrome支付，因此请务必在订票前做好支付的准备措施。&lt;/li&gt;
&lt;li&gt;这里推荐使用银联在线支付，请开通银联后绑定快捷支付，这样在Firefox和Chrome下都可以顺利付款。&lt;/li&gt;
&lt;li&gt;也可以使用招行的手机银行进行支付。&lt;/li&gt;
&lt;/ol&gt;


&lt;h4&gt;开源：&lt;/h4&gt;

&lt;p&gt;本脚本助手已开源（@GitHub）。如果您有兴趣自己定制自己的版本并获得最新的内容，或提交自己的修改，请至&lt;a href=&quot;https://github.com/iccfish/12306_ticket_helper&quot;&gt;项目主页&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;项目主页位于：&lt;a href=&quot;https://github.com/iccfish/12306_ticket_helper&quot; target=&quot;_blank&quot;&gt;https://github.com/iccfish/12306_ticket_helper&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;购票技巧&lt;/h3&gt;

&lt;h4&gt;插件安装完成后，进入&lt;a href=&quot;https://dynamic.12306.cn/otsweb/&quot;&gt;登录页面&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/google/1.jpg&quot; alt=&quot;12306订票助手&quot; rel=&quot;prettyPhoto[201301011537]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/google/1.jpg&quot; width=&quot;480px&quot; alt=&quot;12306订票助手&quot;  &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;记录密码后，下次登录直接就会填入，并自动定位到验证码段。需要提醒的是，密码是明文记录在本地存储中的，所以如果不是你自己的电脑，建议不要记录。&lt;br&gt;&lt;/p&gt;

&lt;p&gt;请按照顺序填写，依次填写登录名、密码和验证码，三者都输入完成时，助手将会自动尝试登录，右侧会显示相关进度信息。如果验证码填写有误，助手会给出提示，并自动定位到验证码框中、输入刷新验证码。
如果登录成功，进入查询页面后，在查询下面有加一条选项，选项意思简单明了，不需要解释的吧 :-)&lt;/p&gt;

&lt;p&gt;当没有查询到符合要求的车次时，会自动重试。由于系统按钮有5秒钟的限制，所以不允许设置在6秒内重试。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/google/2.jpg&quot; alt=&quot;12306订票助手&quot; rel=&quot;prettyPhoto[201301011537]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/google/2.jpg&quot; width=&quot;480px&quot; alt=&quot;12306订票助手&quot;  &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;如果查到了，会停止刷新，高亮行，并在桌面右下角弹出提示。在谷歌浏览器下，会有音乐提示。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/google/3.jpg&quot; alt=&quot;12306订票助手&quot; rel=&quot;prettyPhoto[201301011537]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/google/3.jpg&quot; width=&quot;330px&quot; alt=&quot;12306订票助手&quot;  &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在车次列表，鼠标移动到车次上方时，右侧的提示信息中有两个新增的按钮：
&lt;a href=&quot;http://demi-panda.com/media/pub/google/5.jpg&quot; alt=&quot;12306订票助手&quot; rel=&quot;prettyPhoto[201301011537]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/google/5.jpg&quot; width=&quot;480px&quot; alt=&quot;12306订票助手&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;『加入黑名单』是指将指定车次加入黑名单，不管是否有车票都不再显示，适合于那些打死你也不坐的车次……&lt;br&gt;
『自动预定本车次』是指将指定的车次加入自动预定列表，如果指定车次的指定席别可用，那么将会自动进入预定页面。&lt;br&gt;&lt;/p&gt;

&lt;p&gt;在3.0版本开始，车次列表下方加入了新的辅助工具部分。
&lt;a href=&quot;http://demi-panda.com/media/pub/google/6.jpg&quot; alt=&quot;12306订票助手&quot; rel=&quot;prettyPhoto[201301011537]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/google/6.jpg&quot; width=&quot;480px&quot; alt=&quot;12306订票助手&quot;  &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;『增加自定义车票时间段』用于在查询的时间范围中增加自定义的时间范围。假如对系统设置的时间段不满意，可以使用此功能来增加符合自己要求的时间段。点击后，依次输入开始的小时数、结束的小时并选择是否记忆后，即可看到时间段下出现自定义的时间段（这里定义的是早上9点到下午4点）：
&lt;a href=&quot;http://demi-panda.com/media/pub/google/7.jpg&quot; alt=&quot;12306订票助手&quot; rel=&quot;prettyPhoto[201301011537]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/google/7.jpg&quot; width=&quot;330px&quot; alt=&quot;12306订票助手&quot;  &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;『车次黑名单』和『自动预定』分别对应前面的加入黑名单和加入自动预定，这里显示已设置的车次，并可以管理。&lt;/p&gt;

&lt;p&gt;『如果自动预定成功。。。。。』这个选项用于控制如果使用自动预定且成功，是否在进入订票页面后弹窗提示并播放音乐（Firefox下音乐不可用）。&lt;/p&gt;

&lt;p&gt;『自定义音乐地址』供您自定义提示的音乐，请确认填写正确，必要时可以使用『测试』来测试是否可以播放。&lt;/p&gt;

&lt;p&gt; 进入订票页面后，全部填写完成时，直接点击『自动提交』，助手将自动帮您提交订单，并在成功后自动转到订单查询页面。出现错误时，会给出提示，并提示您操作。&lt;/p&gt;

&lt;h3&gt;定卧铺票功能&lt;/h3&gt;

&lt;p&gt;12306订下铺票的方法就是这样，但并不一定每一次都成功，因此建议想订下铺票的朋友找多几个账号试试，实在不行就换一天……&lt;/p&gt;

&lt;p&gt;　　目前这个订下铺票的方法已经广为人知，估计12306在解决空调问题之后又会重新修改这个绝不公开的定下铺代码。当然，伟大的程序员到时又会再一次改变世界。
&lt;a href=&quot;http://demi-panda.com/media/pub/google/wopupiao.jpg&quot; alt=&quot;12306订票助手&quot; rel=&quot;prettyPhoto[201301011537]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/google/wopupiao.jpg&quot; width=&quot;480px&quot; alt=&quot;12306订票助手&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;小贴士&lt;/h3&gt;

&lt;p&gt;&lt;span style=&quot;color:red&quot;&gt;安装成功直接打开订票网站:&lt;a href=&quot;https://dynamic.12306.cn/otsweb/&quot; alt=&quot;订票网站&quot; target=&quot;_bank&quot;&gt;https://dynamic.12306.cn/otsweb/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:red&quot;&gt;如果您遇到任何无法使用的问题（包括谷歌浏览器、Firefox、遨游3或遨游4等 上无法使用、弹启用公告提示、打不开网页等），请务必参考助手常见问题页，都有解决方案：&lt;/span&gt;&lt;a href=&quot;http://www.fishlee.net/soft/44/faq.html&quot; target=&quot;_blank&quot;&gt;http://www.fishlee.net/soft/44/faq.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:red&quot;&gt;如果您使用的是谷歌浏览器，你还可以在谷歌的应用程序商店中安装本扩展：&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://chrome.google.com/webstore/detail/idjgmabfihmhmojipdkcackbihbdceno&quot;&gt;https://chrome.google.com/webstore/detail/idjgmabfihmhmojipdkcackbihbdceno&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;推荐使用Firefox+脚本，这样您获得的助手更新将会是最及时的！&lt;/h3&gt;

&lt;p&gt;&lt;font size=&quot;4&quot; color=&quot;red&quot;&gt;&lt;strong&gt;&lt;strong&gt;如果你不会安装或者总是摆不平，请下载由作者打包的Firefox集成版：&lt;a href=&quot;http://pan.baidu.com/share/link?shareid=190342&amp;amp;uk=2097456672&quot; target=&quot;_blank&quot;&gt;http://pan.baidu.com/share/link?shareid=190342&amp;amp;uk=2097456672&lt;/a&gt;，已内置必须的Scriptish扩展和4.0.8版助手。请注意不要下载任何第三方人打包的绿色版，作者不保证其中的内容的安全性！&lt;/strong&gt;&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;

 ]]></description>
            <link>http://demi-panda.com/2013/01/01/12306-dingpiaozhushou/index.html</link>
            <guid>http://demi-panda.com/2013/01/01/12306-dingpiaozhushou/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[人再囧途之泰囧 ]]></title>
            <pubDate>Mon, 31 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt; 　　2010年，由香港年轻导演叶伟民指导、&lt;a href=&quot;http://baike.baidu.com/view/164289.htm&quot;&gt;徐铮&lt;/a&gt;，&lt;a href=&quot;http://baike.baidu.com/view/764555.htm&quot;&gt;王宝强&lt;/a&gt;主演的小成本喜剧《人在囧途》成为了当年的年度黑马，在前期几乎无人知晓的情况下斩获近四千万票房。到了2012年，当年的主演之一徐铮摇身一变成为自导自演再拍《人再囧途之泰囧》，携当年的旅伴王宝强,还有&lt;a href=&quot;http://baike.baidu.com/view/396777.htm&quot;&gt;黄渤&lt;/a&gt;加盟重上囧途，故事背景从国内挪到了泰国，再加上首次出演反派的黄渤助阵，《人再囧途之泰囧》还未上映已亮出了极好的卖相—— 一部标准的类型喜剧。
&lt;a href=&quot;http://demi-panda.com/media/pub/life/movie/taijiong.jpg&quot; alt=&quot;泰囧&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/movie/taijiong.jpg&quot; width=&quot;330px&quot; alt=&quot;泰囧&quot; class=&quot;img-center&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  　　大家在繁华都市的生活，确实是枯燥而乏味的，在经历了漫长的一周奋战,都有一种疲惫的感觉，然而大家都会选择在周末或者休息中想方设法的给自己找点放松的方式，包括我在内，偶尔会选择郊外旅行，朋友聚餐聊天,看看电影等等。&lt;/p&gt;

&lt;p&gt;  　　2012这一年年底的30号，选择票房突破10亿以上的喜剧片-《人再囧途之泰囧》，虽然剧情没有《人在囧途》的情节那么经凑，但是确实给大家带来了不少放松的笑点。在看《人在囧途》这部电影中，以王宝强的角色给人的感觉是傻中透着淳朴，徐峥是在旅途中收到着影响也在反思自己，到最后故事结尾反思人性的升华。&lt;/p&gt;

&lt;p&gt;  　　《人再囧途之泰囧》从剧情来看和第一部相比，不是喜剧片而是一部闹剧片。相信大家都会想肯定是有《人在囧途》这部电影的基础，给大家带来了娱乐带来了新意。故事的情节跟第一部没都什么变化，感觉不到任何吸引人的特色，从王宝的角色中，种种的举动，让人匪夷所思。不过电影中的一切都是让大家拿来当话柄的，让大家娱乐的，之所以他能取得这么大的成功，觉得大部分都是来网络营销，喜剧类型的片子稀缺，时机等因素吧。&lt;/p&gt;

&lt;h3&gt;观后总结&lt;/h3&gt;

&lt;p&gt;之所以写这么一篇文章，主要目的有：&lt;br&gt;
1、人拼搏了一辈子，到头来还是一场空，没有珍惜该珍惜的一切.&lt;br&gt;
2、提醒那些在都市奋斗付出了青春、爱情、亲情甚至生命的人。人的一生很短暂，希望大家给自己多一些时间。&lt;br&gt;
3、“舍得”，有舍才有得&lt;br&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/31/renzaijiongtu-taijiong/index.html</link>
            <guid>http://demi-panda.com/2012/12/31/renzaijiongtu-taijiong/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[REST client 基于浏览器的测试工具 ]]></title>
            <pubDate>Sun, 30 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt; 　　以前在开发webservice服务，都是自己基于HTTP协议，自己写一个测试程序来进行测试，最近在研究RestFul，对以前webservice服务进行了重构，总结了不少经验，今天就给大家介绍下几款Rest Client的测试工具。&lt;/p&gt;

&lt;h3&gt;REST介绍&lt;/h3&gt;

&lt;p&gt; 　　所谓REST，是Representational State Transfer，这个词汇的中文翻译很不统一，而且很晦涩，有叫“具象状态传输”，有叫“表象化状态转变”，等等。&lt;/p&gt;

&lt;p&gt; 　　REST风格的Web服务，是通过一个简洁清晰的URI来提供资源链接，客户端通过对URI发送HTTP请求获得这些资源，而获取和处理资源的过程让客户端应用的状态发生改变（不像那些远程过程调用那么直接地发生改变）。&lt;/p&gt;

&lt;p&gt; 　　常用的对资源进行CRUD（Create, Read, Update 和 Delete）的四种HTTP方法分别是POST, GET, PUT, DELETE。&lt;/p&gt;

&lt;h3&gt;基于浏览器的Rest Client工具&lt;/h3&gt;

&lt;p&gt; 　　在chrome或者firefox浏览器都有很多插件，我一般都是使用chrome浏览器，在chrome的webstore中可以搜索到自己想要的插件。这里就讲讲&lt;a href=&quot;https://chrome.google.com/webstore/detail/advanced-rest-client/hgmloofddffdnphfgcellkdfbfbjeloo/details&quot;&gt;Advance REST Client&lt;/a&gt;,&lt;a href=&quot;https://chrome.google.com/webstore/detail/postman-rest-client/fdmmgilgnpjigdojojpjoooidkmcomcm?utm_source=chrome-ntp-icon&quot;&gt;Postman-REST Client&lt;/a&gt;,&lt;a href=&quot;https://chrome.google.com/webstore/detail/dev-http-client/aejoelaoggembcahagimdiliamlcdmfm?utm_source=chrome-ntp-icon&quot;&gt;DEV HTTP CLIENT&lt;/a&gt;,&lt;a href=&quot;https://chrome.google.com/extensions/detail/fhjcajmcbmldlhcimfajhfbgofnpcjmb&quot;&gt;Simple REST Client&lt;/a&gt;，火狐下的&lt;a href=&quot;https://addons.mozilla.org/zh-CN/firefox/addon/9780/&quot;&gt;RESTClient插件&lt;/a&gt;。&lt;/p&gt;

&lt;h3&gt;Advanced REST client&lt;/h3&gt;

&lt;p&gt; 　　网页开发者辅助程序来创建和测试自定义HTTP请求。它是一款非常强大，使用简单的客户端测试工具，得到了程序员的好评。每周超过50k的开发者使用此应用程序。如此多的人是不会错的！
&lt;img src=&quot;/media/pub/web/advance-rest-client.jpg&quot; width=&quot;580px&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h4&gt;支持的功能&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt; Make a HTTP request (via XmlHttpRequest level 2)&lt;/li&gt;
&lt;li&gt;Debug socket (via web socket API).&lt;/li&gt;
&lt;li&gt;JSON response viewer&lt;/li&gt;
&lt;li&gt;XML response viewer&lt;/li&gt;
&lt;li&gt;set custom headers - even does not supported by XmlHttpRequest object&lt;/li&gt;
&lt;li&gt;help with filling HTTP headers (hint + code completion)&lt;/li&gt;
&lt;li&gt;add headers list as raw data or via form&lt;/li&gt;
&lt;li&gt;construct POST or PUT body via raw input, form or send file(s) with request&lt;/li&gt;
&lt;li&gt;set custom form encoding&lt;/li&gt;
&lt;li&gt;remember latest request (save current form state and restore on load)&lt;/li&gt;
&lt;li&gt; save (Ctrl+S) and open (Ctrl+O) saved request forms&lt;/li&gt;
&lt;li&gt;history support&lt;/li&gt;
&lt;li&gt;data import/export&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;Postman -REST client&lt;/h3&gt;

&lt;p&gt; 　　Postman可以帮助你更有效的针对API工作。Postman是一个scratch-your-own-itch项目。它需要的是开发者有效的在项目中创建APIS，能够对API测试进行收藏保留。
&lt;img src=&quot;/media/pub/web/postman-rest-client.jpg&quot; width=&quot;580px&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h4&gt;支持功能&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;HTTP requests 支持文件上传&lt;/li&gt;
&lt;li&gt;格式化API响应的JSON and XML&lt;/li&gt;
&lt;li&gt;打开 responses 的HTML文件在一个新窗口展示&lt;/li&gt;
&lt;li&gt;支持REST准则的超媒体应用状态的引擎- HATEOS &lt;/li&gt;
&lt;li&gt;图像预览&lt;/li&gt;
&lt;li&gt;Request history&lt;/li&gt;
&lt;li&gt;基本oauth 1.0助手&lt;/li&gt;
&lt;li&gt;Autocomplete for URL and header values&lt;/li&gt;
&lt;li&gt;可以在URL参数中使用 key/value编辑添加参数或header值&lt;/li&gt;
&lt;li&gt;使用环境变量容易转移之间设置。可用于测试，生产，分期或本地设置。&lt;/li&gt;
&lt;li&gt;使用全局变量的值是在整个 APIs&lt;/li&gt;
&lt;li&gt;使用快速查找功能预览变量和它们的值使用状况&lt;/li&gt;
&lt;li&gt;键盘快捷方式，最大限度地提高您的生产力&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;Simple REST Client&lt;/h3&gt;

&lt;p&gt; 　　&lt;a href=&quot;https://chrome.google.com/extensions/detail/fhjcajmcbmldlhcimfajhfbgofnpcjmb&quot;&gt;Simple REST Client插件&lt;/a&gt;，提供了一个简单的表单进行各种HTTP操作，并可以看到返回的信息。构建自定义HTTP请求直接测试您的网络服务。
&lt;img src=&quot;/media/pub/web/Simple-REST-Client-560x491.jpg&quot; width=&quot;580px&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h3&gt;Firefox下的RESTClient&lt;/h3&gt;

&lt;p&gt; 　　Firefox&lt;a href=&quot;https://addons.mozilla.org/zh-CN/firefox/addon/9780/&quot;&gt;RESTClient&lt;/a&gt;的插件，这款插件由国人开发，功能上支持Basic和OAuth的登录header发送，并且对于返回的XML数据还可以高亮显示&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/media/pub/web/RESTClient-560x420.jpg&quot; width=&quot;580px&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h3&gt;Linux常用的工具CURL&lt;/h3&gt;

&lt;p&gt; 　　CURL是一个很强大的支持各种协议的文件传输工具，用它来进行RESTful Web Services的测试简直是小菜一碟。&lt;/p&gt;

&lt;p&gt;CURL的命令参数非常多，一般用于RESTful Web Services测试要用到下面四种参数：&lt;br&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;-d/–data &lt;data&gt;：POST数据内容&lt;/li&gt;
&lt;li&gt;-X/–request &lt;command&gt;：指定请求的方法（使用-d时就自动设为POST了）&lt;/li&gt;
&lt;li&gt;-H/–header &lt;line&gt;：设定header信息&lt;/li&gt;
&lt;li&gt;-I/–head：只显示返回的HTTP头信息&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Java GUI rest-client&lt;/h3&gt;

&lt;p&gt; 　　这是一个用Java写的测试小工具，&lt;a href=&quot;http://code.google.com/p/rest-client/&quot;&gt;项目主页&lt;/a&gt;上提到它有命令行和GUI两种版本。为了方便操作我们选择GUI版本来看看。既然是一款软件，显然就比刚才介绍的浏览器插件功能更加强大。它支持应答正文的JSON和XML缩排和高亮，还可以一键搭建一个RESTful服务端，另外还提供了单元测试的功能。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/media/pub/web/RESTClient-Java-491x600.jpg&quot; width=&quot;580px&quot;&gt;&lt;/img&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/30/advanced-rest-client/index.html</link>
            <guid>http://demi-panda.com/2012/12/30/advanced-rest-client/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Jekyll快速搭建免费的个人博客 ]]></title>
            <pubDate>Sat, 29 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　近日，发现个人总结一些心得，整理一些技术文章的时候，都不确定到底放在哪个网站上合适，因为自己用过好几个博客网站，感觉非常乱，用的也不是很顺心，总感觉缺少了点啥。在行业中近几年比较火的搭建个人博客很多采用wordpress来构建，有使用CMS的等等，虽然这些提高了个人搭建的速度，内容的丰富性等等，但是发现免费的空间限制太多，回归想想，自己只需要一个简单的，轻量级的静态网站就OK。今天，我将介绍一种简单的解决方案--&lt;a href=&quot;http://jekyllrd.com&quot;&gt;jekyll&lt;/a&gt; 使你可以轻而易举地创建属于个人的博客网站。
&lt;img src=&quot;http://demi-panda.com/media/pub/web/Jekyll.jpg&quot; width=&quot;330px&quot; alt=&quot;jekyll-blog&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h3&gt;Jekyll的含义&lt;/h3&gt;

&lt;p&gt;　　Jekyll是一种简单的、适用于博客（blog aware）的、静态网站生成引擎。Jekyll网站的宣传语这么说。但，这究竟是什么意思呢？静态网站生成引擎是利用一整套文件生成网站的程序。正如你看到的，我们可以利用一套模板，单独生成内容文件，然后用Jekyll生成网站。“blog aware”意思是我们可以用它来创建博客，或者其他有系列文章（例如合集，英文称portfolio）发布的网站。让我们来尝试一下吧！&lt;/p&gt;

&lt;h3&gt;Jekyll搭建博客的好处&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
免费，无限流量。
&lt;/li&gt;
&lt;li&gt;
享受git的版本管理功能，不用担心文章遗失
&lt;/li&gt;
&lt;li&gt;你只要用自己喜欢的编辑器写文章就可以了，其他事情一概不用操心，都由github处理。&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;Jekyll搭建博客的缺点&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;有一定技术门槛，你必须要懂一点git和网页开发。&lt;/li&gt;
&lt;li&gt;它生成的是静态网页，添加动态功能必须使用外部服务，比如评论功能就只能用&lt;a href=&quot;http://disqus.com&quot;&gt;disqus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;它不适合大型网站，因为没有用到数据库，每运行一次都必须遍历全部的文本文件，网站越大，生成时间越长&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;安装Jekyll&lt;/h3&gt;

&lt;p&gt;从安装Jekyll开始；它是一种Ruby Gem，所以可以直接用下面的命令安装：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ gem install jekyll
&lt;/pre&gt;


&lt;p&gt;搭建本地环境，请参考我的另一篇文章：&lt;a href=&quot;http://demi-panda.com/2012/10/30/install-jekyll/&quot;&gt;Linux 安装Jekyll 环境&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Jekyll构成&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
|-- _config.yml
|-- _includes
|-- _layouts
|   |-- default.html
|   |-- post.html
|-- _posts
|   |-- 2012-12-29-hello-jekyll.md
|-- index.html
|-- media
    |-- css
        |-- style.css
    |-- javascripts
&lt;/pre&gt;




&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;组件名称:&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
      _config.yum
      &lt;/hd&gt;
      &lt;td style=&quot;width:500px&quot;&gt;
      存储站点的配置信息
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      _includes
      &lt;/hd&gt;
      &lt;td&gt; 
      这个文件夹用于存放局部展示的视图.
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      _layouts 
      &lt;/hd&gt;
      &lt;td&gt; 
      此文件夹的内容将被插入到模板。你能有不同的布局不同的页面或页面部分。
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      _posts
      &lt;/hd&gt;
      &lt;td&gt; 
      此文件夹包含您的动态内容/职位。命名格式是需@YEAR-MONTH-DATE-title.MARKUP@
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      _site
      &lt;/hd&gt;
      &lt;td&gt; 
      存放所有生成的网站的文件。
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      media
      &lt;/hd&gt;
      &lt;td&gt; 
      存放常用的资源文件，比如CSS，images,javascript等
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;


&lt;h3&gt;创建项目实例&lt;/h3&gt;

&lt;p&gt;下面，我举一个实例，演示如何在github上搭建blog，你可以跟着一步步做。为了便于理解，这个blog只有最基本的功能。&lt;/p&gt;

&lt;p&gt;在搭建之前，你必须已经安装了&lt;a href=&quot;http://git-scm.com/book/en/Getting-Started-Installing-Git&quot;&gt;git&lt;/a&gt;，并且有&lt;a href=&quot;http://github.com&quot;&gt;github&lt;/a&gt;账户。&lt;/p&gt;

&lt;h4&gt;Step 1 创建项目&lt;/h4&gt;

&lt;p&gt;建立一个目录，作为项目的主目录&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ mkdir jekyll_demo
&lt;/pre&gt;


&lt;p&gt;将目录进行git初始化,如果自己一个人开发，那就直接使用master分支就好啦，提交到github上即可&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ cd jekyll_demo
$ git init
&lt;/pre&gt;


&lt;h4&gt;Step 2 创建设置文件&lt;/h4&gt;

&lt;p&gt;在项目根目录下，建立一个名为_config.yml的文本文件。它是jekyll的设置文件，我们在里面填入如下内容，其他设置都可以用默认选项，具体解释参见&lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/Configuration&quot;&gt;官方网页&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;
任何不以下划线开头的文件和目录都会被复制到生成的网站。&lt;/strong&gt;&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ vi _config.yml
$ baseurl: /jekyll_demo
&lt;/pre&gt;


&lt;h3&gt;Step 3 创建模板文件&lt;/h3&gt;

&lt;p&gt;在项目根目录下，创建一个_layouts目录，用于存放模板文件。&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ mkdir _layouts
&lt;/pre&gt;


&lt;p&gt;进入该目录，创建一个default.html文件，作为Blog的默认模板。并在该文件中填入以下内容。&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
&amp;lt;!DOCTYPE html&amp;gt;
　　&amp;lt;html&amp;gt;
　　&amp;lt;head&amp;gt;
　　　　&amp;lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&amp;gt;
　　　　&amp;lt;title&amp;gt;&amp;#123;{page.title }&amp;#125;&amp;lt;/title&amp;gt;
　　&amp;lt;/head&amp;gt;
　　&amp;lt;body&amp;gt;
    &amp;#123;{content}&amp;#125;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;


&lt;h5&gt;贴士&lt;/h5&gt;

&lt;p&gt;1、Jekyll默认的是用&lt;a href=&quot;https://github.com/shopify/liquid/wiki/liquid-for-designers&quot;&gt;Liquid模板系统&lt;/a&gt;,&amp;#123;{page.title}&amp;#125;表示文章标题。&amp;#123;{content}&amp;#125; 表示文章内容，更多模板变量请参考&lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/Template-Data&quot;&gt;官方文档&lt;/a&gt;。&lt;br&gt;
2、&lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/Plugins&quot;&gt;Jekyll插件&lt;/a&gt;允许你修改网站内容生成方式&lt;br&gt;
3、你可以用&lt;a href=&quot;https://github.com/Shopify/liquid/wiki&quot;&gt;Liquid&lt;/a&gt;做更多的事，Jekyll增加了很多&lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/Liquid-Extensions&quot;&gt;扩展&lt;/a&gt; 。&lt;/p&gt;

&lt;h5&gt;目录结构&lt;/h5&gt;

&lt;pre id=&quot;bash&quot;&gt;
/jekyll_demo
    |-- _config.yml
    |-- _layouts
    |   |-- default.html
    |   |-- post.html
    |-- _posts
    |   |-- 2012-12-29-hello-jekyll.md
&lt;/pre&gt;


&lt;h3&gt;Step 4 创建文章&lt;/h3&gt;

&lt;p&gt;在项目的根目录创建一个_posts目录，用于存放blog文章.&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ mkdir _posts
&lt;/pre&gt;


&lt;p&gt;进入该目录，创建第一篇文章。文章就是普通的文本文件，文件名假定为2012-12-29-hello-jekyll.md。(注意，文件名必须为&quot;年-月-日-文章标题.后缀名&quot;的格式。如果网页代码采用html格式，后缀名为html；如果采用&lt;a href=&quot;http://demi-panda.com/2012/11/17/markdown&quot;&gt;markdown&lt;/a&gt;格式，后缀名为md。）&lt;/p&gt;

&lt;p&gt;在该文件中，填入以下内容：（注意，行首不能有空格）&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
---
layout: default
title: 你好，Jekyll
---
&amp;lt;h2&amp;gt;&amp;#123;{ page.title }&amp;#125;&amp;lt;/h2&amp;gt;
&amp;lt;p&amp;gt;我的第一篇文章&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;&amp;#123;{ page.date | date_to_string }&amp;#125;&amp;lt;/p&amp;gt;
&lt;/pre&gt;


&lt;p&gt;每篇文章的头部，必须有一个&lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter&quot;&gt;yaml文件头&lt;/a&gt;，用来设置一些元数据。它用三根短划线&quot;---&quot;，标记开始和结束，里面每一行设置一种元数据。&quot;layout:default&quot;，表示该文章的模板使用_layouts目录下的default.html文件；&quot;title: 你好，Jekyll&quot;，表示该文章的标题是&quot;你好，Jekyll&quot;，如果不设置这个值，默认使用嵌入文件名的标题，即&quot;hello Jekyll&quot;。&lt;/p&gt;

&lt;p&gt;在yaml文件头后面，就是文章的正式内容，里面可以使用模板变量。&amp;#123;{ page.title }&amp;#125;就是文件头中设置的&quot;你好，世界&quot;，&amp;#123;{ page.date }&amp;#125;则是嵌入文件名的日期（也可以在文件头重新定义date变量），&quot;| date_to_string&quot;表示将page.date变量转化成人类可读的格式。&lt;/p&gt;

&lt;h3&gt;Step 5 创建文章模板&lt;/h3&gt;

&lt;p&gt;发布了文章，当然需要文章详情的模板咯,进入_layouts中创建文章详情的模板&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ cd _posts
$ vi post.html
&lt;/pre&gt;


&lt;pre &gt;
---
layout: default
---
&amp;lt;div id=&quot;content&quot;&amp;gt;
&amp;lt;div class=&quot;posttop&quot;&amp;gt;
&amp;lt;h1 class=&quot;posttitle&quot;&amp;gt;
&amp;#123;{ page.title }&amp;#125;
&amp;lt;/h1&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class=&quot;meta&quot;&amp;gt;
Posted 
&amp;lt;time class=&quot;text&quot; datetime=&quot;&amp;#123;{ page.date | date:&quot;%Y-%m-%d&quot; }&amp;#125;&quot;&amp;gt;&amp;#123;{ page.date | date:&quot;%Y-%m-%d&quot; }&amp;#125;&amp;lt;/time&amp;gt;&amp;nbsp; |&amp;nbsp;
&amp;#123;% if page.author != null %&amp;#125;
By &amp;#123;{ page.author }&amp;#125; &amp;nbsp;
&amp;#123;% else %&amp;#125;
By 熊猫人
&amp;#123;% endif %&amp;#125;
&amp;#123;% if page.tags%&amp;#125;
&amp;lt;div class=&quot;tag&quot;&amp;gt;
&amp;#123;% for tag in page.tags%&amp;#125;
&amp;lt;a href=&quot;&amp;#123;{ site.url }&amp;#125;/tags/#&amp;#123;{tag}&amp;#125;&quot; class=&quot;text&quot; title=&quot;&amp;#123;{ tag }&amp;#125;&quot; rel=&quot;category tag&quot;&amp;gt;&amp;#123;{ tag}&amp;#125;&amp;lt;/a&amp;gt;&amp;nbsp;
&amp;#123;% endfor %&amp;#125;
&amp;lt;/div&amp;gt;
&amp;#123;% endif %&amp;#125;
&amp;lt;/div&amp;gt;
&amp;lt;div class=&quot;postcontent-entry&quot;&amp;gt;
&amp;lt;div class=&quot;cleared&quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;#123;{ content }&amp;#125;
&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;


&lt;h3&gt;Step 6 创建首页&lt;/h3&gt;

&lt;p&gt;有了文章以后，还需要有一个首页。回到根目录，创建一个index.html文件，填入以下内容。&lt;/p&gt;

&lt;pre &gt;
---
layout: default
title: 我的Blog
---
&amp;lt;h2&amp;gt;&amp;#123;{ page.title }&amp;#125;&amp;lt;/h2&amp;gt;
&amp;lt;p&amp;gt;最新文章&amp;lt;/p&amp;gt;
&amp;lt;ul&amp;gt;
&amp;#123;% for post in site.posts %&amp;#125;
&amp;lt;li&amp;gt;&amp;#123;{ post.date | date_to_string }&amp;#125; &amp;lt;a href=&quot;&amp;#123;{ site.url }&amp;#125;&amp;#123;{ post.url }&amp;#125;&quot;&amp;gt;&amp;#123;{ post.title }&amp;#125;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;#123;% endfor %&amp;#125;
&amp;lt;/ul&amp;gt;
&lt;/pre&gt;


&lt;p&gt;它的Yaml文件头表示，首页使用default模板，标题为&quot;我的Blog&quot;。然后，首页使用了&amp;#123;% for post in site.posts %&amp;#125;，表示对所有帖子进行一个遍历。这里要注意的是，Liquid模板语言规定，输出内容使用两层大括号，单纯的命令使用一层大括号。至于&amp;#123;{site.baseurl}&amp;#125;就是_config.yml中设置的baseurl变量。&lt;/p&gt;

&lt;h3&gt;Step 7 发布内容&lt;/h3&gt;

&lt;h5&gt;本地发布&lt;/h5&gt;

&lt;p&gt;1、启动服务，在当前jekyll_demo的目录下，启动jekyll --server&lt;br&gt;
2、访问 http://localhost:4000/&lt;/p&gt;

&lt;h5&gt;发布到github上&lt;/h5&gt;

&lt;pre &gt;
$ git add .
$ git commit -m &quot;deploy jekyll_demo&quot;
&lt;/pre&gt;


&lt;p&gt;然后，前往github的网站，在网站上创建一个名为jekyll_demo的库。接着，再将本地内容推送到github上你刚创建的库。注意，下面命令中的username，要替换成你的username。&lt;/p&gt;

&lt;pre&gt;
$ git remote add origin https://github.com/username/jekyll_demo.git
$ git push origin master
&lt;/pre&gt;


&lt;p&gt;上传成功之后，等10分钟左右，访问http://username.github.com/jekyll_demo/就可以看到Blog已经生成了（将username换成你的用户名）。&lt;/p&gt;

&lt;p&gt;首页&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://demi-panda.com/media/pub/web/jekyll-blog.jpg&quot; width=&quot;330px&quot; alt=&quot;jekyll-blog&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;p&gt;文章页面&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://demi-panda.com/media/pub/web/jekyll-blog-2.jpg&quot; width=&quot;330px&quot; alt=&quot;jekyll-blog&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h3&gt;Step 8 域名绑定&lt;/h3&gt;

&lt;p&gt;域名绑定请参考我的博客中 &lt;a href=&quot;http://demi-panda.com/2012/11/09/github-pages-domain/&quot;&gt;浅谈github域名绑定&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;结论&lt;/h3&gt;

&lt;p&gt;本文介绍了Jekyll——一种简单的、适用于做博客的、静态网站生成引擎。下次如果你想建一个宣传册风格的、小型展示页面，可以试试用Jekyll，如果你成功了，或者在创建用遇到什么困难，请在留言中告诉我,我会尽最大努力帮助您, 再次感谢您的阅读,支持熊猫家族！&lt;/p&gt;

&lt;p&gt;[Jekyll_demo]代码地址&lt;a href=&quot;https://github.com/denghp/jekyll_demo&quot;&gt;https://github.com/denghp/jekyll_demo&lt;/a&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/29/building-sites-with-jekyll/index.html</link>
            <guid>http://demi-panda.com/2012/12/29/building-sites-with-jekyll/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Socket TIME_WAIT 解决方案 ]]></title>
            <pubDate>Thu, 27 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt; 　　最近在使用nginx做代理时，后端服务无任何异常报出，但是就是无法提供正常服务,重起之后还是这样，经过使用 netstat -an 查明原因，原来发现操出现非常多的TIME_WAIT的状态，如果长时间处于大量的TIME_WAIT状态并未关闭，则socket端口和句柄被用尽，系统无法再发起新的连接！&lt;/p&gt;

&lt;h3&gt;分析出现 TIME_WAIT 原因&lt;/h3&gt;

&lt;h4&gt;首先了解TCP建立连接的过程&lt;/h4&gt;

&lt;p&gt;详情请阅读&lt;a href=&quot;http://demi-panda.com/2012-12-27-TCP-status/&quot;&gt;TCP 3次握手连接协议和4次握手断开连接协议&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;什么情况下会进入 TIME_WAIT 状态 ?&lt;/h4&gt;

&lt;p&gt;1、server 收到 client 的 FIN, server 发送 ACK，进入 TIME_WAIT&lt;br&gt;
2、当 server 还在 FIN_WAIT_1 时，client 发送同时带 FIN 和 ACK 的报文，server 回复 ACK，将直接进入 TIME_WAIT，不经过 FIN_WAIT_2&lt;br&gt;
&lt;strong&gt;注意：&lt;/strong&gt;&lt;br&gt;
根据TCP协议，主动关闭的一端会才会进入 TIME_WAIT 状态，被动关闭的一端进入 CLOSED 状态。持续2*MSL(Max Segment Lifetime)，缺省为240秒，在这个post中简洁的介绍了为什么需要这个状态。&lt;/p&gt;

&lt;h3&gt;为啥要有 TIME_WAIT 状态&lt;/h3&gt;

&lt;p&gt;1、防止上一次连接中的包，迷路后重新出现，影响新连接（经过2MSL，上一次连接中所有的重复包都会消失）&lt;br&gt;
2、可靠的关闭TCP连接，在主动关闭方发送的最后一个 ack(fin) ，有可能丢失，这时被动方会重新发fin, 如果这时主动方处于 CLOSED 状态 ，就会响应 rst 而不是 ack。所以主动方要处于 TIME_WAIT 状态，而不能是 CLOSED&lt;/p&gt;

&lt;h3&gt;TIME_WAIT 负面影响&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;TCB 的增多会导致更多内存的消耗&lt;/li&gt;
&lt;li&gt;降低 avtive connection 的连接速度&lt;/li&gt;
&lt;li&gt;降低 MSL 可能导致系统的不稳定&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;TIME_WAIT解决方案&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ vi /etc/sysctl.conf
#修改如下参数
net.ipv4.tcp_syncookies = 1 
net.ipv4.tcp_tw_reuse = 1 
net.ipv4.tcp_tw_recycle = 1 
net.ipv4.tcp_fin_timeout = 30
#使如上修改生效，执行如下代码
/sbin/sysctl -p
&lt;/pre&gt;


&lt;p&gt;net.ipv4.tcp_syncookies = 1 表示开启SYN Cookies。当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为0，表示关闭；&lt;br&gt;
net.ipv4.tcp_tw_reuse = 1 表示开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接，默认为0，表示关闭； &lt;br&gt;
net.ipv4.tcp_tw_recycle = 1 表示开启TCP连接中TIME-WAIT sockets的快速回收，默认为0，表示关闭。&lt;br&gt;
net.ipv4.tcp_fin_timeout 修改系統默认的 TIMEOUT 时间.&lt;br&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/27/socket-time-wait/index.html</link>
            <guid>http://demi-panda.com/2012/12/27/socket-time-wait/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Ganglia安装配置 ]]></title>
            <pubDate>Thu, 27 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;  　　Ganglia是一个集群监控软件，底层使用RRDTool获得数据。Ganglia分为ganglia-monitor和gmetad两部分，前 者运行在集群每个节点上，收集RRDTool产生的数据，后者运行在监控服务器上，收集每个ganglia-monitor的数据，通过Web UI可以看到直观的各种图表。&lt;/p&gt;

&lt;h3&gt;Ganglia四大组成部分&lt;/h3&gt;

&lt;h4&gt;Gmond&lt;/h4&gt;

&lt;p&gt;  　　gmond负责收集本地机核心指标的基本设置——如CPU使用情况、基础网络和内存数据等。gmond daemons通过多播或单播模式给同一群组的其他gmond daemons发送数据。这样，每个daemon都可在任何时间追踪到全球的计算群组，且每一台均可给gmetad提供完整的数据报告。&lt;/p&gt;

&lt;h4&gt;gmetad daemon&lt;/h4&gt;

&lt;p&gt;  　　gmetad是系统的核心。它从一个或多个gmetad daemon中收集指标，将其存储在RRD文件中留待以后系统恢复之用。gmetad daemon也可以选择其他gmetad来收集其他集成系统的信息。这一过程被称作“联合”，对于分散但有关联的群组，这是了解总体运行状态的有效方式。&lt;/p&gt;

&lt;h4&gt;前段数据展示&lt;/h4&gt;

&lt;p&gt;  　　网络前端构建在PHP上，实际是用来显示数据的。当每一页都已下载完毕，PHP程式需要来自gmetad的相关数据，以便生成需求页。有很 多事先做好的报告，这些报告已提供群组整体运行状态的信息，因此，现在仅将用户报告完成即可。网络前端不像gmetad那样必须在同一台计算机上运行。&lt;/p&gt;

&lt;h4&gt;对于不直接支持gmetad的指标&lt;/h4&gt;

&lt;p&gt;  　　对于不直接支持gmetad的指标，Ganglia和命令行程序gmetric共同追踪附加的指标。这些信息都报告给gmond， gmond可将这些信息和已建立起的统计数据一起传递给gmetad。最新发布的3.1.2版本可通过用c语言或Python语言来编写模块，达到直接扩 展gmond的目的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/media/pub/linux/ganglia-2.jpg&quot; width=&quot;380px&quot; alt=&quot;ganglia&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h3&gt;安装步骤&lt;/h3&gt;

&lt;h4&gt;安装服务、客户端&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo apt-get install ganglia-monitor ganglia-webfrontend
&lt;/pre&gt;


&lt;h3&gt;启动服务&lt;/h3&gt;

&lt;h4&gt;启动gmetad&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo service gmetad start
启动成功：Starting Ganglia Monitor Meta-Daemon: gmetad.
&lt;/pre&gt;


&lt;h4&gt;启动ganglia-monitor&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo service ganglia-monitor start
启动成功 Starting Ganglia Monitor Daemon: gmond
&lt;/pre&gt;


&lt;h4&gt;启动apache2&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo /etc/init.d/apache2 restar
&lt;/pre&gt;


&lt;h3&gt;验证服务&lt;/h3&gt;

&lt;p&gt;sysv-rc-conf gmetad on  (ubuntu 下sysv-rc-conf 命令等同redhat 下的chkconfig 命令)&lt;/p&gt;

&lt;h4&gt;验证gmetad&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sysv-rc-conf --list gmetad
GMETAD 0:off 1:off 2:on 3:on 4:on 5:on 6:off 
#验证gmetad 正常工作：telnet localhost 8651就可以得到监控的各个主机的状态。
&lt;/pre&gt;


&lt;h4&gt;验证gmond&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sysv-rc-conf —list gmond 
gmond 0:off 1:off 2:on 3:on 4:on 5:on 6:off
service gmond start Starting GANGLIA gmond: [ OK ]  验证gmond
#正常工作：telnet localhost 8649 就可以获取机群内运行gmond的主机的信息
&lt;/pre&gt;


&lt;h4&gt;访问服务&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:80/ganglia&quot;&gt;http://localhost:80/ganglia&lt;/a&gt;&lt;br&gt;
有可能无法访问，检查原因可能是因为ganglia-webfront这个包默认将Web相关的代码安装在”/usr/share/ganglia-webfrontend/”路径下，这样apache访问不到。&lt;br&gt;&lt;/p&gt;

&lt;p&gt;解决方案：&lt;br&gt;
可以使用软链接，或者直接将目录移到”/var/www/”目录下&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo ln -s /usr/share/ganglia-webfrontend/ /var/www/ganglia
#或者
$ sudo mv /usr/share/ganglia-webfrontend/ /var/www/ganglia
&lt;/pre&gt;


&lt;h3&gt;集群环境配置&lt;/h3&gt;

&lt;h3&gt;服务器端配置&lt;/h3&gt;

&lt;p&gt;1、修改gmetad.conf 文件&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo vi gmetad.conf
# data_source &quot;my grid&quot; 50 1.3.4.7:8655 grid.org:8651 grid-backup.org:8651  
# data_source &quot;another source&quot; 1.3.4.7:8655  1.3.4.8  
data_source &quot;172.16.205.65&quot; localhost  
data_source &quot;172.16.205.55&quot; 172.16.205.55  
data_source &quot;172.16.205.58&quot; 172.16.205.58  
data_source &quot;172.16.205.64&quot; 172.16.205.64  
data_source &quot;172.16.205.65&quot; 172.16.205.65  
#data_source &quot;172.16.16.25&quot; 172.16.16.25   
&lt;/pre&gt;


&lt;p&gt;2、配置集群监控的名称&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo vi gmetad.conf
# tag with this name.  
# default: unspecified  
gridname &quot;cloudsearch&quot;
&lt;/pre&gt;


&lt;h3&gt;客户端配置&lt;/h3&gt;

&lt;p&gt;1、全局配置参数&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$sudo vi gmond.conf
globals {
    daemonize = yes              
    setuid = yes             
    user = nobody  
    //必须要与本机gmetad.conf中配置的setuid_username &quot;nobody&quot;一致         
    debug_level = 0               
    max_udp_msg_len = 1472        
    mute = no
    deaf = no
    host_dmax = 0 /*secs */ 
    cleanup_threshold = 300 /*secs */
    gexec = no             
    send_metadata_interval = 0     
} 
&lt;/pre&gt;


&lt;p&gt;2、修改监控组名称&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
cluster { 
  name = &quot;172.16.205.65&quot;  
  //暴露给服务中心的名称default: 8652  
  owner = &quot;unspecified&quot;
  latlong = &quot;unspecified&quot; 
  url = &quot;unspecified&quot; 
} 
&lt;/pre&gt;


&lt;p&gt;3、配置完成后重新启动&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo service ganglia-monitor restart
&lt;/pre&gt;


&lt;p&gt;&lt;img src=&quot;/media/pub/linux/Ganglia_1.jpg&quot; width=&quot;550px&quot; alt=&quot;gangla-center&quot; class=&quot;img-left&quot;&gt;&lt;/img&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/27/ganglia-install/index.html</link>
            <guid>http://demi-panda.com/2012/12/27/ganglia-install/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[TCP 3次握手连接协议和4次握手断开连接协议 ]]></title>
            <pubDate>Thu, 27 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;  　　在TCP/IP协议中，TCP协议提供可靠的连接服务，采用三次握手建立一个连接，如图1所示。 (SYN包表示标志位syn=1,ACK包表示标志位ack=1,SYN+ACK包表示标志位syn=1,ack=1)&lt;/p&gt;

&lt;h3&gt;TCP/IP 状态机&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/media/pub/linux/tcp-ip-status.jpg&quot; width=&quot;480px&quot; alt=&quot;tcp-ip-status&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h3&gt;三次握手&lt;/h3&gt;

&lt;p&gt;第一次握手：建立连接时，客户端A发送SYN包(SEQ_NUMBER=j)到服务器B，并进入SYN_SEND状态，等待服务器B确认。&lt;br&gt;
第二次握手：服务器B收到SYN包，必须确认客户A的SYN(ACK_NUMBER=j+1)，同时自己也发送一个SYN包(SEQ_NUMBER=k)，即SYN+ACK包，此时服务器B进入SYN_RECV状态。&lt;br&gt;
第三次握手：客户端A收到服务器B的SYN＋ACK包，向服务器B发送确认包ACK(ACK_NUMBER=k+1)，此包发送完毕，客户端A和服务器B进入ESTABLISHED状态，完成三次握手。&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/media/pub/linux/0_1324910111Sc6p.gif&quot; width=&quot;380px&quot; alt=&quot;tcp三次握手&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h3&gt;四次握手&lt;/h3&gt;

&lt;p&gt; 　　由于TCP连接是全双工的，因此每个方向都必须单独进行关闭。这个原则是当一方完成它的数据发送任务后就能发送一个FIN来终止这个方向的连接。收到一个 FIN只意味着这一方向上没有数据流动，一个TCP连接在收到一个FIN后仍能发送数据。首先进行关闭的一方将执行主动关闭，而另一方执行被动关闭。&lt;/p&gt;

&lt;p&gt;1、客户端A发送一个FIN，用来关闭客户A到服务器B的数据传送(报文段4)。&lt;br&gt;
2、服务器B收到这个FIN，它发回一个ACK，确认序号为收到的序号加1(报文段5)。和SYN一样，一个FIN将占用一个序号。&lt;br&gt;
3、服务器B关闭与客户端A的连接，发送一个FIN给客户端A(报文段6)。&lt;br&gt;
4、客户端A发回ACK报文确认，并将确认序号设置为收到序号加1(报文段7)。&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/media/pub/linux/0_1324910173iGc3.gif&quot; width=&quot;380px&quot; alt=&quot;tcp四次握手&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h3&gt;为什么建立连接协议是三次握手，而关闭连接却是四次握手呢？&lt;/h3&gt;

&lt;p&gt; 　　因为服务端的LISTEN状态下的SOCKET当收到SYN报文的连接请求后，它可以把ACK和SYN(ACK起应答作用，而SYN起同步作用)放在一个报文里来发送。但关闭连接时，当收到对方的FIN报文通知时，它仅仅表示对方没有数据发送给你了；但未必你所有的数据都全部发送给对方了，所以你可能未必会马上会关闭SOCKET,也即你可能还需要发送一些数据给对方之后，再发送FIN报文给对方来表示你同意现在可以关闭连接了，所以它这里的ACK报文和FIN报文多数情况下都是分开发送的。&lt;/p&gt;

&lt;h3&gt;为什么TIME_WAIT状态还需要等2MSL后才能返回到CLOSED状态？&lt;/h3&gt;

&lt;p&gt;  　　因为虽然双方都同意关闭连接了，而且握手的4个报文也都协调和发送完毕，按理可以直接回到CLOSED状态（就好比从SYN_SEND状态到ESTABLISH状态那样）；但是因为我们必须要假想网络是不可靠的，你无法保证你最后发送的ACK报文会一定被对方收到，因此对方处于LAST_ACK状态下的SOCKET可能会因为超时未收到ACK报文，而重发FIN报文，所以这个TIME_WAIT状态的作用就是用来重发可能丢失的ACK报文。&lt;/p&gt;

&lt;h3&gt;为什么不能用两次握手进行连接？&lt;/h3&gt;

&lt;p&gt;  　　3次握手完成两个重要的功能，既要双方做好发送数据的准备工作(双方都知道彼此已准备好)，也要允许双方就初始序列号进行协商，这个序列号在握手过程中被发送和确认。&lt;/p&gt;

&lt;p&gt;  　　现在把三次握手改成仅需要两次握手，死锁是可能发生的。作为例子，考虑计算机S和C之间的通信，假定C给S发送一个连接请求分组，S收到了这个分组，并发送了确认应答分组。按照两次握手的协定，S认为连接已经成功地建立了，可以开始发送数据分组。可是，C在S的应答分组在传输中被丢失的情况下，将不知道S是否已准备好，不知道S建立什么样的序列号，C甚至怀疑S是否收到自己的连接请求分组。在这种情况下，C认为连接还未建立成功，将忽略S发来的任何数据分组，只等待连接确认应答分组。而S在发出的分组超时后，重复发送同样的分组。这样就形成了死锁。&lt;/p&gt;

&lt;h3&gt;小贴士&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
默认情况下(不改变socket选项)，当你调用close( or closesocket，以下说close不再重复)时，如果发送缓冲中还有数据，TCP会继续把数据发送完。
&lt;/li&gt;
&lt;li&gt;
发送了FIN只是表示这端不能继续发送数据(应用层不能再调用send发送)，但是还可以接收数据。
&lt;/li&gt;
&lt;li&gt;
应用层如何知道对端关闭？通常，在最简单的阻塞模型中，当你调用recv时，如果返回0，则表示对端关闭。在这个时候通常的做法就是也调用close，那么TCP层就发送FIN，继续完成四次握手。如果你不调用close，那么对端就会处于FIN_WAIT_2状态，而本端则会处于CLOSE_WAIT状态。这个可以写代码试试。
&lt;/li&gt;
&lt;li&gt;
在很多时候，TCP连接的断开都会由TCP层自动进行，例如你CTRL+C终止你的程序，TCP连接依然会正常关闭，你可以写代码试试。
&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;TCP协议状态详解&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;状态代码:&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
      CLOSED
      &lt;/hd&gt;
      &lt;td style=&quot;width:500px&quot;&gt;
      无连接是活动的或正在进行
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      LISTEN
      &lt;/hd&gt;
      &lt;td&gt; 
      服务器在等待进入呼叫
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      SYN_RECV
      &lt;/hd&gt;
      &lt;td&gt; 
      一个连接请求已经到达，等待确认
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      SYN_SENT
      &lt;/hd&gt;
      &lt;td&gt; 
      应用已经开始，打开一个连接
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      ESTABLISHED
      &lt;/hd&gt;
      &lt;td&gt; 
      正常数据传输状态
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      FIN_WAIT1
      &lt;/hd&gt;
      &lt;td&gt; 
      应用说它已经完成
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      FIN_WAIT2
      &lt;/hd&gt;
      &lt;td&gt; 
      另一边已同意释放
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      ITMED_WAIT
      &lt;/hd&gt;
      &lt;td&gt; 
      等待所有分组死掉
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      CLOSING
      &lt;/hd&gt;
      &lt;td&gt; 
      两边同时尝试关闭
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      TIME_WAIT
      &lt;/hd&gt;
      &lt;td&gt; 
      另一边已初始化一个释放
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      LAST_ACK
      &lt;/hd&gt;
      &lt;td&gt; 
      等待所有分组死掉
      &lt;/td&gt;
    &lt;/tr&gt;

  &lt;/tbody&gt;
&lt;/table&gt;


&lt;p&gt;原文地址：&lt;a href=&quot;http://blog.csdn.net/lostyears/article/details/7104349&quot;&gt;http://blog.csdn.net/lostyears/article/details/7104349&lt;/a&gt;&lt;br&gt;
声明：以上资料均来自互联网，本人经过了修整，再次感谢原创作者。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/27/TCP-status/index.html</link>
            <guid>http://demi-panda.com/2012/12/27/TCP-status/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Vim编码知识,乱码问题 ]]></title>
            <pubDate>Wed, 26 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;  　　在vim的初始学习阶段，乱码经常是困扰新手的一个比较烦躁的问题，本文试图阐述Vim的编码知识，及设置，针对乱码的原因和解决方案。&lt;/p&gt;

&lt;h3&gt;文本编码&lt;/h3&gt;

&lt;p&gt;  　　常见的文本编码包括:ASCII、GBK、GB2312、GB18030、UTF8、UTF16等，各种编码的来源与详细知识请参考以下的这篇文档：&lt;a href=&quot;http://hi.baidu.com/sinper9527/blog/item/4b6a58020b06c481d43f7c81.html&quot;&gt;http://hi.baidu.com/sinper9527/blog/item/4b6a58020b06c481d43f7c81.html&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Vim编码选项&lt;/h3&gt;

&lt;h4&gt;encoding- 简写enc&lt;/h4&gt;

&lt;p&gt;  　　encoding 是 Vim 内部使用的字符编码方式。当我们设置了 encoding 之后，Vim 内部所有的 buffer、寄存器、脚本中的字符串等，全都使用这个编码。&lt;/p&gt;

&lt;p&gt;  　　由于 encoding 选项涉及到 Vim 中所有字符的内部表示，因此只能在 Vim 启动的时候设置一次。在 Vim 工作过程中修改 encoding 会造成非常多的问题。Linux操作系统默认编码都是UTF-8,如果没有特殊情况，最好设置encoding为UTF-8。为了避免在非 UTF-8 的系统如 Windows 下，菜单和系统提示出现乱码，可同时做这几项设置：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ vim ~/.vimrc
#添加如下设置
set encoding=utf-8
set langmenu=zh_CN.UTF-8
language message zh_CN.UTF-8
&lt;/pre&gt;


&lt;h3&gt;termencoding&lt;/h3&gt;

&lt;p&gt;  　　故明思意termencoding 是 Vim 用于屏幕显示的编码，在显示的时候，Vim 会把内部编码转换为屏幕编码，再用于输出。内部编码中含有无法转换为屏幕编码的字符时，该字符会变成问号，但不会影响对它的编辑操作。如果 termencoding 没有设置，则直接使用 encoding 不进行转换。&lt;/p&gt;

&lt;h3&gt;fileencoding&lt;/h3&gt;

&lt;p&gt;  　　当 Vim 从磁盘上读取文件的时候，会对文件的编码进行探测。如果文件的编码方式和 Vim 的内部编码方式不同，Vim 就会对编码进行转换。转换完毕后，Vim 会将 fileencoding 选项设置为文件的编码。当 Vim 存盘的时候，如果 encoding 和 fileencoding 不一样，Vim 就会进行编码转换。因此，通过打开文件后设置 fileencoding，我们可以将文件由一种编码转换为另一种编码。&lt;/p&gt;

&lt;h3&gt;fileencodings&lt;/h3&gt;

&lt;p&gt;  　　编码的自动识别是通过设置 fileencodings 实现的，注意是复数形式。fileencodings 是一个用逗号分隔的列表，列表中的每一项是一种编码的名称。当我们打开文件的时候，VIM 按顺序使用 fileencodings 中的编码进行尝试解码，如果成功的话，就使用该编码方式进行解码，并将 fileencoding 设置为这个值，如果失败的话，就继续试验下一个编码。&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1
&lt;/pre&gt;


&lt;h4&gt;注意&lt;/h4&gt;

&lt;p&gt;latin1 是一种非常宽松的编码方式,如果你把 latin1 放到了 fileencodings 的第一位的话，打开任何中文文件都是乱码也就是理所当然的了。&lt;/p&gt;

&lt;h3&gt;Vim编码转换流程图&lt;/h3&gt;

&lt;p&gt;借用网友的一张流程图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/media/pub/linux/0_1274779296pVNL.gif&quot; width=&quot;330px&quot; alt=&quot;vim&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h3&gt;乱码的原因分析&lt;/h3&gt;

&lt;p&gt;1、操作系统的语言环境, 使用 locale 查看&lt;br&gt;
2、Vim的enc 设置,enc是用于VIM做内部表示的,也就是说VIM内部处理的是以enc编码的文本流，所以实际上enc的值和显示是否乱码没有根本上的必要联系。只不过enc的值通常是tenc的取值来源而已，所以这里暂且将它列举为可能引起乱码的一个因素。 &lt;br&gt;
3、Vim的tenc 设置&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;解决方案&lt;/h3&gt;

&lt;p&gt;1、从上面的原因来分析，tenc是用于告诉VIM终端的locale值是什么的，那么，如果tenc告诉VIM的值是错误的话，那就肯定乱码。所以乱码的最根本原因就是tenc的值和locale的值不同而造成的。&lt;br&gt;
(1) 在Native Linux/Unix环境下，locale的值与tenc的值不同 &lt;br&gt;
(2) 在Windows环境下，终端软件设置的Encoding（可以认为是locale）的值与tenc的值不同 &lt;br&gt;&lt;/p&gt;

&lt;p&gt;2、遵循简单而统一的原则&lt;br&gt;
(1) 中文环境GBK码 &lt;br&gt;
将你的locale设置为zh_CN.gbk，然后将VIM设置如下:&lt;br&gt;&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
set enc=gbk 
set fencs=gbk,gb2312,gb18030,cp936,utf8 
&lt;/pre&gt;


&lt;p&gt;(2) 中文环境utf8码 &lt;br&gt;
将你的locale设置为zh_CN.utf8，然后将VIM设置如下：&lt;br&gt;&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
set enc=utf8 
set fencs=utf8,gbk,gb2312,gb18030,cp936 
&lt;/pre&gt;


&lt;p&gt;(3) 英文环境ASCII码
最简单的就这个了，啥都不用设置了,建议还是用英文环境最好...&lt;/p&gt;

&lt;p&gt;3、可以设置系统变量&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ vi ~/.bash_profile 或者 vi /etc/profile
#添加如下代码
export LANG=&quot;zh_CN.UTF-8&quot;              或者&quot;en_US.UTF-8&quot;
export LC_ALL=&quot;zh_CN.UTF-8&quot;           或者&quot;en_US.UTF-8&quot;
&lt;/pre&gt;



 ]]></description>
            <link>http://demi-panda.com/2012/12/26/vim-encoding/index.html</link>
            <guid>http://demi-panda.com/2012/12/26/vim-encoding/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[vim 格式化代码,注释代码 快捷键 ]]></title>
            <pubDate>Tue, 25 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　使用Vim开发经常会遇到代码比较乱的格式，相信有经验的朋友都知道，只要是开发工具，或者编辑器都会有格式化的功能，哪怕是很简单的方式，今天就给大家介绍下在vim中如何使用格式化和注释代码的快捷键。&lt;/p&gt;

&lt;h3&gt;格式化方法&lt;/h3&gt;

&lt;h4&gt;格式化全文&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
gg=G
&lt;/pre&gt;


&lt;h4&gt;格式化选择模式&lt;/h4&gt;

&lt;p&gt;1、首先使用vim快捷键 v + 下上左右 选择某一区域&lt;br&gt;
2、同样使用 gg=G的方式来格式化,也可以直接使用 =&lt;/p&gt;

&lt;h4&gt;格式化当前光标下的N行&lt;/h4&gt;

&lt;p&gt;使用 N= 就行，这里的N表示数量&lt;/p&gt;

&lt;h4&gt;自动缩进当前行&lt;/h4&gt;

&lt;p&gt;使用  ==&lt;/p&gt;

&lt;h3&gt;注释代码方法&lt;/h3&gt;

&lt;h4&gt;选择模式注释&lt;/h4&gt;

&lt;p&gt;1、首先使用vim快捷键 Ctrl + v 选择某一区域&lt;br&gt;
2、再按大写的 I 进入行首插入模式输入注释符号如 &quot;//&quot; 或 &quot;#&quot;,输入完毕之后，Vim会自动将你选中的所有行首都加上注释&lt;/p&gt;

&lt;h4&gt;取消注释&lt;/h4&gt;

&lt;p&gt;Ctrl + v 进入块选择模式，选中你要删除的行首的注释符号，注意// 要选中两个，选好之后按d即可删除注释.&lt;/p&gt;

&lt;h4&gt;替换命令,批量注释&lt;/h4&gt;

&lt;p&gt;:起始行号,结束行号s/&lt;sup&gt;/注释符/g&lt;/sup&gt;&lt;/p&gt;

&lt;h3&gt;取消注释&lt;/h3&gt;

&lt;p&gt;:起始行号,结束行号s/&lt;sup&gt;注释符//g&lt;/sup&gt;&lt;/p&gt;

&lt;h3&gt;示例&lt;/h3&gt;

&lt;p&gt;在10 - 20行添加 // 注释&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
:10,50s#^#//#g
&lt;/pre&gt;


&lt;p&gt;在10 - 20行删除 // 注释&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
:10,20s#^//##g
&lt;/pre&gt;


&lt;p&gt;在10 - 20行添加 # 注释&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
:10,20s/^/#/g
&lt;/pre&gt;


&lt;p&gt;在10 - 20行删除 # 注释&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
:10,20s/^/#/g
&lt;/pre&gt;


&lt;h3&gt;提示&lt;/h3&gt;

&lt;p&gt;例子中正则的分割符使用的是相反的符号，如果匹配// 那么使用 #作分隔符这样不需要对/作转义处理，节省输入次数&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/25/vim-format/index.html</link>
            <guid>http://demi-panda.com/2012/12/25/vim-format/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[vim 常用的查找,替换,删除模式 ]]></title>
            <pubDate>Tue, 25 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt; 　　接下来给大家介绍下vim常用的命令，都是在开发中常用的命令哦，使用例子来介绍经验之谈。&lt;/p&gt;

&lt;h3&gt;简单替换表达式&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th style=&quot;width:350px;&quot;&gt;常见CASE:&lt;/th&gt;
      &lt;th style=&quot;width:230px;&quot;&gt;处理命令&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;去掉所有的行尾空格&lt;/hd&gt;
      &lt;td&gt;
      :%s/\s\+$//
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      去掉所有的空白行
      &lt;/hd&gt;
      &lt;td&gt; 
      :%s/\(\s*\n\)\+/\r/
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      去掉所有的&quot;//&quot;注释
      &lt;/hd&gt;
      &lt;td&gt; 
      :%s!\s*//.*!!
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      去掉所有的&quot;/*...*/&quot;注释
      &lt;/hd&gt;
      &lt;td&gt; 
      :%s!\s*/ \*\_.\{-}\*/\s*! !g
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      删除DOS方式的回车^M
      &lt;/hd&gt;
      &lt;td&gt; 
      :%s/r//g
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      删除行尾空白
      &lt;/hd&gt;
      &lt;td&gt; 
       :%s= *$==
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
        删除重复行
      &lt;/hd&gt;
      &lt;td&gt; 
      :%s/^(.*)n1/1$/
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      删除不含字符串'dd'的行
      &lt;/hd&gt;
      &lt;td&gt; 
      :g!/^dd/d
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      删除所有空行
      &lt;/hd&gt;
      &lt;td&gt; 
      :g/s* ^ $/d
      &lt;/td&gt;
    &lt;/tr&gt;

  &lt;/tbody&gt;
&lt;/table&gt;


&lt;h3&gt;简单删除命令&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th style=&quot;width:350px;&quot;&gt;常见CASE:&lt;/th&gt;
      &lt;th style=&quot;width:230px;&quot;&gt;处理命令&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
      删除光标处开始及其后的 n-1 个字符
      &lt;/hd&gt;
      &lt;td&gt;
      ndw 或 ndW
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      删至行首
      &lt;/hd&gt;
      &lt;td&gt; 
      d0
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      删至行尾
      &lt;/hd&gt;
      &lt;td&gt; 
      d$
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      删除当前行及其后 n-1 行
      &lt;/hd&gt;
      &lt;td&gt; 
      ndd
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      删除一个字符
      &lt;/hd&gt;
      &lt;td&gt; 
      x 或 X
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      恢复u的操作 
      &lt;/hd&gt;
      &lt;td&gt; 
      ^R
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      把下一行合并到当前行尾
      &lt;/hd&gt;
      &lt;td&gt; 
      J
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      删除到某一行的第一个字符位置
      &lt;/hd&gt;
      &lt;td&gt; 
      d^
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      删除到某个单词的结尾位置
      &lt;/hd&gt;
      &lt;td&gt; 
      dw
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      删除到第三个单词的结尾位置 
      &lt;/hd&gt;
      &lt;td&gt; 
      d3w
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      删除当前行
      &lt;/hd&gt;
      &lt;td&gt; 
      dd
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      删除到某个段落的开始位置
      &lt;/hd&gt;
      &lt;td&gt; 
      d&quot;{&quot;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      删除到当前段落起始位置之前的第7个段落位置
      &lt;/hd&gt;
      &lt;td&gt; 
      d7&quot;{&quot;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      删除到某一行的结尾
      &lt;/hd&gt;
      &lt;td&gt; 
      D
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      删除到某一行的结尾
      &lt;/hd&gt;
      &lt;td&gt; 
      d$
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      删除直到屏幕上最后一行的内容
      &lt;/hd&gt;
      &lt;td&gt; 
      dL
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      删除从当前行所开始的5行内容
      &lt;/hd&gt;
      &lt;td&gt; 
      5dd
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;


&lt;h3&gt;简单替换表达式&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th style=&quot;width:350px;&quot;&gt;常见CASE:&lt;/th&gt;
      &lt;th style=&quot;width:230px;&quot;&gt;处理命令&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
      替换命令可以在全文中用一个单词替换另一个单词
      &lt;/hd&gt;
      &lt;td&gt;
      :%s/four/4/g
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      删除多余的空格
      &lt;/hd&gt;
      &lt;td&gt; 
      :%s/\s\+$//
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      匹配重复性模式,星号项 “*” 规定在它前面的项可以重复任意次
      &lt;/hd&gt;
      &lt;td&gt; 
       /{word}*
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
    指定重复次数
      &lt;/hd&gt;
      &lt;td&gt; 
      使用 “\{n,m}” 这样的形式。其中 “n” 和 “m” 都是数字,如：
       /ab\{3,5}
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
        多选一匹配,在一个查找模式中，”或” 运算符是 “\|” 
      &lt;/hd&gt;
      &lt;td&gt; 
       /foo\|bar
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      替换当前行第一个 vivian 为sky
      &lt;/hd&gt;
      &lt;td&gt; 
      :s/vivian/sky/
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      替换当前行所有 vivian 为 sky
      &lt;/hd&gt;
      &lt;td&gt; 
      :s/vivian/sky/g
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      替换第 n 行开始到最后一行中每一行的第一个 vivian 为 sky
      &lt;/hd&gt;
      &lt;td&gt; 
      :n,$s/vivian/sky/ 
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      替换第 n 行开始到最后一行中每一行所有 vivian 为 sky
      &lt;/hd&gt;
      &lt;td&gt; 
      :n,$s/vivian/sky/g
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;



 ]]></description>
            <link>http://demi-panda.com/2012/12/25/vim-commons-command/index.html</link>
            <guid>http://demi-panda.com/2012/12/25/vim-commons-command/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[vim 自动补全插件推荐 ]]></title>
            <pubDate>Tue, 25 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt; 　　前面已经介绍过Linux下常用的编辑器，其中就有个人非常热衷的Vim,现在来给大家介绍下Vim 自动补全的插件。主要包括,java,html,css,xml,python,javascript&lt;/p&gt;

&lt;h3&gt;下载插件&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ wgeit http://www.vim.org/scripts/download_script.php?src_id=6738
&lt;/pre&gt;


&lt;h3&gt;解压&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ unzip -x javacomplete.zip
&lt;/pre&gt;


&lt;p&gt;1、把autoload文件夹下的javacomplete.vim java_parser.vim 加入到
/usr/share/vim/vimcurrent/autoload目录&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo cp javacomplete.vim java_parser.vim /usr/share/vim/vimcurrent
&lt;/pre&gt;


&lt;p&gt;2、然后把压缩包中的 Reflection.java编译，把生成的.class 文件拷贝到 $JAVA_HOME 的某个目录下。配置到系统环境变量的$CLASSPATH中&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ javac Reflection.java
$ cp Reflection.class $JAVA_HOME
&lt;/pre&gt;


&lt;p&gt;3、然后把 doc下的javacomplete.txt拷贝到 vimcurrent的doc目录下&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ cp javacomplete.txt /usr/share/vim/vimcurrent/doc
&lt;/pre&gt;


&lt;h3&gt;修改vim配置&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/media/pub/linux/vim-javacomplete.jpg&quot; width=&quot;480px&quot; alt=&quot;vim&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;p&gt;最终效果如图如下：&lt;br&gt;
&lt;img src=&quot;/media/pub/linux/vim-javacomplete-2.jpg&quot; width=&quot;480px&quot; alt=&quot;vim&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h3&gt;小贴士&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;快捷键 按CTRL+X ,CTRL+O，可显示补全菜单&lt;/li&gt;
&lt;li&gt;其他的插件安装方式一样&lt;/li&gt;
&lt;li&gt;花点时间了解下vim的常用命令,后续会介绍到，敬请期待.&lt;/li&gt;
&lt;/ol&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/12/25/vim-automatic/index.html</link>
            <guid>http://demi-panda.com/2012/12/25/vim-automatic/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Linux下常用的编辑器 ]]></title>
            <pubDate>Tue, 25 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt; 　　在Linux下开发也有三年多时间啦,也看过Unix的设计思想，收获非常大，现在也算是一个linux中的一员菜鸟啦，今天就让我来给大家介绍下Linux常用的编辑器：Vim, Emacs,Gedit&lt;/p&gt;

&lt;h3&gt;Vim&lt;/h3&gt;

&lt;p&gt;VIM是VI的加强版，比vi更容易使用。vi的命令几乎全部都可以在vim上使用。备受程序员和开源社区推崇的“神一样的编辑器”，支持很多的插件，把这些插件都用起来是一件令人非常愉快的事情,网上介绍成堆，这里就不多嘴介绍了。
&lt;img src=&quot;/media/pub/linux/vim.jpg&quot; width=&quot;330px&quot; alt=&quot;vim&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h4&gt;主页&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://www.vim.org/&quot;&gt;http://www.vim.org/ &lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;安装&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo apt-get install vim
&lt;/pre&gt;


&lt;p&gt;或者使用新立得中安装即可,安装成功，在命令行输入vi或者vim就可以看到如下界面，然后可以根据提示进行使用：&lt;/p&gt;

&lt;h4&gt;Vim评分&lt;/h4&gt;

&lt;table&gt;
  &lt;tbody&gt;
  &lt;tr&gt;
    &lt;td style=&quot;width:300px&quot;&gt;简易程度&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;1&lt;/td&gt;
    &lt;td style=&quot;width:300px&quot;&gt;外观&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;5&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td style=&quot;width:300px&quot;&gt;内容编辑&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;5&lt;/td&gt;
    &lt;td style=&quot;width:300px&quot;&gt;简易HTML编辑&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;3&lt;/tr&gt;
  &lt;tr&gt;
    &lt;td style=&quot;width:300px&quot;&gt;自定义&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;5.5&lt;/td&gt;
    &lt;td style=&quot;width:300px;color:red;&quot;&gt;总分&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;19.5&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;


&lt;h3&gt;Emacs&lt;/h3&gt;

&lt;p&gt;Emacs 实质上是一组文本编辑器的集合。Emacs的标语就是“可扩展、可定制、自文档化的实时显示编辑器。”要注意的是，在它的口号中，并没有提到“易用”或者是“直观”。这并不是为那些需要“所见即所得”软件的用户而设的;如果你需要一些像拼写检查这样的写作工具，它也不适合你。
&lt;img src=&quot;/media/pub/linux/emacs.jpg&quot; width=&quot;330px&quot; alt=&quot;emacs&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h4&gt;主页&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://www.gnu.org/software/emacs/&quot;&gt;http://www.gnu.org/software/emacs/&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;安装&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo apt-get install emacs23
&lt;/pre&gt;


&lt;p&gt;同样在新立得中也可以安装，个人还是喜欢使用命令。&lt;/p&gt;

&lt;h4&gt;Emacs评分&lt;/h4&gt;

&lt;table&gt;
  &lt;tbody&gt;
  &lt;tr&gt;
    &lt;td style=&quot;width:300px&quot;&gt;简易程度&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;1&lt;/td&gt;
    &lt;td style=&quot;width:300px&quot;&gt;外观&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;4&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td style=&quot;width:300px&quot;&gt;内容编辑&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;5&lt;/td&gt;
    &lt;td style=&quot;width:300px&quot;&gt;简易HTML编辑&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;5&lt;/tr&gt;
  &lt;tr&gt;
    &lt;td style=&quot;width:300px&quot;&gt;自定义&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;5&lt;/td&gt;
    &lt;td style=&quot;width:300px;color:red;&quot;&gt;总分&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;20&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;


&lt;h3&gt;gEdit Editor&lt;/h3&gt;

&lt;p&gt;gedit是GNOME桌面环境的默认文本编辑器。这是一个兼容UTF-8的文本编辑器。
&lt;img src=&quot;/media/pub/linux/0935035064-2.png&quot; width=&quot;330px&quot; alt=&quot;emacs&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h4&gt;主页:&lt;a href=&quot;http://projects.gnome.org/gedit/&quot;&gt;http://projects.gnome.org/gedit/&lt;/a&gt;&lt;/h4&gt;

&lt;h4&gt;安装&lt;/h4&gt;

&lt;p&gt;一般的Linux操作系统都会自带，不需要安装&lt;/p&gt;

&lt;h4&gt;gEdit评分&lt;/h4&gt;

&lt;table&gt;
  &lt;tbody&gt;
  &lt;tr&gt;
    &lt;td style=&quot;width:300px&quot;&gt;简易程度&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;8&lt;/td&gt;
    &lt;td style=&quot;width:300px&quot;&gt;外观&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;7&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td style=&quot;width:300px&quot;&gt;内容编辑&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;7&lt;/td&gt;
    &lt;td style=&quot;width:300px&quot;&gt;简易HTML编辑&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;5&lt;/tr&gt;
  &lt;tr&gt;
    &lt;td style=&quot;width:300px&quot;&gt;自定义&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;5&lt;/td&gt;
    &lt;td style=&quot;width:300px;color:red;&quot;&gt;总分&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;32&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;


&lt;h3&gt;总结&lt;/h3&gt;

&lt;p&gt;Linux下的编辑器还有很多，我这里只举例说了其中的三个，个人觉得Vim用的很愉快，在开发过程中也用到了不少插件，开发起来非常的清新，大家可以根据个人的喜爱来选择，大家可以后续的关注我的vim其他文章，会陆续的介绍Vim的使用经验。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/25/linux-commons-edit/index.html</link>
            <guid>http://demi-panda.com/2012/12/25/linux-commons-edit/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[永州血鸭-家乡名菜(湘菜) ]]></title>
            <pubDate>Mon, 24 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　永州血鸭是湖南永州的一款传统名菜，具有美味、开胃凉血的特点。说起血鸭，大概吃过这道菜的人此时都已垂涎三尺了吧！那被浓浓的血酱包裹着的每一块鸭肉、红红的辣椒、嫩嫩的子姜，香香的鸭肉中带着微微的酸辣味道，每一口都让你欲罢不能，回味无穷……&lt;/p&gt;

&lt;p&gt;　　从小吃着这道菜长大的人来说，它已完全融入了我们的生活，成为了逢年过节时家家户户餐桌上必不可缺的一道美食。&lt;/p&gt;

&lt;h3&gt;永州血鸭&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/chihuo/recipe/xueya.jpg&quot; alt=&quot;永州血鸭&quot; rel=&quot;prettyPhoto[20121241027]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/chihuo/recipe/xueya.jpg&quot; width=&quot;330px&quot;  alt=&quot;永州血鸭&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;主材料&lt;/h3&gt;

&lt;p&gt;鲜仔鸭一只，茄子(苦瓜,香芋)、青红椒、鸭血
&lt;a href=&quot;http://demi-panda.com/media/pub/chihuo/recipe/00030894.jpg&quot; alt=&quot;永州血鸭&quot; rel=&quot;prettyPhoto[20121241027]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/chihuo/recipe/00030894.jpg&quot; width=&quot;330px&quot;  alt=&quot;永州血鸭&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;调料&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
  &lt;tr&gt;
    &lt;td style=&quot;width:220px&quot;&gt;味精&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;2克&lt;/td&gt;
    &lt;td style=&quot;width:220px&quot;&gt;盐&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;4克&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td style=&quot;width:220px&quot;&gt;葱、姜&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;适量&lt;/td&gt;
    &lt;td style=&quot;width:220px&quot;&gt;香菜&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;适量&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td style=&quot;width:220px&quot;&gt;八角&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;2克&lt;/td&gt;
    &lt;td style=&quot;width:220px&quot;&gt;米酒&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;适量&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td style=&quot;width:220px&quot;&gt;米醋&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;5-10克&lt;/td&gt;
    &lt;td style=&quot;width:220px&quot;&gt;红辣椒&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;适量&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;


&lt;h3&gt;做法&lt;/h3&gt;

&lt;div class=&quot;module method-related-notes&quot;&gt;
   &lt;div class=&quot;content-item tab-content current method-tab-content&quot;&gt;
     &lt;ul&gt;&lt;li class=&quot;methods&quot;&gt;
        &lt;span class=&quot;step&quot;&gt;Step 1&lt;/span&gt;
        &lt;p class=&quot;desc&quot;&gt;
        用一只碗装少量盐(视鸭子大小放适当的量),取活鸭子一只，将其杀死，并用准备好的碗装好流出的鸭血，装鸭血同时取筷子迅速搅拌一至二分钟，以免让其凝固；　
        &lt;/p&gt;
     &lt;/li&gt;
     &lt;li class=&quot;methods&quot;&gt;
        &lt;span class=&quot;step&quot;&gt;Step 2&lt;/span&gt;
        &lt;p class=&quot;desc&quot;&gt;
        光鸭洗净，剁成小块（比较细的），沥干水分备用
        &lt;/p&gt;
    &lt;/li&gt;&lt;!-- // .methods --&gt;
    &lt;li class=&quot;methods&quot;&gt;
      &lt;span class=&quot;step&quot;&gt;Step 3&lt;/span&gt;
      &lt;p class=&quot;desc&quot;&gt;
      茄子、青红椒切家常状（滚刀切）姜切片，葱切段　
      &lt;/p&gt;
   &lt;/li&gt;&lt;!-- // .methods --&gt;
   &lt;li class=&quot;methods&quot;&gt;
   &lt;span class=&quot;step&quot;&gt;Step 4&lt;/span&gt;
   &lt;p class=&quot;desc&quot;&gt;
   锅置火上加油烧热，放入姜片煸香后加入鸭肉，炒3-5分钟加入米酒去腥
   &lt;/p&gt;
   &lt;/li&gt;
   &lt;li class=&quot;methods&quot;&gt;
   &lt;span class=&quot;step&quot;&gt;Step 5&lt;/span&gt;
   &lt;p class=&quot;desc&quot;&gt;
   青红椒翻炒断生，加入茄子加盐、酱油调味炒至8成熟加入鸭血翻炒熟，下葱和香菜加味精调味，倒上小许醋（视个人口味而定，可先小加点，然后逐步添加），炒熟后即可出锅。
   &lt;/p&gt;
   &lt;/li&gt;
   &lt;/ul&gt;
   &lt;/div&gt;&lt;!-- // .content-item --&gt;
&lt;/div&gt;


&lt;h3&gt;小贴士&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;鸭要首选农家圈养的仔鸭。&lt;/li&gt;
&lt;li&gt;鸭时取出鸭内脏后不要洗水。&lt;/li&gt;
&lt;li&gt;鸭、辣椒、茄子(苦瓜，香芋)要切的小块些。&lt;/li&gt;
&lt;li&gt;快出锅时，放鸭血前如果有汤要倒出再放（重要）。&lt;/li&gt;
&lt;/ol&gt;



 ]]></description>
            <link>http://demi-panda.com/2012/12/24/yongzhou-xueya/index.html</link>
            <guid>http://demi-panda.com/2012/12/24/yongzhou-xueya/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[香芋扣肉-家乡名菜(湘菜) ]]></title>
            <pubDate>Mon, 24 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　香芋和五花肉配在一起，相辅相成，香芋吸收五花肉的油和肉味，五花肉也变的不油腻了而且甘香可口。每次回家我爸就亲自下厨烧给我吃。今天就让熊猫家族带你走这一遭。&lt;/p&gt;

&lt;h3&gt;香芋扣肉&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/chihuo/recipe/xiangyukourou.jpg&quot; alt=&quot;香芋扣肉&quot; rel=&quot;prettyPhoto[20121240027]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/chihuo/recipe/xiangyukourou.jpg&quot; width=&quot;330px&quot;  alt=&quot;香芋扣肉&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;主材料&lt;/h3&gt;

&lt;p&gt;猪肋条肉（五花肉）600克,芋头400克
&lt;a href=&quot;http://demi-panda.com/media/pub/chihuo/recipe/0230440080.jpg&quot; alt=&quot;香芋扣肉&quot; rel=&quot;prettyPhoto[20121240027]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/chihuo/recipe/0230440080.jpg&quot; width=&quot;330px&quot;  alt=&quot;香芋扣肉&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;调料&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
  &lt;tr&gt;
    &lt;td style=&quot;width:220px&quot;&gt;味精&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;2克&lt;/td&gt;
    &lt;td style=&quot;width:220px&quot;&gt;茴香籽&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;4克&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td style=&quot;width:220px&quot;&gt;葱姜&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;适量&lt;/td&gt;
    &lt;td style=&quot;width:220px&quot;&gt;猪油&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;适量&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td style=&quot;width:220px&quot;&gt;八角&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;2克&lt;/td&gt;
    &lt;td style=&quot;width:220px&quot;&gt;白酒&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;3克&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td style=&quot;width:220px&quot;&gt;盐&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;5-10克&lt;/td&gt;
    &lt;td style=&quot;width:220px&quot;&gt;酱油&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;适量&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;


&lt;h3&gt;做法&lt;/h3&gt;

&lt;div class=&quot;module method-related-notes&quot;&gt;
   &lt;div class=&quot;content-item tab-content current method-tab-content&quot;&gt;
     &lt;ul&gt;&lt;li class=&quot;methods&quot;&gt;
        &lt;span class=&quot;step&quot;&gt;Step 1&lt;/span&gt;
        &lt;p class=&quot;desc&quot;&gt;
        五花肉洗净，锅中烧开水，加入几个八角，把五花肉皮朝下放进煮25分钟至8成熟，捞起晾干水分。（一定要干，否则炸的时候油会溅到到处都是）
        &lt;/p&gt;
     &lt;/li&gt;
     &lt;li class=&quot;methods&quot;&gt;
        &lt;span class=&quot;step&quot;&gt;Step 2&lt;/span&gt;
        &lt;p class=&quot;desc&quot;&gt;
        香芋去皮，切成8毫米左右的片。
        &lt;/p&gt;
    &lt;/li&gt;&lt;!-- // .methods --&gt;
    &lt;li class=&quot;methods&quot;&gt;
      &lt;span class=&quot;step&quot;&gt;Step 3&lt;/span&gt;
      &lt;p class=&quot;desc&quot;&gt;
      晾干的猪肉用牙签在猪皮上扎一些小洞，先把整块肉擦一遍酱油，酱油稍干后再在猪皮上擦一层蜜糖，锅中放适量的油，8分热，把五花肉皮朝下放进去炸，用勺子把热油不停的淋在猪肉上，至猪皮炸至起泡。
      &lt;/p&gt;
   &lt;/li&gt;&lt;!-- // .methods --&gt;
   &lt;li class=&quot;methods&quot;&gt;
   &lt;span class=&quot;step&quot;&gt;Step 4&lt;/span&gt;
   &lt;p class=&quot;desc&quot;&gt;
  炸好的五花肉捞起沥干油，晾凉。切好和香芋也放进油锅炸一下。
   &lt;/p&gt;
   &lt;/li&gt;
   &lt;li class=&quot;methods&quot;&gt;
   &lt;span class=&quot;step&quot;&gt;Step 5&lt;/span&gt;
   &lt;p class=&quot;desc&quot;&gt;
  晾凉的五花肉切成8毫米左右的片。
   &lt;/p&gt;
   &lt;/li&gt;
   &lt;li class=&quot;methods&quot;&gt;
   &lt;span class=&quot;step&quot;&gt;Step 6&lt;/span&gt;
   &lt;p class=&quot;desc&quot;&gt;
   盐、辣椒面、八角、茴香籽、白酒拌匀入味,调成酱汁；
   &lt;/p&gt;
   &lt;/li&gt;
   &lt;li class=&quot;methods&quot;&gt;
   &lt;span class=&quot;step&quot;&gt;Step 7&lt;/span&gt;
   &lt;p class=&quot;desc&quot;&gt;
   取扣碗1 只，碗底抹上猪油，一片猪肉一片芋头整齐地码在扣碗中，均匀地撒上白糖、盐、味精、拌入花椒、茴香籽，盖在肉和芋头上；
   &lt;/p&gt;
   &lt;/li&gt;
   &lt;li class=&quot;methods&quot;&gt;
   &lt;span class=&quot;step&quot;&gt;Step 8&lt;/span&gt;
   &lt;p class=&quot;desc&quot;&gt;
    将扣碗入笼，用旺火蒸2 小时至肉软烂，取出扣入盘中,撒上葱花。
   &lt;/p&gt;
   &lt;/li&gt;
   &lt;/ul&gt;
   &lt;/div&gt;&lt;!-- // .content-item --&gt;
&lt;/div&gt;


&lt;h3&gt;小贴士&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;芋头：芋头忌于香蕉同食。&lt;/li&gt;
&lt;li&gt;喜欢酥烂的朋友们可以把蒸的时间放长点。&lt;/li&gt;
&lt;/ol&gt;



 ]]></description>
            <link>http://demi-panda.com/2012/12/24/xiangyukourou/index.html</link>
            <guid>http://demi-panda.com/2012/12/24/xiangyukourou/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[社会不得不让大家伪装自己... ]]></title>
            <pubDate>Sun, 23 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;伪装自己很快乐,伪装自己很幸福。 到最後我们能得到什么？友谊麽？爱情麽？&lt;/p&gt;

&lt;p&gt;那一年,&lt;/p&gt;

&lt;p&gt;第一次体会到心痛的感觉,第一次有了心动的感觉,第一次知道被爱的感觉。&lt;/p&gt;

&lt;p&gt;如今，想要真爱竟是那么难,是都因为寂寞才爱吗？&lt;/p&gt;

&lt;p&gt;不，我仍然想和自己的另一半一起憧憬着美好未来。&lt;/p&gt;

&lt;p&gt;然而，现实的社会现实的感情现实的你我,总在一次次的提醒着我,将所谓的种种憧憬击碎。&lt;/p&gt;

&lt;p&gt;很多时候，我总是假装坚强。&lt;/p&gt;

&lt;p&gt;累了,一个人在房间享受着自己的脆弱，&lt;/p&gt;

&lt;p&gt;觉得自己好虚伪,想要改变些什么，却找不到出口,感觉自己像一个迷失的羔羊。&lt;/p&gt;

&lt;p&gt;经历过坎坷，经历过碰壁，黑暗，蓦然才发现，我是那么天真;&lt;/p&gt;

&lt;p&gt;害怕黑夜，害怕电闪雷鸣，更害怕受伤&lt;/p&gt;

&lt;p&gt;于是我把自己伪装起来故作坚强,过着多面性格的生活，与这黑暗的社会现实扮演着多样的角色...&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/23/weizhuang-me/index.html</link>
            <guid>http://demi-panda.com/2012/12/23/weizhuang-me/index.html</guid>
            <author>lisa</author>
        </item>

        
        <item>
            <title><![CDATA[鲫鱼豆腐汤 ]]></title>
            <pubDate>Sun, 23 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　鲫鱼汤不但味香汤鲜，而且具有较强的滋补作用，非常适合中老年人和病后虚弱者食用，也特别适合产妇食用。 不过做鲫鱼汤很重要的一点是注意火候的把握。 只要把握好了,那这道汤就完全没问题了.&lt;/p&gt;

&lt;h3&gt;鲫鱼豆腐汤&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/chihuo/recipe/jiyudoufutang.jpg&quot; alt=&quot;鲫鱼豆腐汤&quot; rel=&quot;prettyPhoto[201212312327]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/chihuo/recipe/jiyudoufutang.jpg&quot; width=&quot;330px&quot;  alt=&quot;鲫鱼豆腐汤&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;主材料&lt;/h3&gt;

&lt;p&gt;鲫鱼，豆腐
&lt;a href=&quot;http://demi-panda.com/media/pub/chihuo/recipe/image.jpg&quot; alt=&quot;鲫鱼&quot; rel=&quot;prettyPhoto[201212312327]&quot;&gt;
&lt;img src=&quot;/media/pub/chihuo/recipe/image.jpg&quot; width=&quot;330px&quot;  alt=&quot;鲫鱼&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;调料&lt;/h3&gt;

&lt;p&gt;盐，白胡椒粉，料酒，香菜，姜片3片,葱2片&lt;/p&gt;

&lt;h3&gt;做法&lt;/h3&gt;

&lt;div class=&quot;module method-related-notes&quot;&gt;
   &lt;div class=&quot;content-item tab-content current method-tab-content&quot;&gt;
     &lt;ul&gt;&lt;li class=&quot;methods&quot;&gt;
        &lt;span class=&quot;step&quot;&gt;Step 1&lt;/span&gt;
        &lt;p class=&quot;desc&quot;&gt;
        鲫鱼开膛去内脏，去鳞去鳃（鱼档工作人员完成），洗净，抹干，用盐和料酒稍腌待用。
        &lt;/p&gt;
     &lt;/li&gt;
     &lt;li class=&quot;methods&quot;&gt;
        &lt;span class=&quot;step&quot;&gt;Step 2&lt;/span&gt;
        &lt;p class=&quot;desc&quot;&gt;
        豆腐切块，用盐沸水烫5分钟后沥干待用。
        &lt;/p&gt;
    &lt;/li&gt;&lt;!-- // .methods --&gt;
    &lt;li class=&quot;methods&quot;&gt;
      &lt;span class=&quot;step&quot;&gt;Step 3&lt;/span&gt;
      &lt;p class=&quot;desc&quot;&gt;
      热锅下油先把鲫鱼煎至两面呈金黄色。
      &lt;/p&gt;
   &lt;/li&gt;&lt;!-- // .methods --&gt;
   &lt;li class=&quot;methods&quot;&gt;
   &lt;span class=&quot;step&quot;&gt;Step 4&lt;/span&gt;
   &lt;p class=&quot;desc&quot;&gt;
   加水适量，放些葱段，加些料酒，加盖煮沸后用小火烧20分钟，至鱼汤呈乳白色，
   &lt;/p&gt;
   &lt;/li&gt;
   &lt;li class=&quot;methods&quot;&gt;
   &lt;span class=&quot;step&quot;&gt;Step 5&lt;/span&gt;
   &lt;p class=&quot;desc&quot;&gt;
   开盖放盐,放豆腐.再烧片刻5分钟这样就可以了。放葱花,装碗就成了。
   &lt;/p&gt;
   &lt;/li&gt;
   &lt;/ul&gt;
   &lt;/div&gt;&lt;!-- // .content-item --&gt;
&lt;/div&gt;



 ]]></description>
            <link>http://demi-panda.com/2012/12/23/jiyu-doufu/index.html</link>
            <guid>http://demi-panda.com/2012/12/23/jiyu-doufu/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[东安子鸡-家乡名菜(湘菜) ]]></title>
            <pubDate>Sun, 23 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　“东安子鸡”这道菜，始创于唐代的开元年间。驰名中外的美味佳肴，被列为国宴菜谱之一、八大湘菜之首。做为本土人士自然会十分的热衷它的美味啦，今天就让我再来回味下这道菜的做法。&lt;/p&gt;

&lt;h3&gt;东安子鸡&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/chihuo/recipe/donganziji.jpg&quot; alt=&quot;东安子鸡&quot; rel=&quot;prettyPhoto[20121231527]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/chihuo/recipe/donganziji.jpg&quot; width=&quot;330px&quot;  alt=&quot;东安子鸡&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;主材料&lt;/h3&gt;

&lt;p&gt;嫩母鸡
&lt;a href=&quot;http://demi-panda.com/media/pub/chihuo/recipe/m_201107240021181.jpg&quot; alt=&quot;主材料-东安子鸡&quot; rel=&quot;prettyPhoto[20121231527]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/chihuo/recipe/m_201107240021181.jpg&quot; width=&quot;280px&quot; height=&quot;260px&quot;  alt=&quot;东安子鸡&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;调料&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
  &lt;tr&gt;
    &lt;td style=&quot;width:220px&quot;&gt;嫩母鸡&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;一只&lt;/td&gt;
    &lt;td style=&quot;width:220px&quot;&gt;青红辣椒&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;适量&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td style=&quot;width:220px&quot;&gt;葱姜蒜&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;适量&lt;/td&gt;
    &lt;td style=&quot;width:220px&quot;&gt;花椒&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;适量&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td style=&quot;width:220px&quot;&gt;料酒&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;适量&lt;/td&gt;
    &lt;td style=&quot;width:220px&quot;&gt;鸡精&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;适量&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td style=&quot;width:220px&quot;&gt;醋&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;适量&lt;/td&gt;
    &lt;td style=&quot;width:220px&quot;&gt;香油&lt;/td&gt;
    &lt;td style=&quot;width:50px;margin-right: 0px;color:#999;&quot;&gt;适量&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;


&lt;h3&gt;做法&lt;/h3&gt;

&lt;div class=&quot;module method-related-notes&quot;&gt;
   &lt;div class=&quot;content-item tab-content current method-tab-content&quot;&gt;
     &lt;ul&gt;&lt;li class=&quot;methods&quot;&gt;
        &lt;span class=&quot;step&quot;&gt;Step 1&lt;/span&gt;
        &lt;p class=&quot;desc&quot;&gt;
        将小母鸡洗净后放入锅内绰下水。
        &lt;/p&gt;
     &lt;/li&gt;
     &lt;li class=&quot;methods&quot;&gt;
        &lt;span class=&quot;step&quot;&gt;Step 2&lt;/span&gt;
        &lt;p class=&quot;desc&quot;&gt;
        再放入汤锅内，加入适量清水煮约8-10分钟，至鸡肉八成熟。
        &lt;/p&gt;
    &lt;/li&gt;&lt;!-- // .methods --&gt;
    &lt;li class=&quot;methods&quot;&gt;
      &lt;span class=&quot;step&quot;&gt;Step 3&lt;/span&gt;
      &lt;p class=&quot;desc&quot;&gt;
      捞出晾凉切块，青红椒切条，干红辣椒和葱切段，姜切丝，蒜拍成末。
      &lt;/p&gt;
   &lt;/li&gt;&lt;!-- // .methods --&gt;
   &lt;li class=&quot;methods&quot;&gt;
   &lt;span class=&quot;step&quot;&gt;Step 4&lt;/span&gt;
   &lt;p class=&quot;desc&quot;&gt;
    炒锅热油，放入花椒、葱姜蒜、红辣椒炒香。
   &lt;/p&gt;
   &lt;/li&gt;
   &lt;li class=&quot;methods&quot;&gt;
   &lt;span class=&quot;step&quot;&gt;Step 5&lt;/span&gt;
   &lt;p class=&quot;desc&quot;&gt;
   再放入鸡肉，加少许料酒翻炒。
   &lt;/p&gt;
   &lt;/li&gt;
   &lt;li class=&quot;methods&quot;&gt;
   &lt;span class=&quot;step&quot;&gt;Step 6&lt;/span&gt;
   &lt;p class=&quot;desc&quot;&gt;
    再加入适量醋、然后倒入一碗煮鸡的鸡汤。
   &lt;/p&gt;
   &lt;/li&gt;
   &lt;li class=&quot;methods&quot;&gt;
   &lt;span class=&quot;step&quot;&gt;Step 7&lt;/span&gt;
   &lt;p class=&quot;desc&quot;&gt;
   闷煮约2分钟，再加适量盐、鸡精调味。
   &lt;/p&gt;
   &lt;/li&gt;
   &lt;/ul&gt;
   &lt;/div&gt;&lt;!-- // .content-item --&gt;
&lt;/div&gt;


&lt;h3&gt;小贴士&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;这道菜最好选用鲜嫩的小母鸡，肉质更滑嫩。或者使用鸡腿，将鸡腿煮熟后，去骨将肉切丝。&lt;/li&gt;
&lt;li&gt;煮鸡的时间不宜过长，刚断生即可，否则口感就不嫩了。&lt;/li&gt;
&lt;li&gt;东安子鸡是传统的补虚菜式，营养成分高，对美厨娘们生理期不适或是产后、病后的保养非常有益。&lt;/li&gt;
&lt;li&gt;煮鸡的汤不要倒掉，用来烫煮西兰花后加香油、味精凉拌吃，让蔬菜也能有鸡鲜味。&lt;/li&gt;
&lt;/ol&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/12/23/donganziji/index.html</link>
            <guid>http://demi-panda.com/2012/12/23/donganziji/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Bootstrap Web前端工具包 ]]></title>
            <pubDate>Sun, 23 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt; 　　Bootstrap是快速开发Web应用程序的前端工具包。它是一个CSS和HTML的集合，它使用了最新的浏览器技术，给你的Web开发提供了时尚的版式，表单，buttons，表格，网格系统等等。&lt;/p&gt;

&lt;p&gt; &lt;img alt=&quot;Bootstrap&quot; src=&quot;/media/pub/web/16115128_hu5O.jpg&quot; style=&quot;width: 505px; height: 276px; &quot; /&gt;&lt;/p&gt;

&lt;h3&gt;由匠人建，为匠人用&lt;/h3&gt;

&lt;p&gt;和您一样，我们乐于创造出色的web应用，于是想帮助更多象我们一样的匠人更为高效快捷地构建产品。Bootstrap因此而生。&lt;/p&gt;

&lt;h3&gt;适应各种技术水平&lt;/h3&gt;

&lt;p&gt;Bootstrap适应不同技术水平的从业者，无论是设计师还是程序员，大牛还是菜鸟。既能用来开发简单的小东西，也能构造更为复杂的应用。&lt;/p&gt;

&lt;h3&gt;跨设备，跨浏览器&lt;/h3&gt;

&lt;p&gt;最初设想中的Bootstrap只支持现代浏览器，不过新版本已经能支持所有主流浏览器（甚至包括IE7）。从Bootstrap 2开始，提供对平板和智能手机的支持。&lt;/p&gt;

&lt;h3&gt;12列栅格布局&lt;/h3&gt;

&lt;p&gt;栅格系统不是万能的，不过在应用的核心层有一个稳定和灵活的栅格系统确实可以让开发变得更简单。可以选用内置的栅格或是自己手写。&lt;/p&gt;

&lt;h3&gt;响应式设计&lt;/h3&gt;

&lt;p&gt;从Bootstrap 2开始，提供完整的响应式特性。所有的组件都能根据分辨率和设备灵活缩放，从而提供一致性的用户体验。&lt;/p&gt;

&lt;h3&gt;定制的jQuery插件&lt;/h3&gt;

&lt;p&gt;一个出色的组件设计岂能没有易用易扩展的人机界面？Bootstrap为此提供了定制的jQuery内置插件。&lt;/p&gt;

&lt;h3&gt;背景&amp;amp;环境&lt;/h3&gt;

&lt;p&gt;HTML5
支持HTML5标签和语法&lt;/p&gt;

&lt;p&gt;CSS3
逐步改进组件达到最终效果&lt;/p&gt;

&lt;p&gt;开源
全部托管于 &lt;a href=&quot;http://github.com&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Twitter制造
由经验丰富的&lt;a href=&quot;http://twitter.com/fat&quot;&gt;工程师&lt;/a&gt;和&lt;a href=&quot;http://twitter.com/mdo&quot;&gt;设计师&lt;/a&gt;奉献&lt;/p&gt;

&lt;h3&gt;Bootstrap案例&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://kippt.com/&quot;&gt;
&lt;img alt=&quot;kippt&quot; src=&quot;/media/pub/web/kippt.png&quot; style=&quot;width: 505px; height: 276px; &quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;小贴士&lt;/h3&gt;

&lt;p&gt;介绍了这么多内容，想必大家都看到其功能之强大了吧，争取以后用在博客上，体验下其功能，待续...&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/23/bootstrap/index.html</link>
            <guid>http://demi-panda.com/2012/12/23/bootstrap/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[羊肉炖白萝卜 ]]></title>
            <pubDate>Sat, 22 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　12月22日是冬至日，冬至又称为冬节，南北方的习俗不一，北方通常吃馄饨和饺子，南方吃汤圆的习俗。药补不如食补。阳气虚弱者时值冬至，天寒地冻，为一年中阴气最盛、阳气最弱之季。阳虚的人常会流清水涕、手足冰凉、易生冻疮、夜尿频频。这类人可用干姜、人参、熟附子、辣椒、羊肉等共食之，三九天尤为需要。同时还可服用金匮肾气丸等，以期阳气生发。&lt;/p&gt;

&lt;p&gt;首选温补类食物：如鸡，羊肉，牛肉，鲫鱼等。上述几种，均属美味，在冬季可作为进补的佳品。&lt;/p&gt;

&lt;h3&gt;羊肉炖白萝卜&lt;/h3&gt;

&lt;p&gt;冬天的晚餐桌上有一锅热汤足矣。下面介绍下羊肉炖白萝卜的做法：
&lt;a href=&quot;http://demi-panda.com/media/pub/chihuo/recipe/20121221.jpg&quot; alt=&quot;羊腿肉炖白萝卜&quot; rel=&quot;prettyPhoto[201212212327]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/chihuo/recipe/20121221.jpg&quot; width=&quot;330px&quot; alt=&quot;羊腿肉炖白萝卜&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;材料&lt;/h3&gt;

&lt;p&gt;羊腿肉，或者羊排
&lt;a href=&quot;http://demi-panda.com/media/pub/chihuo/recipe/yangtuirou.jpg&quot; alt=&quot;羊腿肉&quot; rel=&quot;prettyPhoto[201212212327]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/chihuo/recipe/yangtuirou.jpg&quot; width=&quot;230px&quot; height=&quot;130px&quot; alt=&quot;羊腿肉&quot; class=&quot;img-right&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;白萝卜，洗净后去皮，切成小块&lt;/p&gt;

&lt;p&gt;香菜。&lt;/p&gt;

&lt;h3&gt;调料&lt;/h3&gt;

&lt;p&gt;盐，白胡椒粉，料酒，葱段，姜片。&lt;/p&gt;

&lt;h3&gt;做法&lt;/h3&gt;

&lt;div class=&quot;module method-related-notes&quot;&gt;
   &lt;div class=&quot;content-item tab-content current method-tab-content&quot;&gt;
     &lt;ul&gt;&lt;li class=&quot;methods&quot;&gt;
        &lt;span class=&quot;step&quot;&gt;Step 1&lt;/span&gt;
        &lt;p class=&quot;desc&quot;&gt;
        将买来的羊腿肉放在清水中浸泡一会，以泡去血水，然后冲洗干净，切成小块，并焯烫以去除血沫。（焯烫的时候可在锅中放入一些料酒和姜片，以出去膻味）
        &lt;/p&gt;
     &lt;/li&gt;
     &lt;li class=&quot;methods&quot;&gt;
        &lt;span class=&quot;step&quot;&gt;Step 2&lt;/span&gt;
        &lt;p class=&quot;desc&quot;&gt;
        白萝卜洗净后去皮，切成小块；葱切段；姜切片备用。
        &lt;/p&gt;
    &lt;/li&gt;&lt;!-- // .methods --&gt;
    &lt;li class=&quot;methods&quot;&gt;
      &lt;span class=&quot;step&quot;&gt;Step 3&lt;/span&gt;
      &lt;p class=&quot;desc&quot;&gt;
      取来汤锅，注入清水烧开，然后放入焯烫好的羊肉块、料酒、葱段、姜片，大火煮滚，然后转到小火，要很小的火，慢慢的炖制一个小时，根据自己的情况可加长烹饪时间，总之要先把羊肉炖到软烂的程度。
      &lt;/p&gt;
   &lt;/li&gt;&lt;!-- // .methods --&gt;
   &lt;li class=&quot;methods&quot;&gt;
   &lt;span class=&quot;step&quot;&gt;Step 4&lt;/span&gt;
   &lt;p class=&quot;desc&quot;&gt;
    这时放入白萝卜，并加入一些盐调味，这之后的时间需要自己掌握了，如果你希望白萝卜的口感脆一些，那煮到白萝卜断生就可以了，如果你希望口感软烂些，那就要加长煮炖的时间，白萝卜多煮一会，汤的味道会更好。
   &lt;/p&gt;
   &lt;/li&gt;
   &lt;li class=&quot;methods&quot;&gt;
   &lt;span class=&quot;step&quot;&gt;Step 5&lt;/span&gt;
   &lt;p class=&quot;desc&quot;&gt;
    煮至自己想要的口感就可以关火了，白胡椒粉可在最后喝的时候进行调味，不必太早放入，最后撒上香菜段即可。
   &lt;/p&gt;
   &lt;/li&gt;
   &lt;/ul&gt;
   &lt;/div&gt;&lt;!-- // .content-item --&gt;
&lt;/div&gt;



 ]]></description>
            <link>http://demi-panda.com/2012/12/22/yangrou-dun-luobo/index.html</link>
            <guid>http://demi-panda.com/2012/12/22/yangrou-dun-luobo/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[冬季抗衰养颜的食物 ]]></title>
            <pubDate>Sat, 22 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;h3&gt;黄瓜&lt;/h3&gt;

&lt;p&gt;对抗皮肤老化，减少皱纹的产生
&lt;a href=&quot;http://demi-panda.com/media/pub/chihuo/health/huanggua.jpg&quot; alt=&quot;黄瓜&quot; rel=&quot;prettyPhoto[201212222327]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/chihuo/health/huanggua.jpg&quot; width=&quot;330px&quot; alt=&quot;黄瓜&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;　　它的味道鲜美，脆嫩清香，备受瘦身人士的推崇。而且它富含人体生长发育和生命活动所必需的多种糖类和氨基酸，以及丰富的维生素，为皮肤、肌肉提供充足的养分，可有效地对抗皮肤老化，减少皱纹的产生。所含丰富的果酸，能清洁美白肌肤，消除晒伤和雀斑，缓解皮肤过敏。&lt;/p&gt;

&lt;h3&gt;胡萝卜&lt;/h3&gt;

&lt;p&gt;含有丰富的果胶物质,主治食欲不振、腹胀、腹泻、咳喘痰多、视物不明。
&lt;a href=&quot;http://demi-panda.com/media/pub/chihuo/health/huluobo.jpg&quot; alt=&quot;胡萝卜&quot; rel=&quot;prettyPhoto[201212222327]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/chihuo/health/huluobo.jpg&quot; width=&quot;330px&quot; alt=&quot;胡萝卜&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;　　胡萝卜被誉为“皮肤食品”，能润泽肌肤。胡萝卜含有丰富的果胶物质，可与汞结合，使人体里的有害成分得以排出，肌肤看起来更加细腻红润。它含β胡萝卜素，可以抗氧化和美白肌肤，预防黑色素的沉淀，并可以清除肌肤的多余角质。它也含有抗氧化不能少的维生素E。具有健脾消食，润肠通便，杀虫，行气化滞，明目等功效；&lt;/p&gt;

&lt;h3&gt;石榴&lt;/h3&gt;

&lt;p&gt;具有很强的抗氧化作用，带皮榨汁效果更加。
&lt;a href=&quot;http://demi-panda.com/media/pub/chihuo/health/shiliu.jpg&quot; alt=&quot;石榴&quot; rel=&quot;prettyPhoto[201212222327]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/chihuo/health/shiliu.jpg&quot; width=&quot;330px&quot; alt=&quot;石榴&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;　　石榴性味甘、酸涩、温，具有杀虫、收敛、涩肠、止痢等功效。石榴果实营养丰富，维生素C含量比苹果、梨要高出一二倍。&lt;/p&gt;

&lt;p&gt;　　红石榴已经被证实具有很强的抗氧化作用。它含有一种叫鞣花酸的成分，可以使细胞免于环境中的污染、UV射线的危害，滋养细胞，减缓肌体的衰老。有研究表明，鞣花酸在防辐射方面比红酒和绿茶中含有的多酚更“厉害”。&lt;/p&gt;

&lt;h3&gt;葡萄&lt;/h3&gt;

&lt;p&gt;抗老保湿的佳品
&lt;a href=&quot;http://demi-panda.com/media/pub/chihuo/health/putao.jpg&quot; alt=&quot;葡萄&quot; rel=&quot;prettyPhoto[201212222327]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/chihuo/health/putao.jpg&quot; width=&quot;330px&quot; alt=&quot;葡萄&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;　　葡萄是水果中含复合铁元素最多的水果，是贫血患者的营养食品。常食葡萄对神经衰弱者和过度疲劳者均有益处。葡萄制干后，糖和铁的含量均相对增加，是儿童、妇女和体虚贫血者的滋补佳品。葡萄籽95%的成份为原青花素，其抗氧化的功效比维生素C高出18倍之多，比维生素E高出50倍，因此，葡萄籽可说是真正的抗氧化巨星。抗氧化是抗老化的方法，因此，葡萄籽能让您永葆青春。&lt;/p&gt;

&lt;h3&gt;柠檬&lt;/h3&gt;

&lt;p&gt;可促进肌肤新陈代谢，抑制色素沉淀
&lt;a href=&quot;http://demi-panda.com/media/pub/chihuo/health/ningmen.jpg&quot; alt=&quot;柠檬&quot; rel=&quot;prettyPhoto[201212222327]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/chihuo/health/ningmen.jpg&quot; width=&quot;330px&quot; alt=&quot;柠檬&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;　　柠檬中含有维生素B1．维生素B2．维生素C等多种营养成分，还含有丰富的有机酸、柠檬酸，柠檬是高度碱性食品，具有很强的抗氧化作用，对促进肌肤的新陈代谢、延缓衰老及抑制色素沉着等十分有效。&lt;/p&gt;

&lt;h3&gt;柚子&lt;/h3&gt;

&lt;p&gt;含有的一种柠檬酸已被普遍应用于护肤领域
&lt;a href=&quot;http://demi-panda.com/media/pub/chihuo/health/youzi.jpg&quot; alt=&quot;柚子&quot; rel=&quot;prettyPhoto[201212222327]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/chihuo/health/youzi.jpg&quot; width=&quot;330px&quot; alt=&quot;柚子&quot; class=&quot;img-center&quot;&gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; 　　由某研究机构进行的2005项研究证实，柚子的气味能令女性比男性看起来平均年轻6岁。现在，柚子中含有的一种柠檬酸已被普遍应用于护肤领域。这种成分能帮助死皮细胞代谢和排出，从而使皮肤回复光滑、重现光彩。&lt;/p&gt;

&lt;h3&gt;杏&lt;/h3&gt;

&lt;p&gt; 　　杏肉中含有多种维生素,富含糖类、果酸、膳食纤维、黄酮类物质、维生素C及铁、磷、锌等矿物质元素，维生素B17含量尤其丰富。杏仁也富含蛋白质、脂肪、胡萝卜素、B族维生素、维生素C以及钙、磷、铁等营养成分。丰富的矿物质及植物性不饱和油脂，具有良好的柔润滋养效果。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/22/dongji-yangyan/index.html</link>
            <guid>http://demi-panda.com/2012/12/22/dongji-yangyan/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[世界末日爽约 ]]></title>
            <pubDate>Fri, 21 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　2012年12月21日是玛雅历法终结之日，也就是所谓的“世界末日”。而由于时差原因，中国进入“世界末日”的时间为21日下午3点14分35秒。随着这一时间节点成为过去式，2012年12月21日将成为历史的&quot;世界末日&quot;。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;网友的总结:&quot;哥还活着，就是心跳偶尔加速,我安然的度过了世界末日，玛雅人很啃爹.&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;&amp;lt;&amp;lt;后天&gt;&gt; 地球进入第二冰河期&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/pub/houtian.jpg&quot; alt=&quot;世界末日&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/pub/houtian.jpg&quot; alt=&quot;后天 世界末日&quot; class=&quot;img-right&quot; width=&quot;230px&quot; /&gt;
&lt;/a&gt;
相信大家应该看过&lt;a href=&quot;http://v.youku.com/v_show/id_XMzM1MjUwODMy.html&quot;&gt;&amp;lt;&amp;lt;后天&gt;&gt;&lt;/a&gt;这部电影，主要讲温室效应引发地球大灾变，北极冰川的融化，飓风、冰雹、极度严寒，一系列的地球巨变引发了一场不可挽救的灾难。&lt;/p&gt;

&lt;h3&gt;&quot;世界末日&quot;的预言中总结&lt;/h3&gt;

&lt;p&gt;1、世界末日只是一个预言，一个谎言，需要相信科学的说法&lt;/p&gt;

&lt;p&gt;2、侧面反应出现实滥用科学技术满足自己无穷的欲望，那样的结果只会让人类走向自我毁灭。&lt;/p&gt;

&lt;p&gt;3、人类在灾难面前是如此渺小。但在面对灾难的时候，人类并没有退缩，我们不得不感叹生命的顽强。同时也反应：人类毕竟是渺小的，妄图与大自然抗争那是徒劳无益的，只有和谐才是唯一的出路。&lt;/p&gt;

&lt;p&gt;4、如果真的2012年发生了，至少现在起好好孝顺你的父母吧，如果没有发生，做为子女也该孝顺。让世界多一份爱，多一份温暖吧！&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;后言：&lt;/strong&gt;
也就在今天&quot;世界末日&quot;之日，我的博客主题已经明确，主要包括:文章列表,研发实践(IT技术博文),熊猫吃货(美食分享,菜谱等),微生活(健康，生活点滴),标签,关于我&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/21/shijiemori/index.html</link>
            <guid>http://demi-panda.com/2012/12/21/shijiemori/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[颈椎病自我康复操 ]]></title>
            <pubDate>Wed, 19 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;这套操不需要按摩穴位，每个人均可以很快学会并练习。经常练习可以改善患者颈部的血液循环，松解粘连和痉挛的软组织。无颈椎病者可起到预防作用。&lt;/p&gt;

&lt;p&gt;准备姿势：两脚分开与肩同宽，两臂自然下垂，全身放松,两眼平视，均匀呼吸，站坐均可。&lt;/p&gt;

&lt;h3&gt;左顾右盼&lt;/h3&gt;

&lt;p&gt;头先向左后向右转动，幅度宜大，以自觉酸胀为好，30次。&lt;/p&gt;

&lt;h3&gt;前后点头&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/healthy/healthy-1.jpg&quot; alt=&quot;颈椎康复&quot; rel=&quot;prettyPhoto[201212191327]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/healthy/healthy-1.jpg&quot; height=&quot;288px&quot; alt=&quot;颈椎康复&quot; width=&quot;224px&quot;&gt;&lt;/img&gt;&lt;br&gt;
&lt;/a&gt;
头先前再后，前俯时颈项尽量前伸拉长，30次。&lt;/p&gt;

&lt;h3&gt;旋肩舒颈&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/healthy/healthy-2.jpg&quot; alt=&quot;颈椎康复&quot; rel=&quot;prettyPhoto[201212191327]&quot;&gt;
&lt;img src=&quot;/media/pub/life/healthy/healthy-2.jpg&quot; width=&quot;355px&quot; alt=&quot;颈椎康复&quot;&gt;&lt;/img&gt;&lt;/a&gt;&lt;br&gt;
双手置两侧肩部，掌心向下，两臂先由后向前旋转 20—30次，再由前向后旋转20—30次。&lt;/p&gt;

&lt;h3&gt;摇头晃脑&lt;/h3&gt;

&lt;p&gt;头向左-前-右-后旋转5次，再反方向旋转5次。&lt;/p&gt;

&lt;h3&gt;头手相抗&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/healthy/healthy-3.jpg&quot; alt=&quot;颈椎康复&quot; rel=&quot;prettyPhoto[201212191327]&quot;&gt;
&lt;img src=&quot;/media/pub/life/healthy/healthy-3.jpg&quot; width=&quot;248px&quot; alt=&quot;颈椎康复&quot; &gt;&lt;/img&gt;&lt;br&gt;
&lt;/a&gt;
双手交叉紧贴后颈部，用力顶头颈，头颈则向后用力，互相抵抗5次。&lt;/p&gt;

&lt;h3&gt;双手托天&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/healthy/healthy-4.jpg&quot; alt=&quot;颈椎康复&quot; rel=&quot;prettyPhoto[201212191327]&quot;&gt;
&lt;img src=&quot;/media/pub/life/healthy/healthy-4.jpg&quot; width=&quot;224px&quot; alt=&quot;颈椎康复&quot;&gt;&lt;/img&gt;&lt;br&gt;
&lt;/a&gt;
双手上举过头，掌心向上，仰视手背5秒钟。&lt;/p&gt;

&lt;h2&gt;颈椎病的穴位按摩手法&lt;/h2&gt;

&lt;p&gt;以下这些穴位按摩手法，可以在你工作、学习过程中间休整时使用，避免过长时间保持一个姿势，造成身体损伤。&lt;/p&gt;

&lt;h3&gt;按摩百会&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/healthy/healthy-5.jpg&quot; alt=&quot;颈椎康复&quot; rel=&quot;prettyPhoto[201212191327]&quot;&gt;
&lt;img src=&quot;/media/pub/life/healthy/healthy-5.jpg&quot; width=&quot;246px&quot; alt=&quot;颈椎康复&quot;&gt;&lt;/img&gt;&lt;br&gt;
&lt;/a&gt;
用中指或食指按于头顶最高处正中的百会穴，用力由轻到重按揉20～30次。
&lt;strong&gt;功效：健脑宁神，益气固脱。&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;对按头部&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/healthy/healthy-6.jpg&quot; alt=&quot;颈椎康复&quot; rel=&quot;prettyPhoto[201212191327]&quot;&gt;
&lt;img src=&quot;/media/pub/life/healthy/healthy-6.jpg&quot; width=&quot;246px&quot; alt=&quot;颈椎康复&quot;&gt;&lt;/img&gt;&lt;br&gt;
&lt;/a&gt;
双手拇指分别放在额部两侧的太阳穴处，其余四指分开，放在两侧头部，双手同时用力做对按揉动20～30次。
&lt;strong&gt;功效：清脑明目，振奋精神。&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;按揉风池&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/healthy/healthy-7.jpg&quot; alt=&quot;颈椎康复&quot; rel=&quot;prettyPhoto[201212191327]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/healthy/healthy-7.jpg&quot; width=&quot;246px&quot; alt=&quot;颈椎康复&quot; &gt;&lt;/img&gt;&lt;br&gt;
&lt;/a&gt;
用两手拇指分别按在同侧风池穴(颈后两侧凹陷处)，其余手指附在头的两侧，由轻到重地按揉20～30次。
&lt;strong&gt;功效：疏风散寒，开窍镇痛。&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;拿捏颈肌&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/healthy/healthy-8.jpg&quot; alt=&quot;颈椎康复&quot; rel=&quot;prettyPhoto[201212191327]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/healthy/healthy-8.jpg&quot; width=&quot;246px&quot; alt=&quot;颈椎康复&quot;&gt;&lt;/img&gt;&lt;br&gt;
&lt;/a&gt;
将左(右)手上举置于颈后，拇指放置于同侧颈外侧，其余四指放在颈肌对侧，双手用力对合，将颈肌向上提起后放松，沿风池穴向下拿捏至大椎穴20～30次。
&lt;strong&gt;功效：解痉止痛，调和气血。&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;按压肩井&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/healthy/healthy-9.jpg&quot; alt=&quot;颈椎康复&quot; rel=&quot;prettyPhoto[201212191327]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/healthy/healthy-9.jpg&quot; width=&quot;246px&quot; alt=&quot;颈椎康复&quot;&gt;&lt;/img&gt;&lt;br&gt;
&lt;/a&gt;
以左(右)手中指指腹按于对侧肩井穴(在大椎与肩峰连线中点，肩部筋肉处)，然后由轻到重按压10～20次，两侧交替进行。
&lt;strong&gt;功效：通经活络，散寒定痛。&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;按摩大椎&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/healthy/healthy-10.jpg&quot; alt=&quot;颈椎康复&quot; rel=&quot;prettyPhoto[201212191327]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/healthy/healthy-10.jpg&quot; alt=&quot;颈椎康复&quot; width=&quot;246px&quot; &gt;&lt;/img&gt;&lt;br&gt;
&lt;/a&gt;
用左(右)手四指并拢放于上背部，用力反复按摩大椎穴(位于后颈部颈椎中最大椎体下方的空隙处)各20～30次，至局部发热为佳，两侧交替进行。
&lt;strong&gt;功效：疏风散寒，活血通络。&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;对按内、外关&lt;/h3&gt;

&lt;p&gt;用左(右)手拇指尖放在右(左)手内关穴(掌横纹以上2寸，两肌腱之间)，中指放在对侧的外关穴(内关穴对面)，同时对合用力按揉0.5～1分钟，双手交替进行。
&lt;strong&gt;功效：宁心通络，宽胸行气。&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;掐揉合谷&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/healthy/healthy-11.jpg&quot; alt=&quot;颈椎康复&quot; rel=&quot;prettyPhoto[201212191327]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/healthy/healthy-11.jpg&quot; width=&quot;246px&quot; alt=&quot;颈椎康复&quot; &gt;&lt;/img&gt;&lt;br&gt;
&lt;/a&gt;
将左(右)手拇指指尖放在另一手的合谷穴(即虎口处)，拇指用力掐揉10～20次，双手交替进行。
&lt;strong&gt;功效：疏风解表，开窍醒神。&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;梳摩头顶&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/healthy/healthy-122.jpg&quot; alt=&quot;颈椎康复&quot; rel=&quot;prettyPhoto[201212191327]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/healthy/healthy-12.jpg&quot; width=&quot;246px&quot; alt=&quot;颈椎康复&quot; &gt;&lt;/img&gt;&lt;br&gt;
&lt;/a&gt;
双手五指微曲分别放在头顶两侧，稍加压力从前发际沿头顶至脑后做“梳头”状动作20～30次。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/19/Cervical-vertebra-disease/index.html</link>
            <guid>http://demi-panda.com/2012/12/19/Cervical-vertebra-disease/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[2天内 iOS版 Google Maps 下载量超过 1000 万次 ]]></title>
            <pubDate>Tue, 18 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;&lt;img src=&quot;/media/pub/web/google-map.jpeg&quot; width=&quot;580px&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;p&gt;　　Google 的高级副总裁 Jeff Huber 刚刚在 Google+ 上公布了 iOS 版 Google Maps 的一组数据：上线 48 小时内，这款应用的下载量已经超过了 1000 万次，要知道现在全世界已售出的 iOS 设备也只有约 4 亿台，渗透率接近 2.5%。&lt;/p&gt;

&lt;p&gt;　　“看到 Google Maps 在全球范围内如此受欢迎，我们真心很兴奋。祝贺地图团队，是他们的 7 年来的热情和辛勤努力，造就了今天的一切。”Jeff 在 Google+ 上夸赞的同时，还不忘兜售 Google Maps 的新版“摇一摇反馈”功能，只要你开着 Google Maps 时发现了 Bug，只需摇一摇就能将这个 Bug 上报给 Google。&lt;/p&gt;

&lt;p&gt;　　苹果 iOS 6 的一大败笔就是自家的地图服务，之后硬是被喷的狗血淋头，不少用户甚至就因这个而不升级到 iOS 6。iOS 版的 Google Maps 改变了这些，14 号上线的当天，它就以 5 星评价冲上免费排行榜榜首，看来的确是众望所归。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/18/appstore-google-map/index.html</link>
            <guid>http://demi-panda.com/2012/12/18/appstore-google-map/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[透过Google 2012年搜索热词榜看网络关注点的背后！ ]]></title>
            <pubDate>Mon, 17 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　近日，Google公布了2012年的搜索关键字排行榜，其中有一些关键字值得我们去关注和解读。Google的热词中可以折射出2012年人们的关注度在哪里，在今年的热门搜索关键词中，江南Style、iPad 3和暗黑破坏神3冲进年度全球上升最快搜索关键词的前五位，分列2、4、5名。
&lt;img src=&quot;/media/pub/web/jiangnan-style.jpg&quot; width=&quot;580px&quot;&gt;&lt;/img&gt;
 　　江南Style的流行从另一个侧面来说也是SNS的胜利，起码江南Style首先是依托社交网站开始流行的，随后不断地被翻炒形成一种蝴蝶效应。在全球金融不景气中人们也聊以自嘲地寻找一些开心的地方。此外，社交网站的推波助澜效果可见一斑，娱乐效应带来的风靡性很容易形成共振，这也是社交网站发展中可以快速堆积人气的一个方面。难怪Google要推出自己的Google+来抗衡Facebook的发展了，不过当微博越来越流行之后，社交网站的转变异或者进入后社交时代也在悄然酝酿，或许Facebook也会面临更多的调整。这和移动智能终端的流行是密不可分的，因为微博更适合这种终端来表述和移植。&lt;/p&gt;

&lt;p&gt; 　　iPad 3，没错不是iPad 4，也不是iPad Mini，就是那个曾经令人不看好的The New iPad，这也说明了一个问题，那就是iPad 4并没有风靡，iPad Mini也不过如此，更多的用户还是选择滞留在iPad 3时代。曾经以创新引领数码时尚的苹果已经渐渐失去了创新的智慧和霸气，产品逐渐呈现平庸化。这也是为何人们没有直接选择苹果新品的原因之一吧?失去了创新支撑的苹果如何延续自己的高市值?当iPhone和iPad不能给用户带来更多期待的时候，苹果还靠什么支撑果粉们孜孜不倦的追逐?&lt;/p&gt;

&lt;p&gt; 　　暗黑破环神3能够位列前五，也说明网络游戏依然是网络中不可或缺的一份子，虽然近年来网络游戏有种夕阳化的趋势，不过还是有一群固定的玩家守候在自己喜欢的阵地中寻找心中的愉悦。互联网走向移动互联网化，但是玩家的热情还是在自己熟悉的阵地中滞留，而且大型网游本身对设备的高要求，也注定了在移动互联网市场还难以根植更大的网游。不过移动客户端的游戏争夺也必然会带来一种新的需求和未来有可能诞生大鳄的机会。&lt;/p&gt;&lt;/p&gt;

&lt;p&gt; 　　此外，我们看到Google电子产品搜索排行榜依次是iPad 3、Galaxy S III、iPad Mini、Nexus 7、Galaxy Note II、PlayStation 3、iPad 4、Surface、Kindle Fire HD和Lumia 920。其中苹果有三款平板电脑位列其中，而三星也有两款产品挤进前十。这也说明为何苹果要起诉三星，并且不惜和HTC和解来牵制三星的快速扩张，三星对苹果也的确形成了巨大的压力。虽然在诉讼中三星被苹果告输了，但是在市场中三星并没有被苹果压制，相反三星已经跃居到全球第一的位置。这种风头随着三星新品的持续更迭还将会延续一段时间。&lt;/p&gt;

&lt;p&gt; 　　令人诧异的是苹果iPhone 5居然没有进入前十，这是不是也从另一个侧面说明iPhone 5的失败?当诺基亚的Lumia920都闯进前十的时候，iPhone 5的成绩就显得太差了。其实诺基亚Lumia920的市场表现，尤其是在欧洲市场的上市得到很多用户的追捧，由于其对LTE的支持方面远强于iPhone 5，因此也得到了欧洲用户的青睐。此外，诺基亚和中国移动也达成合作协议，将在中国市场推出Lumia 920，这其实也是诺基亚值得持续跟进的一个策略，因为中国移动的市场太庞大了，如果真能得到中国移动的帮助，那么诺基亚未来的复苏或许会来的更早一些，而苹果的傲慢一直不愿意引入中国移动这个合作伙伴，而是选择了中国联通和中国电信，或许将来苹果也会为此买单，懊恼自己当初不该不接纳中国移动。&lt;/p&gt;

&lt;p&gt; 　　平板中无论是Nexus 7还是微软的Surface，包括亚马逊的Kindle Fire HD市场表现都是乏善可陈。不过需要说明的一点就是如果想和iPad能形成正面竞争，乃至分庭抗礼，那么自身生态系统建设就必不可少，这里不仅仅是产品本身，还应该有更多的创新之处，Surface已经表现出这种趋势，但是因为在种种方面的制约，还没有显现出其真正的威力，或许到了Surface2.0时代，市场的竞争格局就会有所不同了。而构筑在Android平台下的其他厂商，其实三星还是最重要的一个筹码，谷歌自己的Nexus 7能够圈定的市场也是一个小众市场。对于亚马逊来说Kindle Fire HD的崛起除了价格之外，捆绑内容很重要。电子阅读什么时候都会有其固有的市场，如今Kindle Fire HD也计划进入到中国市场了，会不会成为其拓展业务的一个新的动力呢?我们也不妨拭目以待。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/17/google-top-hots/index.html</link>
            <guid>http://demi-panda.com/2012/12/17/google-top-hots/index.html</guid>
            <author>小刀马</author>
        </item>

        
        <item>
            <title><![CDATA[上海出现“三个太阳” 情景仿若一张笑脸 ]]></title>
            <pubDate>Wed, 12 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;  　　10早晨，上海的天空出现了奇幻的一幕，有人看到了三个太阳和一道倒挂的彩虹，情景仿若一张笑脸。这一天象奇观被市民拍下后在网络上迅速传播，一些市民将其与“世界末日论”联系在一起，对此，气象专家表示，这是气象上正常的大气光学现象。
&lt;a href=&quot;http://demi-panda.com/media/pub/life/shanghai/sun-dog.jpg&quot; alt=&quot;三个太阳&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/shanghai/sun-dog.jpg&quot; alt=&quot;三个太阳&quot;  width=&quot;580px&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;奇特现象&lt;/h3&gt;

&lt;p&gt;　　昨天一大早，南通市濠滨论坛上就有网友发帖称，早上看到了天空中同时出现3个太阳的“奇观”，并上传了图片。一时间网友议论纷纷，甚至联想到了“玛雅预言”。记者看到，图片上的所谓3个太阳，是在刚刚升起的太阳两边，对称出现两个光点。昨天上午在丹阳，也有网友拍到了两小一大三个“太阳”的奇景。&lt;/p&gt;

&lt;p&gt;　　昨天上午，上海、苏州和常州也出现了“3个太阳”。常州网民“cinderella917”很幸运地用相机镜头捕捉到了这极为罕见的天气现象，并将现场拍到的图片发送到了常州某知名论坛上，引来了部分网友的讨论：“太阳透过云洞射出的光？”“刚好两个像太阳一样的光点。”有网友怀疑是不是拍摄者隔着玻璃拍摄的缘故，使原本正常的太阳出现了重影，不过拍摄者立即否认，并称自己并没有隔着玻璃进行拍摄。有趣的是，由于时间接近流传甚广的“末日”谣言，有市民借此打趣：“2012真的来了哦！”不过，显然围观“母子太阳”的市民中不乏科学知识渊博者，有人就认为这应该是光线作用：“今早上我也注意到了，应该是云层反射。”&lt;/p&gt;

&lt;h3&gt;专家释疑&lt;/h3&gt;

&lt;h4&gt;“3个太阳”是“幻日”现象&lt;/h4&gt;

&lt;p&gt;　　高空薄云中许多冰晶体遇到太阳光会发生折射现象
　　中国科学院南京紫金山天文台研究员王思潮告诉记者，“三个太阳”是一种幻日现象，和世界末日没有任何关系。如果云层太厚，我们就看不到“三个太阳”。
&lt;a href=&quot;http://demi-panda.com/media/pub/life/shanghai/sun-dog-2.jpg&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/shanghai/sun-dog-2.jpg&quot; alt=&quot;Black Cube Theme&quot;  class=&quot;img-right&quot; width=&quot;230px&quot; &gt;&lt;/img&gt;
&lt;/a&gt;
　　专家说，体型较小的“太阳”实际上是真太阳的幻影，这种特殊的大气现象较为罕见。据介绍，“幻日”是大气的一种光学现象——在天空高层的半透明薄云里有许多六角形柱状的冰晶体，有时候它们会整整齐齐地垂直排列在空中，当太阳光射在这些六角形冰柱上就会发生非常规律的折射现象，折射到周围看起来就像出现了多个太阳。
　　通常，“幻日”持续的时间不会太长，短则几分钟，长则几十分钟。它有时候会出现在早晨5时30分至6时或上午9时左右，有时候会出现在傍晚时分。专家表示，出现“幻日”现象的条件其实较为苛刻。首先，太阳光透过的必须是有冰晶的高空云层；其次，云层要薄，透光率要好。最主要的是，太阳与冰晶以及观察者间的角度要正好，只要稍微偏差一点，就很难发现“幻日”奇景。&lt;/p&gt;

&lt;h3&gt;幻日&lt;/h3&gt;

&lt;p&gt;　　幻日是大气的一种光学现象，在天空出现的半透明薄云里面，有飘浮在空中的六角形&lt;img src=&quot;/media/pub/life/shanghai/sun-dog-4.jpg&quot; class=&quot;img-right&quot; alt=&quot;Black Cube Theme&quot;  width=&quot;230px&quot; &gt;&lt;/img&gt;柱状的冰晶体，有时会整齐地垂直排列在空中。当太阳光射在这些六角形冰柱上时就发生了非常规律的折射现象。折射到周围射到人的眼睛里看起来会是多个太阳，这是阳光经过冰晶折射后所产生的光象，当高空密布冰晶时，常可在太阳的左右方22的位置见到一抹七彩的光影&lt;/p&gt;

&lt;h3&gt;图片欣赏&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/shanghai/sun-dog-2.jpg&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/shanghai/sun-dog-2.jpg&quot; alt=&quot;Black Cube Theme&quot;  width=&quot;580px&quot; &gt;&lt;/img&gt;
&lt;/a&gt;
&lt;a href=&quot;http://demi-panda.com/media/pub/life/shanghai/sun-dog-3.jpg&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/shanghai/sun-dog-3.jpg&quot; alt=&quot;Black Cube Theme&quot;  width=&quot;580px&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/12/sun-dogs/index.html</link>
            <guid>http://demi-panda.com/2012/12/12/sun-dogs/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Mark Zuckerberg：年轻人就是比较聪明! ]]></title>
            <pubDate>Tue, 11 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt; 　　美国矽谷近来有年龄歧视已经是不争的事实，在Facebook创办人Mark Zuckerberg 等新创公司崛起后，年龄歧视的趋势又更明显了，像是人力主管毫不避讳表示要找大约26 岁的人来工作，投资者也比较喜欢40 岁以下的老板。但这样的歧视可能到了偏执的地步，雇主变得只选年龄不选能力。&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Zuckerberg&quot; src=&quot;/media/pub/web/Zuckerberg.jpg&quot; style=&quot;width: 505px; height: 276px; &quot; /&gt;&lt;/p&gt;

&lt;p&gt;美国矽谷近来有年龄歧视已经是不争的事实，在Facebook创办人Mark Zuckerberg 等新创公司崛起后，年龄歧视的趋势又更明显了，像是人力主管毫不避讳表示要找大约26 岁的人来工作，投资者也比较喜欢40 岁以下的老板。但这样的歧视可能到了偏执的地步，雇主变得只选年龄不选能力。&lt;/p&gt;




&lt;p&gt;61 岁的科技行销策略资深老手Jeff Spirer 就曾向一个20 几岁的总裁面试，总裁看着他，说了几句无关紧要的话就离开了，之后没下文，只知道最后是一个年轻人得到这份工作。Spirer 笑说，也许总裁就是不想要看到长着皱纹的人吧!&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;o 年轻人比较聪明?年长者不敢创新?&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;矽谷的年龄歧视也是其来有自，许多人认为年轻人热情、勇敢、直率，没有家小或其他事情让他们分心，能够日日夜夜为公司奋斗。创业投资公司Khosla Ventures 的Vinod Khosla 还认为，45 岁以上的人就什么新点子也想不出来了，已经57 岁的他说，年轻人敢冒险又有实验精神，年纪大的人却害怕失败，所以鼓励大家去尝试新东西，不要墨守成规。&lt;/p&gt;




&lt;p&gt;Facebook创办人Mark Zuckerberg 更在新创课程毫不避讳表示，&lt;/p&gt;




&lt;p&gt;雇用年轻的技术人员就是创立成功公司的最佳途径，毕竟年轻人就是比较聪明。&lt;/p&gt;




&lt;p&gt;不过另一方面，Spirer 说，单看年龄的歧视是很不明智的，像是61 岁的清闲老人一定比35 岁要顾小孩的人还要有时间;&amp;ldquo;动作慢&amp;rdquo;、&amp;ldquo;没有创意&amp;rdquo;或&amp;ldquo;难沟通&amp;rdquo;这些原因都有待商榷，不全然是年龄的问题。&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;o 年龄歧视只存在矽谷，Randy Adams教年长者：改变自己的形象&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;加州的一项调查指出，职场上的年龄歧视的问题比种族歧视、性骚扰、性取向和身障就业问题还常见，约有20% 的投诉案件都和年龄歧视有关，不过就全美的统计来看，年龄问题却远不及上述的其他问题，这样的差异显然和湾区有很大的关系。&lt;/p&gt;




&lt;p&gt;既然目前年龄歧视的趋势还是无法改变，行动会议视讯公司Socialdial 执行长Randy Adams 提供几个自身经验的撇步：&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;1. 换掉衬衫，穿上T-shirts。&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;2. 别再用AOL 系统了，去申请一个Gmail 或是有自己名字domain 的email 。&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;3. 别提公事包，背个后背包吧!&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;4. 别拿黑莓机或Dell 笔电，把他换成Android 电话或是任何苹果商品。&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;5. 绝对不要带手表(特别是又俗又老的劳力士)，年轻人都看手机不看表的。&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;6. 请把白头发、白胡子剃掉或是染黑。&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;7. 非必要的选择但不妨一试：眼睑拉提的微整形。&lt;/strong&gt;&lt;/p&gt;


&lt;p&gt;原文地址：&lt;a href=&quot;http://techorange.com/2012/12/07/silicon-valleys-dirty-secret-age-bias/&quot;&gt; http://techorange.com/2012/12/07/silicon-valleys-dirty-secret-age-bias/&lt;/a&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/11/silicon-valleys-dirty-secret-age-bias/index.html</link>
            <guid>http://demi-panda.com/2012/12/11/silicon-valleys-dirty-secret-age-bias/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Centos 6.6 Linux 安装JDK ]]></title>
            <pubDate>Tue, 11 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;   　　JDK（Java Development Kit）是Sun Microsystems针对Java开发员的产品。自从Java推出以来，JDK已经成为使用最广泛的Java SDK。JDK 是整个Java的核心，包括了Java运行环境、Java工具和Java基础类库。JDK是学好Java的第一步。而专门运行在x86平台的Jrocket在服务端运行效率也要比Sun JDK好很多。从SUN的JDK5.0开始，提供了泛型等非常实用的功能，其版本也不断更新，运行效率得到了非常大的提高。&lt;/p&gt;

&lt;h3&gt;下载&lt;/h3&gt;

&lt;p&gt;下载对应操作系统的jdk，操作系统是32位的就下32位的jdk，64位的就下64位的jdk。下错了装不上的。&lt;/p&gt;

&lt;p&gt;下载地址：&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/index.html&quot;&gt;http://www.oracle.com/technetwork/java/javase/downloads/index.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;32位jdk具体下载地址：jdk-6u37-linux-i586-rpm.bin&lt;/em&gt;&lt;br&gt;
&lt;a href=&quot;http://download.oracle.com/otn-pub/java/jdk/6u37-b06/jdk-6u37-linux-i586-rpm.bin&quot;&gt;
http://download.oracle.com/otn-pub/java/jdk/6u37-b06/jdk-6u37-linux-i586-rpm.bin
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;64位jdk具体下载地址：jdk-6u37-linux-x64-rpm.bin&lt;/em&gt;&lt;br&gt;
&lt;a href=&quot;http://download.oracle.com/otn-pub/java/jdk/6u37-b06/jdk-6u37-linux-x64-rpm.bin&quot;&gt;
http://download.oracle.com/otn-pub/java/jdk/6u37-b06/jdk-6u37-linux-x64-rpm.bin
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;安装&lt;/h3&gt;

&lt;p&gt;给所有用户添加可执行的权限：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ cd /usr/local/java
$ sudo chmod +x jdk-6u37-linux-x64-rpm.bin
&lt;/pre&gt;


&lt;p&gt;执行安装&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ ./ jdk-6u37-linux-x64-rpm.bin
&lt;/pre&gt;


&lt;p&gt;会出现一段协议，需要按确定键，回车就OK。可以查看安装后的文件列表：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ ls -lt 
-r--r--r--  1 root root     4892 Apr 27  2012 register_zh_CN.html
-r--r--r--  1 root root     5294 Apr 27  2012 register.html
-r--r--r--  1 root root     6816 Apr 27  2012 register_ja.html
drwxr-xr-x  7 root root     4096 Apr 27  2012 jre
drwxr-xr-x  3 root root     4096 Apr 27  2012 lib
drwxr-xr-x  7 root root     4096 Jun 22  2010 db
drwxr-xr-x  3 root root     4096 Jun 22  2010 include
drwxr-xr-x  4 root root     4096 Jun 22  2010 man
drwxr-xr-x  9 root root     4096 Jun 22  2010 sample
drwxr-xr-x  2 root root     4096 Jun 22  2010 bin
drwxr-xr-x 10 root root     4096 Jun 22  2010 demo
-r--r--r--  1 root root     3339 Jun 22  2010 COPYRIGHT
-r--r--r--  1 root root    28230 Jun 22  2010 README.html
-r--r--r--  1 root root    25317 Jun 22  2010 README_ja.html
-r--r--r--  1 root root    20663 Jun 22  2010 README_zh_CN.html
-r--r--r--  1 root root   183173 Jun 22  2010 THIRDPARTYLICENSEREADME.txt
-rw-r--r--  1 root root 19159297 Jun 22  2010 src.zip
&lt;/pre&gt;


&lt;h3&gt;设置JDK环境变量&lt;/h3&gt;

&lt;h4&gt;修改/etc/profile文件&lt;/h4&gt;

&lt;p&gt;   　　如果你的计算机仅仅作为开发使用时推荐使用这种方法，因为所有用户的shell都有权使用这些环境变量，可能会给系统带来安全性问题。&lt;br&gt;
1、vi打开profile&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo vi /etc/profile
&lt;/pre&gt;


&lt;p&gt;2、在profile文件后追加如下配置&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
JAVA_HOME=/usr/local/java/jdk-6u37-linux
export PATH=$JAVA_HOME/bin:$PATH:
export JAVA_BIN=$JAVA_HOME/bin
export CLASSPATH=.:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar
export JAVA_HOME JAVA_BIN PATH CLASSPAT
&lt;/pre&gt;


&lt;p&gt;注意：&lt;br&gt;
a. 你要将 /usr/local/java/jdk-6u37-linux 改为你的jdk安装目录&lt;br&gt;
b. linux下用冒号“:”来分隔路径&lt;br&gt;
c. $PATH / $CLASSPATH / $JAVA_HOME 是用来引用原来的环境变量的值,在设置环境变量时特别要注意不能把原来的值给覆盖掉了，这是一种常见的错误。&lt;br&gt;
d. CLASSPATH中当前目录“.”不能丢,把当前目录丢掉也是常见的错误。&lt;br&gt;
e. export是把这三个变量导出为全局变量。&lt;br&gt;
f. 大小写必须严格区分。&lt;br&gt;&lt;/p&gt;

&lt;p&gt;3、使用source执行，使之生效&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo source /etc/profile
&lt;/pre&gt;


&lt;h4&gt;修改.bashrc文件&lt;/h4&gt;

&lt;p&gt;   　　这种方法更为安全，它可以把使用这些环境变量的权限控制到用户级别，如果你需要给某个用户权限使用这些环境变量，你只需要修改其个人用户主目录下的.bashrc文件就可以了&lt;br&gt;
1、使用vi 打开当前用户下的.bashrc文件&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ vi ~/.bashrc
&lt;/pre&gt;


&lt;p&gt;2、追加如下配置&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
JAVA_HOME=/usr/local/java/jdk-6u37-linux
export PATH=$JAVA_HOME/bin:$PATH:
export JAVA_BIN=$JAVA_HOME/bin
export CLASSPATH=.:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar
export JAVA_HOME JAVA_BIN PATH CLASSPAT
&lt;/pre&gt;


&lt;p&gt;跟使用profile配置一样&lt;br&gt;
3、使用source执行，使之生效&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo source /etc/profile
&lt;/pre&gt;


&lt;h3&gt;如果机器默认安装gij编译器，我们需要更改jdk的选择&lt;/h3&gt;

&lt;h4&gt;方案一&lt;/h4&gt;

&lt;p&gt;如果$JAVA_HOME/bin 放在$PATH后面则默认使用系统自带JDK版本，需要放在$PATH前面&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;方案二&lt;/h4&gt;

&lt;p&gt;使用root权限，执行如下步骤&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;将操作系统默认的java版本替换&lt;br&gt;
&lt;pre id=&quot;bash&quot; style=&quot;width:500px&quot;&gt;
sudo update-alternatives --install /usr/bin/java java /home/denghp/software/jdk1.6.0_30/bin/java 300
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;查看操作系统的所有的java信息&lt;br&gt;
&lt;pre id=&quot;bash&quot; style=&quot;width:500px&quot;&gt;
$ sudo update-alternatives --config java 
&lt;/pre&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/java/jdk-1.jpg&quot; width=&quot;480px&quot; alt=&quot;jdk-info&quot;&gt;&lt;/img&gt;
&lt;/li&gt;
&lt;li&gt;选择自己需要指定的java版本&lt;br&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/java/jdk-2.jpg&quot; width=&quot;480px&quot; alt=&quot;jdk-info&quot;&gt;&lt;/img&gt;
&lt;/li&gt;
&lt;/ol&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/12/11/linux-jdk-install/index.html</link>
            <guid>http://demi-panda.com/2012/12/11/linux-jdk-install/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[消费提示：警惕近期淘宝上大量超低价白菜包邮产品 ]]></title>
            <pubDate>Tue, 11 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt; 　　&lt;span style=&quot;color: #BC0202;&quot;&gt;&lt;strong&gt;不是所有的白菜价都不靠谱，什么值得买也发布过相当多的淘宝白菜价，很多网友捡到了实惠，但需知白菜也有质量差别，本文讨论的是那些看起来就完全不靠谱的白菜价。&lt;/strong&gt;&lt;/span&gt;双12临近了，近期有海量（太平洋级别）的网友向我们爆料了大量淘宝的白菜神价产品，包括十几块包邮的移动电源，一块多包邮的衣服、杯子、手电、雪地靴等，看起来非常具有诱惑力，商家在吐血，但天上通常不会掉馅饼的，“什么值得买”就给您分析下这里面的道道。
&lt;img src=&quot;/media/pub/life/pub/8610a412jw1dzd090l3vjj.jpg&quot; alt=&quot;Black Cube Theme&quot; class=&quot;img-right&quot; &gt;&lt;/img&gt;
 　　首先网友们会说，这种白菜价值得尝试，原因包括：1、有支付宝作为保障，钱即使付出去了也不会到卖家手里，我能亏什么？2、即使亏也就是几块钱，不怕博一下；3、卖家不发货，我投诉到底，看你能不能折腾过我。&lt;strong&gt;但实际情况要恶劣的多。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; 　　众所周知，淘宝的搜索结果排序，与商家的销量有关，同一件产品，哪家卖的多，哪家就容易排在前面。这样很容易形成良性循环，卖得多的会卖得更多。无疑双12会给淘宝带来巨大的流量，这些商家在双12之前，通过设置极低的价格，带来一波海量销量，待排到前面后，再把价格提上去，后来的网友仅能看到“哇，这货卖了这么多，看来很不错”，而未必会去查询或能够查询到之前卖出的价格，这样商家可以带来一批巨额利润的订单，而这批订单的多寡，将决定卖家最终是否能给之前的白菜价发货。来看最理想的情况A：&lt;/p&gt;

&lt;h3&gt;情况A：&lt;/h3&gt;

&lt;p&gt; 　　一个成本5块钱的指甲刀，发货成本5元，实际成本10元。卖家在初期以1元的价格卖了1000件。销量冲上去后，再设定价格为20元，又卖了1000件。这样这2000件总共成本为20000元，而卖家获得了21000元，理论上这个商家是不亏的，有可能前面那1000位网友就赚了。
 而实际，情况A是很难发生的，因为现在互联网传播渠道广泛，类似的1元白菜很容易被迅速传播，而且很多网友一个订单就是几百上千份，这样很可能前期比后期订单量更大。根据前面的算法，后期卖家通常要几倍于成本，才有可能完成这波操作，这时候即使淘宝有流量也未必能转化成销量。因此更多的是情况B。&lt;/p&gt;

&lt;h3&gt;情况B：&lt;/h3&gt;

&lt;p&gt; 　一个成本5块钱的指甲刀，发货成本5元，实际成本10元。卖家在初期以1元的价格卖了5000件。销量冲上去后，再设定价格为20元，又卖了1000件。这样这6000件总共成本为60000元，而卖家获得了25000元，商家会采取如下操作，将前面的5000件全部拒绝发货并退款，后面1000件发货，并用10000元的成本得到了20000元的销售收入，纯赚10000元。　&lt;/p&gt;

&lt;p&gt; 当然也有可能结果更极端一些，会发生情况C：&lt;/p&gt;

&lt;h3&gt;情况C：&lt;/h3&gt;

&lt;p&gt; 初期即产生海量的订单，商家已无法控制后续操作，直接关店了之，网友得到了退款，但便宜一点都没赚到，空欢喜一场。或者是：&lt;/p&gt;

&lt;h3&gt;情况D：&lt;/h3&gt;

&lt;p&gt;商家未发货，但把所有商品都点击发货，然后会有很多网友忘记了这回事，等到收货确认期截止，订单自动确认付款。商家仅靠这批粗心的网友也能获得几百上千个有效完成订单。&lt;/p&gt;

&lt;p&gt;如果仅是以上几种情况，对网友们来讲还算是幸运，因为，很可能最终的结果是情况E：&lt;/p&gt;

&lt;h3&gt;情况E：&lt;/h3&gt;

&lt;p&gt;一部分不良商家会用这样的办法，以包邮白菜价获得海量的订单，用户支付宝付款后，卖家可以获得海量（几千条甚至几万条）准确有效的用户收货地址，虽然后面交易取消款项退回，但这批用户名、地址、电话就被不良商家白白得到了。后面的事情就不是用户能控制的了，个人信息可是会被卖来卖去的，哼哼。。。&lt;/p&gt;

&lt;p&gt;所以，上面网友们自欺欺人的三个原因都不成立，首先即使有支付宝，你的钱没有损失，但信息会损失。第二小钱可能会带来大损失。第三卖家有可能直接撤了。切记一点，天上不会掉馅饼，Bug价连大电商们都不得不砍单，何况淘宝卖家呢。要实现上面的情况A，得有多少不明真相的群众高价上当，才能成就前面的好事，这现实么？&lt;/p&gt;

&lt;h3&gt;下面再来看看怎样识别商家这些招数：&lt;/h3&gt;

&lt;p&gt;1、首先价格必须离谱，连邮费都不够，白菜到一种境界
&lt;img src=&quot;/media/pub/life/pub/8610a412jw1dzowwjkrjaj.jpg&quot; alt=&quot;Black Cube Theme&quot; class=&quot;img-center&quot; &gt;&lt;/img&gt;&lt;/p&gt;

&lt;p&gt;2、其次商家信用通常为个位数，当然也有少量不是个位数的例子，因为带钻的店铺也是可以用很低的价钱买到的；&lt;/p&gt;

&lt;p&gt;3、销量必须巨大，评价很可能为0；
&lt;img src=&quot;/media/pub/life/pub/8610a412jw1dzowxv27jtj.jpg&quot; alt=&quot;Black Cube Theme&quot; class=&quot;img-center&quot; &gt;&lt;/img&gt;&lt;/p&gt;

&lt;p&gt;4、商家一定会说，发货别催，月底发货，不能等者误拍，旺旺爆了，没时间回复。
&lt;img src=&quot;/media/pub/life/pub/8610a412jw1dzox3eseu9j.jpg&quot; alt=&quot;Black Cube Theme&quot; class=&quot;img-center&quot; &gt;&lt;/img&gt;&lt;/p&gt;

&lt;p&gt;5、白菜神价不限量，敞开了卖的。&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color: #BC0202;&quot;&gt;&lt;strong&gt;最后，总结一下，&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color: #BC0202;&quot;&gt;&lt;strong&gt;如果你发现了，或者被发现了这样的白菜神价，还是离远一点吧，记得天上不会掉馅饼就好。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;原文地址:&lt;a href=&quot;http://www.smzdm.com/consumer-tip-vigilance-taobao-recently-a-large-number-of-ultra-low-cost-cabbage-products.html&quot;&gt;http://www.smzdm.com/consumer-tip-vigilance-taobao-recently-a-large-number-of-ultra-low-cost-cabbage-products.html&lt;/a&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/11/cabbage-products/index.html</link>
            <guid>http://demi-panda.com/2012/12/11/cabbage-products/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[基于Jenkins搭建集群部署环境 ]]></title>
            <pubDate>Mon, 10 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;h3&gt;概述&lt;/h3&gt;

&lt;p&gt;  　　在开发一个软件的过程中，测试或者项目经理经常需要得到软件的最新版本.如果每次都是开发手动编译给他们，有点浪费时间，也不科学.所以这个任务可以交给计算机来作，每当你有代码提交的时候或者每当系统定期检测到有代码更新的时候，系统自动进行编译打包，并可以通过浏览器来下载最新的软件版本。你也许会说，这个不是持续集成的一部分么？哈哈，的确是。&lt;/p&gt;

&lt;p&gt;  　　这里使用的CI（持续集成）软件是 Jenkins CI，以前叫做Hudson ci后来迫于oracle的相关政策，年初的时候改名了。&lt;a href=&quot;https://github.com/jenkinsci&quot;&gt;https://github.com/jenkinsci&lt;/a&gt;  这里是其代码.其实CI囊括的东西远远不止自动编译了，还可以有代码提交后的自动化测试，生成各种测试报告，自动打包部署等等。&lt;/p&gt;

&lt;h3&gt;安装配置&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
安装java环境,linux环境参考[linux安装jdk环境]
&lt;/li&gt;
&lt;li&gt;
如果使用ant，则需要安装ant,下载ant
&lt;/li&gt;
&lt;li&gt;安装tomcat&lt;/li&gt;
&lt;li&gt;安装部署jenkins,将下载好的jenkins.war包拷贝到tomcat/webapps目录下即可&lt;/li&gt;
&lt;li&gt;启动tomcat&lt;/li&gt;
&lt;pre id=&quot;bash&quot;&gt;
$ $TOMCAT_HOME/bin/catalina.sh run
&lt;/pre&gt;
&lt;/ol&gt;


&lt;p&gt;启动成功，可以从浏览器中输入&lt;a href=&quot;http://localhost:8080/jenkins&quot;&gt;http://localhost:8080/jenkins&lt;/a&gt;,就可以正常访问jenkins控制页面
&lt;img src=&quot;/media/pub/jenkins/jenkin-console.jpg&quot; width=&quot;580px&quot; alt=&quot;jenkins,hudson&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h3&gt;jenkins 配置&lt;/h3&gt;

&lt;h4&gt;进入Manager Jenkins页面&lt;/h4&gt;

&lt;p&gt;点击jenkins主页上的&lt;a href=&quot;http://localhost:6082/jenkins/manage&quot;&gt;Manager Jenkins&lt;/a&gt;链接，则显示如下图界面:
&lt;img src=&quot;/media/pub/jenkins/jenkins-manager.jpg&quot; width=&quot;580px&quot; alt=&quot;jenkins,hudson&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h4&gt;进入Configure System页面&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/media/pub/jenkins/jenkins-configure.jpg&quot; width=&quot;580px&quot; alt=&quot;jenkins,hudson&quot;&gt;&lt;/img&gt;
&lt;img src=&quot;/media/pub/jenkins/jenkins-email.jpg&quot; width=&quot;580px&quot; alt=&quot;jenkins email,hudson&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h4&gt;备注:&lt;/h4&gt;

&lt;p&gt;1、配置JDK installations&lt;br&gt;
  　　name:jdk名称，最好与你安装的jdk名称版本一致，如:jdk1.6.0_30&lt;br&gt;
  　　JAVA_HOME:jdk的安装路径，如:/home/denghp/software/jdk1.6.0_30&lt;/p&gt;

&lt;p&gt;2、配置Ant installations&lt;br&gt;
  　　name: ant名称,最好与你安装的jdk名称版本一致，如:apache-ant-1.8.2&lt;br&gt;
  　　ANT_HOME:ant的安装路径，如:/home/denghp/software/apache-ant-1.8.2&lt;/p&gt;

&lt;p&gt;3、配置Maven installations&lt;br&gt;
  　　name: maven名称&lt;br&gt;
  　　MAVEN_HOME:maven的安装路径，跟JAVA_HOME,ANT_HOME类似&lt;/p&gt;

&lt;h4&gt;配置Jenkins URL&lt;/h4&gt;

&lt;pre&gt;
http://localhost:8080/jenkins/
&lt;/pre&gt;


&lt;p&gt;　　&lt;/p&gt;

&lt;h4&gt;配置邮件通知E-mail Notification&lt;/h4&gt;

&lt;p&gt;邮件通知，主要是在编译，部署项目失败,成功时发送邮件通知.
&lt;img src=&quot;/media/pub/jenkins/jenkins-email.jpg&quot; width=&quot;580px&quot; alt=&quot;jenkins email,hudson&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h3&gt;构建工程&lt;/h3&gt;

&lt;h4&gt;创建项目&lt;/h4&gt;

&lt;p&gt;在jenkins的主页上选择，New Job链接,建立一个项目。填入一个项目名，选择Build a free-style software project，点击ok创建即可。
&lt;img src=&quot;/media/pub/jenkins/jenkins-job.jpg&quot; width=&quot;580px&quot; alt=&quot;jenkins job,hudson job&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h4&gt;项目配置&lt;/h4&gt;

&lt;p&gt;在创建项目单击ok按钮后会自动调整到配置项目页面，其配置如下图，单击save按钮保存。
&lt;img src=&quot;/media/pub/jenkins/jenkins-job-1.jpg&quot; width=&quot;580px&quot; alt=&quot;jenkins job,hudson job&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;备注:&lt;/strong&gt;&lt;br&gt;
1、Discard Old Builds&lt;br&gt;
  　　1.1、Days to keep builds 保留最近多少天的构建&lt;br&gt;
  　　1.2、Max # of builds to keep 保留多少个builds结果&lt;br&gt;
2、填写Subversion说明&lt;br&gt;
  　　2.1、Repository URL为svn资源的访问地址&lt;br&gt;
  　　2.2、Local module directory(optional)是自动生成&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/media/pub/jenkins/jenkins-job-2.jpg&quot; width=&quot;580px&quot; alt=&quot;jenkins job,hudson job&quot;&gt;&lt;/img&gt;
&lt;strong&gt;备注:&lt;/strong&gt;&lt;br&gt;
1、勾选Poll SCM选项出现Schedule选项&lt;br&gt;
  　　1.1、Schedule选项为当svn代码库代码发生修改后多长时间开始执行hudson重构,值&lt;em&gt; * * * &lt;/em&gt;表示代码更新一分后开始执行hudson重构。具体的格式说明单击 进行查看&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;部署&lt;/h4&gt;

&lt;p&gt;jenkins部署方式支持多种:
1、可以使用ssh，加shell命令进行部署
2、可以使用tomcat-manager方式进行部署，下面介绍下tomcat-manager部署方式：
需要部署的tomcat使用manager模块管理，配置conf/tomcat-user.xml如下:&lt;/p&gt;

&lt;pre id=&quot;xml&quot;&gt;
&amp;lt;?xml version='1.0' encoding='utf-8'?&amp;gt;
&amp;lt;tomcat-users&amp;gt;
  &amp;lt;role rolename=&quot;admin&quot;/&amp;gt;
  &amp;lt;role rolename=&quot;admin-gui&quot;/&amp;gt;
  &amp;lt;role rolename=&quot;admin-script&quot;/&amp;gt;
  &amp;lt;role rolename=&quot;manager&quot;/&amp;gt;
  &amp;lt;role rolename=&quot;manager-gui&quot;/&amp;gt;
  &amp;lt;role rolename=&quot;manager-script&quot;/&amp;gt;
  &amp;lt;role rolename=&quot;tomcat&quot;/&amp;gt;
  &amp;lt;user username=&quot;admin&quot; password=&quot;admin&quot; roles=&quot;admin,admin-gui,admin-script,manager,manager-gui,manager-script&quot;/&amp;gt;
&amp;lt;/tomcat-users&amp;gt;
&lt;/pre&gt;


&lt;p&gt;进入tomcat manager管理界面就OK
&lt;img src=&quot;/media/pub/jenkins/tomcat-manager.jpg&quot; width=&quot;580px&quot; alt=&quot;jenkins job,hudson job&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h4&gt;jenkins 使用tomcat部署配置&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/media/pub/jenkins/jenkins-job-3.jpg&quot; width=&quot;580px&quot; alt=&quot;jenkins job,hudson job&quot;&gt;&lt;/img&gt;
&lt;strong&gt;备注:&lt;/strong&gt;&lt;br&gt;
1、Deploy war/ear to a container 部署war/ear到容器中&lt;br&gt;
2、WAR/EAR files 配置war或者ear的名称&lt;br&gt;
3、Context path 解压后的项目路径名称&lt;br&gt;
4、Container 容器,包括:tomcat,jobss, Glass Fish,这里使用tomcat&lt;br&gt;
  　　4.1、Manager user name , Manager password, Tomcat URL 指定tomcat管理员用户名,密码,URL地址&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;Jenkins权限配置&lt;/h3&gt;

&lt;p&gt;配置经过验证的用户才能进行页面的操作,如下图:
&lt;img src=&quot;/media/pub/jenkins/jenkins-admin.jpg&quot; width=&quot;580px&quot; alt=&quot;jenkins job,hudson job&quot;&gt;&lt;/img&gt;
&lt;strong&gt;说明：&lt;/strong&gt;&lt;br&gt;
1、打开全局配置页面&lt;br&gt;
  　　勾选Enable security选项&lt;br&gt;
  　　当选中Enable security后会出现Security Realm和Authorization两个选项&lt;br&gt;
2、在Security Realm中选择Jenkins own user database，同时选中Allow users to sign up（容许进行用户注册，因为刚开始时没有注册用户，当进行了全部用户注册后可以把这个选择项去掉）&lt;br&gt;
3、在Authorization中选择Logged-in users can do anything，让登陆后才能做任何事情，单击save按钮后，在页面右上角有login和sign up链接&lt;br&gt;
4、单击sign up链接进行登陆注册，&lt;br&gt;
&lt;img src=&quot;/media/pub/jenkins/jenkins-admin-2.jpg&quot; width=&quot;580px&quot; alt=&quot;jenkins job,hudson job&quot;&gt;&lt;/img&gt;
注册成功后会自动跳转到登陆页面，或者单击有上角的login链接进入登陆页面&lt;/p&gt;

&lt;h4&gt;创建其他用户并设置权限&lt;/h4&gt;

&lt;p&gt;1、首先创建用户&lt;br&gt;
2、然后设置每个用户的权限
&lt;img src=&quot;/media/pub/jenkins/jenkins-admin-1.jpg&quot; width=&quot;580px&quot; alt=&quot;jenkins job,hudson job&quot;&gt;&lt;/img&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/10/jenkins-usage/index.html</link>
            <guid>http://demi-panda.com/2012/12/10/jenkins-usage/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[小强与小明的故事 ]]></title>
            <pubDate>Thu, 06 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;谨以此向工作在大城市，付出了青春、爱情、亲情甚至生命的人。人的一生很短暂，希望大家给自己多一些时间，给家人多一些关爱。&lt;/p&gt;

&lt;p&gt;1，小强每天在村里晃悠，爹妈看着发愁，心想这孩子将来怎么办呀；小明每日都苦读诗书，父母喜在心里，村里人都认定他必有出息。&lt;/p&gt;

&lt;p&gt;2，那年，小强和小明都是十九岁，小强跟着村里的外出打工，来到了高速公路的工地，保底工资三千块；小明考上了一所重点大学，读的是道路与桥梁专业，学费每年五千多。&lt;/p&gt;

&lt;p&gt;3，那年，小强和小明都是二十三岁小强的爹妈给他说个巧媳妇，是邻村的，特别贤惠；小明在大学里谈了个女朋友，是邻校的，很有文化。&lt;/p&gt;

&lt;p&gt;4，那年，小强和小明都是二十四岁小强在老家结了婚，把媳妇带到工地上，来给他洗衣做饭，恩爱有加；小明终于大学毕业，找了施工单位工作，跟女友分居两地，朝思暮想。
&lt;a href=&quot;http://demi-panda.com/media/pub/life/pub/feixiang.jpg&quot; &gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/pub/feixiang.jpg&quot; alt=&quot;Black Cube Theme&quot; class=&quot;img-right&quot; width=&quot;330px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5，小强每天很快乐，下了班就没事，吃了饭和媳妇散散步，晚上便和工友打麻将看电视；小明每天很忙碌，白天跑遍工地，晚上还做资料画图纸，好久不见的女友跟他分手了。&lt;/p&gt;

&lt;p&gt;6，那年，小强和小明都是二十八岁，小强攒下了二十万，已是两个娃娃的爹，心想着回家盖栋漂亮的楼房；小明过了中级职称，还是单身一个人过，心想着再干几年就是高级了；&lt;/p&gt;

&lt;p&gt;7，小强在农村老家盖了两层小楼，装修很漂亮，剩的钱买了一群仔，让媳妇回家种地养猪；小明在城里贷款买了一套新房，按揭三千多，父母给介绍了新女朋友，在城里上班很少见面。&lt;/p&gt;

&lt;p&gt;8， 那年，小强和小明都是三十一岁，小强媳妇从老家打电话来说：小强，现在家里有房有存款，咱喂喂猪，种种地，很幸福了，家里不能没有男人，你快回来吧；小明媳妇从城里打电话来说：小明，小孩的借读费要十五万呢，家里没有存款了，你看能不能找公司借点。&lt;/p&gt;

&lt;p&gt;9，小强听了媳妇的话，离开了工地，回老家跟老婆一起养猪，照顾父母小孩；小明听了妻子的话，更努力工作，去了偏远又艰苦的工地，很难回家一次。&lt;/p&gt;

&lt;p&gt;10，那年，小强和小明都是三十五岁猪肉价格疯涨，小强的一大圈猪成了宝贝，一年赚了十几万；通货膨胀严重，小明的公司很难接到项目，很多人都待岗了；&lt;/p&gt;

&lt;p&gt;11，那年，小强和小明都是五十岁了小强已是三个孙子的爷爷，天天晒着太阳抽着旱烟在村里转悠；小明已是高级路桥工程师，天天顶着太阳皱着眉头在工地检查；&lt;/p&gt;

&lt;p&gt;12，那年，小强和小明都是六十岁了，小强过六十大寿，老伴说：一家团圆多好呀，家里的事就让娃们操心吧，外面有啥好玩的地方咱出去转转；小明退休摆酒席，领导说：回家歇着没意思，返聘回单位做技术顾问吧，工地上有什么问题您给指导指导。&lt;/p&gt;

&lt;p&gt;13，小强病了一场，小强拉着老伴的手说：我活了快七十岁了，有儿有孙的，知足了；小明病了一场，小明抚着妻子的手说：我在外工作几十年，让你受苦了，对不起；&lt;/p&gt;

&lt;p&gt;14，……由于长期体力劳动，吃的是自家种的菜、养的猪，小强身体一直很硬朗，慢慢就恢复了。由于长期熬夜加 班、小明喝酒应酬、工地食堂饭菜也很差，身上落下很多毛病，很快就去世了。&lt;/p&gt;

&lt;p&gt;15，八十岁的小强蹲在村头抽着旱烟袋，看着远远的山；远远的山上有一片公墓，小明已在那里静静睡去；小强在鞋底磕磕烟灰，拄着拐杖站起身，望了望那片公墓，自言自语地说：唉，都是一辈子呀…&lt;/p&gt;

&lt;p&gt;  　　谨以此向工作在大城市，付出了青春、爱情、亲情甚至生命的人。人的一生很短暂，希望大家给自己多一些时间，给家人多一些关爱。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/06/xiaoqiang-and-xiaoming/index.html</link>
            <guid>http://demi-panda.com/2012/12/06/xiaoqiang-and-xiaoming/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[苹果创始人Steve Jobs的十句箴言 ]]></title>
            <pubDate>Thu, 06 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;  　　他的成就和人格魅力影响了一代人和整个世界，他就是拥有梦幻般传奇经历的苹果电脑公司的创始人斯蒂夫乔布斯。这个个人电脑领域的梦想家引领并改变了整个计算机硬件和软件产业&lt;/p&gt;

&lt;p&gt;  　　这个精力充沛魅力无限的家伙同时也是一个很会鼓动人心的激励大师，甚至在他的平常对话中，经典的语句也常常脱口而出。
&lt;img src=&quot;/media/pub/life/pub/steve-jobs.jpg&quot; alt=&quot;Black Cube Theme&quot; class=&quot;img-right&quot; width=&quot;330px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;  　　这里摘取了一些他的经典语录，希望这些乔氏语录对你有所帮助：&lt;/p&gt;

&lt;h3&gt;领袖和跟风者的区别就在于创新&lt;/h3&gt;

&lt;p&gt;  　　创新无极限！只要敢想，没有什么不可能，立即跳出思维的框框吧。如果你正处于一个上升的朝阳行业，那么尝试去寻找更有效的解决方案：更招消费者喜爱、更简洁的商业模式。如果你处于一个日渐萎缩的行业，那么赶紧在自己变得跟不上时代之前抽身而出，去换个工作或者转换行业。不要拖延，立刻开始创新！&lt;/p&gt;

&lt;h3&gt;成为卓越的代名词，很多人并不能适合需要杰出素质的环境&lt;/h3&gt;

&lt;p&gt;  　　成功没有捷径。你必须把卓越转变成你身上的一个特质。最大限度的发挥你的天赋、才能、技巧，把其他所有人甩在你后面。高标准严格自己，把注意力集中在那些将会改变一切的细节上。变得卓越并不艰难 - 从现在开始尽自己最大能力去做 - 你会发现生活将给你惊人的回报。&lt;/p&gt;

&lt;h3&gt;做我所爱&lt;/h3&gt;

&lt;p&gt;  　　成就一番伟业的唯一途径就是热爱自己的事业。如果你还没能找到让自己热爱的事业，继续寻找，不要放弃。跟随自己的心，总有一天你会找到的。
  　　我把这段话浓缩为：“做我所爱”。去寻找一个能给你的生命带来意义、价值和让你感觉充实的事业。拥有使命感和目标感才能给生命带来意义、价值和充实。这不仅对你的健康和寿命有益处，而且即使在你处于困境的时候你也会感觉良好。在每周一的早上，你能不能利索的爬起来并且对工作日充满期待？如果不能，那么你得重新去寻找。你会感觉得到你是不是真的找到了。&lt;/p&gt;

&lt;h3&gt;使用人类的已有经验和知识来进行发明创造是一件很了不起的事情.&lt;/h3&gt;

&lt;p&gt;  　　并不是每个人都需要种植自己的粮食，也不是每个人都需要做自己穿的衣服，我们说着别人发明的语言，使用别人发明的数学...我们一直在使用别人的成果。使用人类的已有经验和知识来进行发明创造是一件很了不起的事情。
  　　带着责任感生活，尝试为这个世界带来点有意义的事情，为更高尚的事情做点贡献。这样你会发现生活更加有意义，生命不再枯燥。需要我们去做的事情很多。告诉其他人你的计划，不要鼓吹，也不要自以为是，更不能盲目狂热，那样只会把人们吓跑，当然，你也不要害怕成为榜样，要抓住出头的机会让人们知道你的所作所为。&lt;/p&gt;

&lt;h3&gt;初学者的心态；拥有初学者的心态是件了不起的事情&lt;/h3&gt;

&lt;p&gt;  　　不要迷惑于表象而要洞察事务的本质，初学者的心态是行动派的禅宗。所谓初学者的心态是指，不要无端猜测、不要期望、不要武断也不要偏见。初学者的心态正如一个新生儿面对这个世界一样，永远充满好奇、求知欲、赞叹。&lt;/p&gt;

&lt;h3&gt;我们认为看电视的时候，人的大脑基本停止工作，打开电脑的时候，大脑才开始运转&lt;/h3&gt;

&lt;p&gt;  　　过去十年中，大量的理论研究表明，电视对人的精神和心智是有害的。大多数电视观众都知道这个坏习惯会浪费时间并且使大脑变得迟钝，但是他们还是选择呆在电视机前面。关掉电视吧，给自己省点脑细胞。还有，电脑也会让你的大脑秀逗，不信的话你去跟那些一天花8小时玩第一视角设计游戏、汽车拉力游戏、角色扮演游戏的人聊聊看，你也会得出这个结论的。&lt;/p&gt;

&lt;h3&gt;我是我所知唯一一个在一年中失去2.5亿美元的人...这对我的成长很有帮助&lt;/h3&gt;

&lt;p&gt;  　　犯错误不等于错误。从来没有哪个成功的人没有失败过或者犯过错误，相反，成功的人都是犯了错误之后，做出改正，然后下次就不会再错了，他们把错误当成一个警告而不是万劫不复的失败。从不犯错意味着从来没有真正活过。&lt;/p&gt;

&lt;h3&gt;我愿意把我所有的科技去换取和苏格拉底相处的一个下&lt;/h3&gt;

&lt;p&gt;  　　十几年来，世界各地的书店里涌现出海量的关于历史人物的书籍。这些人物包括苏格拉底、达芬奇、哥白尼、达尔文以及爱因斯坦成为人们灵感的灯塔，而苏格拉底排在第一位。西塞罗评价苏格拉底说：“他把哲学从高山仰止高高在上的学科变得与人休戚相关。”把苏格拉底的原则运用到你的生活、工作、学习以及人及关系上吧，这不是关于苏格拉底，这是关于你自己，以及关于你如何给你每天的生活带来更多的真善美。&lt;/p&gt;

&lt;h3&gt;活着就是为了改变世界，难道还有其他原因吗？&lt;/h3&gt;

&lt;p&gt;  　　你是否知道在你的生命中，有什么使命是一定要达成的？你知不知道在你喝一杯咖啡或者做些无意义事情的时候，这些使命又蒙上了一层灰尘？我们生来就随身带着一件东西，这件东西指示着我们的渴望、兴趣、热情以及好奇心，这就是使命。你不需要任何权威来评断你的使命，没有任何老板、老师、父母、牧师以及任何权威可以帮你来决定。你需要靠你自己来寻找这个独特的使命。&lt;/p&gt;

&lt;h3&gt;你的时间有限，所以不要为别人而活&lt;/h3&gt;

&lt;p&gt;  　　你的时间有限，所以不要为别人而活。不要被教条所限，不要活在别人的观念里。不要让别人的意见左右自己内心的声音。最重要的是，勇敢的去追随自己的心灵和直觉，只有自己的心灵和直觉才知道你自己的真实想法，其他一切都是次要。”&lt;/p&gt;

&lt;p&gt;  　　你是否已经厌倦了为别人而活？不要犹豫，这是你的生活，你拥有绝对的自主权来决定如何生活，不要被其他人的所作所为所束缚。给自己一个培养自己创造力的机会，不要害怕，不要担心。过自己选择的生活，做自己的老板！&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;以上每句话，刚开始也许很难真正渗透入你的生活，但是如果你慢慢吸收这些教训，每次领悟一句话，慢慢的你将会发现一个全新的自我。不要踌躇不前，试试看。
&lt;/code&gt;&lt;/pre&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/06/steve-job/index.html</link>
            <guid>http://demi-panda.com/2012/12/06/steve-job/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[下载高清电影的必须收藏的网站 ]]></title>
            <pubDate>Thu, 06 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;虽然蓝光推出，但是高清已经势不可挡，动辄几G甚至几十G一部的电影冲击着我们的视觉，也考验着我们的硬盘，下载高清电影并不是件容易的事情，这里介绍几个比较好的下载高清电影、电视剧的网站和论坛。&lt;/p&gt;

&lt;h3&gt;思路&lt;/h3&gt;

&lt;p&gt;思路曾经是国内最好的免费下载论坛，然而经历了&lt;a href=&quot;http://www.ilili8.cn/post/silu.html&quot;&gt;一系列变故&lt;/a&gt;之后，silu.info已经只剩下一纸声明，原思路论坛搬家到&lt;a href=&quot;http://www.siluhd.com/&quot;&gt;siluhd.com&lt;/a&gt;。人气依然很旺，片源也多。&lt;/p&gt;

&lt;h3&gt;CHD联盟&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://www.chdtv.net/&quot;&gt;CHD联盟&lt;/a&gt;中国HDTV爱好者的聚集地，有着丰富的片源，原创的较多。&lt;/p&gt;

&lt;h3&gt;苏北人高清影视论坛&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://subeiren.bbs.topzj.com/&quot;&gt;苏北人高清影视论坛&lt;/a&gt;逐渐的人气越来越旺，片源较广，内容很丰富，蓝光、HDTV、D9等都有。&lt;/p&gt;

&lt;h3&gt;迅雷搜索&lt;/h3&gt;

&lt;p&gt;虽然迅雷里面没有专门的高清下载区，但是在&lt;a href=&quot;http://movie.gougou.com/search?search=%E9%AB%98%E6%B8%85&amp;amp;sortby=5&amp;amp;suffix=&amp;amp;id=10000002&amp;amp;f=0&quot;&gt;迅雷狗狗&lt;/a&gt;搜索中输入想要的电影名称，然后按照大小排列，根据容量判断电影的清晰度，良莠不齐，但经常可以发现好片。&lt;/p&gt;

&lt;h3&gt;酷开网&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://www.coocaa.com/&quot;&gt;酷开网&lt;/a&gt;的高清电影之前是要收费的，但现在好像在向免费方向发展，郁闷的是，必须使用酷开的下载软件。&lt;/p&gt;

&lt;h3&gt;verycd 高清频道&lt;/h3&gt;

&lt;p&gt;基于电驴下载的&lt;a href=&quot;http://www.verycd.com/&quot;&gt;verycd &lt;/a&gt;可能是目前国内资源最多、最为稳定的下载站，不久不前verycd推出了高清频道，汇集了前面提到的几个高清电影下载资源站的资源，并且借助verycd广大的用户群，使得下载的速度和质量有了保证。&lt;/p&gt;

&lt;h3&gt;HD China&lt;/h3&gt;

&lt;p&gt;号称中国高清影视第一站，随着Verycd未能获得视听牌照而不能发布影视资源，HD china 应该是目前国内获得高清资源的较好去处。&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;http://immortalseed.com/&quot;&gt;http://immortalseed.com/&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;一个国外的高清影视资源论坛，不多说，如果喜欢看欧美影视剧，又有一点E文基础的话，绝对的好去处。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/06/movie-download/index.html</link>
            <guid>http://demi-panda.com/2012/12/06/movie-download/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Dont Make Me Think - 街头指示牌和面包屑–设计导航 ]]></title>
            <pubDate>Wed, 05 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;&lt;em&gt;记住这个事实：&lt;/em&gt;
如果人们在网站上找不到方向，人们不会使用你的网站。&lt;/p&gt;

&lt;p&gt;　　从你自己作为web用户的体会就可以知道这一点。如果到了一个网站，却找不到你需要的内容或者不知道该网站怎么组织的，你不太可能在那里待很长时间----或者还会回来，那么怎么创建大家公认的&quot;明确&quot;,&quot;简单&quot;,&quot;一致&quot;的导航呢？&lt;/p&gt;

&lt;h3&gt;网络导航101法则&lt;/h3&gt;

&lt;p&gt;很多时候，进入网站都是遵循如下的过程：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;通常都是为了寻找某个目标。&lt;/li&gt;
&lt;li&gt;你会决定先搜索还是先浏览:如同在商场购物你会决定是找服务员询问还是自己寻找，区别是在网站上等价的服务是搜索。另一些人则会先浏览，只有在他们久寻不到或对这个网站完全绝望的情况下才开始搜索。&lt;/li&gt;
&lt;li&gt;对任何人来说，先搜索还是先浏览取决于他们的打算、匆忙程度，以及网站是否有良好的导航机制。&lt;/li&gt;
&lt;li&gt;如果选择浏览，将通过标志的引导在层次结构中穿行。&lt;/li&gt;
&lt;li&gt;最后，如果找不到想要的东西，你会离开。&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;无法承受的浏览之轻&lt;/h3&gt;

&lt;p&gt;在网络上找东西和在现实中找东西有很多相似之处，但是在WEB上的体验缺少了许多我们在生活中用来同空间相处的感觉，想想下面这些WEB空间的奇怪之处：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;感觉不到大小：&lt;/strong&gt;即使在频繁使用的网站（除非真的很小），我们很难感觉它有多大。我们只知道可能有很多角落我们从未涉足。同生活中具体的事物相比，我们没有“视野之内/视野之外”的规模估计。

实际上，你很难知道是否已经看到了这个网站上所有感兴趣的内容，因此也很难知道什么时候该停止寻找。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;感觉不到方向：&lt;/strong&gt;只有更一般的层次或更具体的层次。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;感觉不到位置：&lt;/strong&gt;点击到的一个新页面是通过链接移动，没有空间上的移动。如果要回到之前访问的内容页面，我们不是依靠它在哪里的物理感觉，而是记住它在概念层次上的位置，然后重新顺着链接过去。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;这就是书签&lt;/strong&gt;–存储的个人捷径–如此重要的原因，也是为什么后退按钮的点击率占据网络上所有点击率的30%~40%的原因。它也解释了为什么主页的概念这么重要。相对来说，主页就是固定的空间。当你在一个网站上，主页就像北极星，可以点击它给你一个重新开始的机会。
&lt;/li&gt;
缺乏物理感觉既是好事也是坏事。从好的方面说，这种无重状态让人愉快，也部分解释了为什么在WEB上容易忘记时间–这和我们在入神地读一本好书时一样。&lt;br&gt;
（PS:这也是为什么载入太慢的页面令人讨厌的原因，如果你只能达到每小时几英里的速度，那么飞行还有什么乐趣呢？）
从坏的方面说，导航在WEB上比在物理空间上要重要得多，我们置身网络时，本来就是迷路的。如果还不能通过那些走道知道我们的位置，就会缺乏空间感，对浏览失去信任度和耐心。


&lt;/ol&gt;


&lt;h3&gt;被忽视了的导航的用途&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;给我们一些固定的感觉&lt;/li&gt;
&lt;li&gt;它告诉我们当前的位置&lt;/li&gt;
&lt;li&gt;它告诉我们如何使用网站&lt;/li&gt;
&lt;li&gt;它给我们对网站建造者的信心&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;导航的两个显而易见的用途就是帮助我们找到相要的任何东西和告诉我们现在身处何处。&lt;/p&gt;

&lt;h3&gt;WEB导航习惯用法&lt;/h3&gt;

&lt;p&gt;一般的全局导航都包括站点ID，回主页的方式，搜索，使用工具，栏目。而且WEB上已经有了导航的习惯用法。
但是，并不是每个页面都一定需要全局导航，下面两种情况例外：
&lt;strong&gt;主页:&lt;/strong&gt;它要承担一些不同的任务，遵守一些不同的承诺。下一章会有详细介绍。
&lt;strong&gt;表单:&lt;/strong&gt;表单填写时，用户只想关心在做的事情，需要一些简单的链接和实用工具即可。持久导航可能会成为不必要的干扰。&lt;/p&gt;

&lt;h4&gt;导航的重要元素：&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;网站ID或LOGO:&lt;/strong&gt;和我们希望在正门口见到建筑的名字一样，我们希望在页面的上方见到站点ID。（通常在左上角）
因为站点ID代表了整个网站，也就是说，它在当前站点结构中层次最高。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;栏目:&lt;/strong&gt;有时候也称为主导航条，是到达站点主要栏目的链接。在大部分情况下，持久导航也包括二级导航的现实位置，它们一般处在对应栏目的下一级。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实用工具:&lt;/strong&gt;是到达网站中不属于内容层次的重要元素的链接。要么帮助我们使用站点，要么提供网站发布者的信息。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;回到首页的链接或按钮&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;提供搜索&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;花哨的用词：&lt;/strong&gt;他们会寻找“搜索”2字，请使用“搜索”，而不是“查找”，“快速查找”等字样&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;指示说明：&lt;/strong&gt;比如在输入框增加“请输入邮箱地址/用户名/手机号码”等指示用词&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;选项：&lt;/strong&gt;比如买书的网站“书名,作者，出版社”等选项缩小范围&lt;/li&gt;
 &lt;/ol&gt;


&lt;h3&gt;页面名称&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;每个页面都需要一个名称&lt;/li&gt;
&lt;li&gt;页面名称要出现在合适的位置（这个有点废话的感觉，但是很有用，参考可视性去做）&lt;/li&gt;
&lt;li&gt;名称要引人注目&lt;/li&gt;
&lt;li&gt;名称要和点击的链接一致。（匹配性原则）&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;面包屑&lt;/h3&gt;

&lt;p&gt;面包屑和“你在这里”指示器一样，能告诉你当前的位置&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;把它们放在最顶端&lt;/li&gt;
&lt;li&gt;使用“&gt;”对层级进行分割&lt;/li&gt;
&lt;li&gt;使用小字体&lt;/li&gt;
&lt;li&gt;使用了文字“你在这里”：大多数人会明白面包屑是什么，但是由于他的字体比较小，不让让它们自我解释，&lt;/li&gt;
&lt;li&gt;将最后一个元素加粗：表示为当前页面，得到应有的突出&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;/p&gt;

&lt;h3&gt;标签&lt;/h3&gt;

&lt;p&gt;标签是大型网站导航的最佳选择，因为&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;它们不言而喻&lt;/li&gt;
&lt;li&gt;它们很难错过。标签在视觉上很难被忽略，而且它们就是导航&lt;/li&gt;
&lt;li&gt;它们很灵活。标签能增加修饰作用而且更实用&lt;/li&gt;
&lt;li&gt;它们暗示了一个物理的空间。&lt;/li&gt;
&lt;/ol&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/12/05/web-dont-make-me-think/index.html</link>
            <guid>http://demi-panda.com/2012/12/05/web-dont-make-me-think/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[KISS原则-简单原则 ]]></title>
            <pubDate>Wed, 05 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　KISS原则是英语 Keep It Simple, Stupid 的首字母缩略字，也有人称“懒人原则”。KISS原则是指在设计当中应当注重简约的原则。同时这原则亦有应用在商业书信、设计电脑软件、动画、工程上。原文当中有很多其他版本，包括：&quot;Keep It Simple &amp;amp; Stupid&quot;（在西欧文学中最常使用）、&quot;Keep It Sweet &amp;amp; Simple&quot;、&quot;Keep It Short &amp;amp; Simple&quot;、&quot;Keep it Simple, Sweetheart&quot; 及 &quot;Keep it Simple, Sherlock&quot;。&lt;/p&gt;

&lt;h3&gt;释义&lt;/h3&gt;

&lt;p&gt;　　KISS原则，keep it simple and stupid ，简单的理解这句话就是，要把一个系统做的连白痴都会用。这就是用户体验的高层境界了，好听的说法也是有的，简单就是美。&lt;/p&gt;

&lt;h3&gt;应用&lt;/h3&gt;

&lt;p&gt;　　为了达到良好用户体验，设计师往往会有很多的矛盾，比如一个自认为非常好的建议，就因为别人不太会用或者不理解就要放弃，这是一个非常痛苦的抉择。web2.0时代用户的参与性越来越高，网络中往往是主动的去接受信息，门户的概念也在渐渐的发生变化。用户参与性的提高就必须提供一个信息发布的平台，这个平台的使用需要最简单的。&lt;/p&gt;

&lt;p&gt;　　现在的大多数网络平台的操作过于复杂，复杂到我们宁愿放弃80%的功能去换取一个简洁的操作平台，当然，如果能保留其中我们需要的那就最好了。由于网络中各个层次的用户之间存在巨大的差别，所以，从大多数的受众考虑开发最适合的平台将是web2.0时代的一个重要的方向。&lt;/p&gt;

&lt;h3&gt;简单理解&lt;/h3&gt;

&lt;p&gt;　　如果KISS能够放之四海而皆准，那这个世界就真的太Simple，太Stupid了。首先，不同的民族和地域文化很大程度上影响着人们的行为方式，简单要求KISS不一定合适。这个相信大家都有很深的体会了，可以参考本文附件一。&lt;/p&gt;

&lt;p&gt;　　其次，一个具体的企业在不同的发展阶段，也会有不同的状态。正如我之前的一篇文中提到（去K歌，要列清单吗？），创业阶段的时候是一种自发性的KISS，后来逐渐壮大，之后是臃肿，再之后可能会进行优化制度、流程方面的工作，算是一次主动的KISS了。再之后的巨无霸状态，KISS原则就不会是最佳的选择了。&lt;/p&gt;

&lt;p&gt;　　第三，即使单看一个稳定时期内的企业，也需要根据发展战略和业务需求，来决定是否有必要对某一类业务、某一个流程进行KISS方向的改造。比如，出于成本效益考虑，管理层可能更希望某费用中心保持稳定即可，而不是花20%的代价去提高5%的效率和效果。&lt;/p&gt;

&lt;p&gt;　　在如今东西方文化激烈碰撞的时代，简陋-复杂-简约代表了很多方面的发展过程，也往往会随着时间的变化螺旋上升。KISS所推崇的“简单”，应该是这种高级的阶段的“简约”，无论是代码层面还是管理层面。所以，KISS更应该被看作许可条件下的努力方向吧。&lt;/p&gt;

&lt;h3&gt;KISS原则在产品设计中的作用&lt;/h3&gt;

&lt;p&gt;　　KISS原则是指产品的设计越简单越好，简单就是美，任何没有必要的复杂都是需要避免的。KISS原则从英文的直译是把事情弄得越简单、越傻瓜化越好。其最完美的案例是傻瓜相机，傻瓜相机操作简单，似乎连傻瓜都能利用它拍摄出曝光准确、影像清晰的照片来。&lt;/p&gt;

&lt;p&gt;　　KISS原则是DFMA中最重要的一条设计原则和设计思想，几乎贯穿于DFMA的每一条设计指南中（关于KISS原则在DFM的体现，请参考以后的章节）。&lt;/p&gt;

&lt;p&gt;　　减少零件数量是KISS原则在DFA的主要体现。一般来说在产品中，零件数量越多，产品制造和装配越复杂和越困难，产品制造费用和装配费越高，产品开发周期就越长，同时产品发生制造和装配质量问题的可能性越高。在确保实现产品功能和质量前提下，简化的设计、更少的零件数量能够降低产品成本，缩短产品开发周期，提高产品开发质量。高水平的机械工程师把复杂的东西设计得很简单。低水平的机械工程师则把简单的东西设计得很复杂，此时也可以把KISS原则应用上，因为KISS原则也可以翻译成：把事情弄简单点，傻瓜！&lt;/p&gt;

&lt;p&gt;　　对于机械工程师来说，减少零件数量、简化产品设计能够大幅减少工作量，一个零件在其开发周期中的任务包括零件设计、生成二维工程图、样品制作、零件试产、零件装配、零件质量和功能验证等等，无一不是繁重的任务。减少零件数量、简化产品设计对于工程师来说是看得见的实惠，能够让工程师把更多的时间和精力放在提高产品设计质量上来。&lt;/p&gt;

&lt;p&gt;　　KISS原则在产品中的具体实现请参看机械工业出版社出版的《面向制造和装配的产品设计指南》一书。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/05/kiss-stup/index.html</link>
            <guid>http://demi-panda.com/2012/12/05/kiss-stup/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[北漂生活 ]]></title>
            <pubDate>Tue, 04 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;北漂生活是一篇自由的散文诗，北漂的感受交织着酸甜苦辣。北漂人就在漂中痛并快乐着。&lt;/p&gt;

&lt;h3&gt;酸&lt;/h3&gt;

&lt;p&gt;离开家奔波于一个陌生的城市里，穿梭于陌生的人群中，是寂寞之酸；寄人篱下，对房东忍气吞声是无奈之酸；没有户口，飘泊不定，是无根之酸；北漂了很久，因为漂着，注定有一天要离开这个城市，这种感觉最酸。
&lt;a href=&quot;http://demi-panda.com/media/pub/life/pub/life-style.jpg&quot; alt=&quot;北漂生活&quot; &gt;
&lt;img src=&quot;/media/pub/life/pub/life-style.jpg&quot; alt=&quot;北漂生活&quot; class=&quot;img-right&quot; width=&quot;330px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;甜&lt;/h3&gt;

&lt;p&gt;一个人，在陌生的北京，为了自己的理想而打拚着，是自豪之甜；一个人，赤条条漂在北京没有约束，是自由之甜；日夜努力，工作结出硕果是成就之甜；家中传来的一句句问候、一句句关怀是北漂人心中的最甜。&lt;/p&gt;

&lt;h3&gt;苦&lt;/h3&gt;

&lt;p&gt;囊中羞涩，为省钱买东西磨破嘴皮、为了房子一次次搬家，和不喜欢的几个人合居一室是强忍之苦；寒冬酷暑，为了工作没日没夜奔波是黎明冲破黑暗前的分娩之苦；北漂人的心思外人不能理解是最痛苦。&lt;/p&gt;

&lt;h3&gt;辣&lt;/h3&gt;

&lt;p&gt;吃苦耐劳，是北漂人美德之辣；工作充满干劲是活力之辣；加班多天不知道疲倦、一丝不苟是兢业之辣；北漂人尝尽生活百味是又麻又辣；北漂人的爱情因漂而更甜蜜是调味之辣；北漂人永不服输的这种性格是最&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/04/north-drift-life/index.html</link>
            <guid>http://demi-panda.com/2012/12/04/north-drift-life/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[人生旅途 ]]></title>
            <pubDate>Tue, 04 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;今天的我居然再次有写日志的冲动，主要原因是跟一个朋友聊天，及看了一篇网友的文章，仔细算算时间，自己也记不清楚到底有多长时间没好好写过日志了，想必自己的这方面能力已经退化到低谷了吧！废话不多说了，希望以后回头来看会有所收获。&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong&gt;“路漫漫其修远兮，吾将上下而求索”。&lt;/strong&gt;屈原的《离骚》中的诗句，不经浮现在我的脑海。这句诗的意思就再简单不过啦，意思是说：在追寻真理方面，前方的道路还很漫长，但我将百折不挠，不遗余力地去追求和探索。&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;为什么一开始就把屈原的诗句引用过来，其实也就是标题《人生旅途》的精髓所在吧！一个人在这条路上走的时间长了，有过哭，有过笑，有经历过酸，甜，苦，辣的滋味在日志《北漂生活》已经体会过，当你觉得很疲倦，很烦恼，很浮躁，没有方向感的时候，适当的放慢脚步或者停下来给自己回味，踹气的时间，仔细的回顾下自己的当初追寻的方向是否有过歧途? 有收获？ 未来的方向是否需要适当的调整? &lt;br/&gt;
&lt;a href=&quot;http://demi-panda.com/media/pub/life/pub/hope.jpg&quot; alt=&quot;旅游&quot;&gt;
&lt;img src=&quot;/media/pub/life/pub/hope.jpg&quot; alt=&quot;旅游&quot; class=&quot;img-right&quot; width=&quot;330px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;网友的一篇文章&lt;/h3&gt;

&lt;p&gt;第一个里程碑（主要描述她的5年的职业生涯）&lt;/p&gt;

&lt;p&gt;看到这篇文章在这里我仔细算算，到目前，自己的人生经历过两次大的里程碑了，其中的经历只有自己最清楚，感谢在这里程碑期间，对我帮助过的所有人，感谢陪我走过艰难生活的兄弟姐妹们，感谢自己的爸妈对我的支持，及信任，你们永远是我至亲至爱的人。下面是我的里程碑:&lt;/p&gt;

&lt;p&gt;里程碑一：2004年-2008年（迷茫）&lt;/p&gt;

&lt;p&gt;里程碑二：2008年-2012年（漂泊）&lt;/p&gt;

&lt;h3&gt;朋友聊天&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;朋友说：&lt;/strong&gt;
有时候我真的很不想上班特别不想，我就想着能给我放个长假让我做我想做的事，太不现实了所以人要想活的潇洒真的是要资本的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;朋友说了一个比喻：&lt;/strong&gt;
上班族就如同拉车的牛，总想着拉完车就可以停下来休息却没想到一拉就是一辈子 只等老了拉不动了却又被无情的送进屠宰场。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;我说: &lt;/strong&gt;
觉得现在自己还有很多朋友都处于拉车的牛这一状态，虽然我们没有别人先天的条件，没有别人雄厚的资本，我们只有一身的牛劲，现实社会逼着我们去走，去低头，我们没必要去抱怨，但是现在能做的只有去填写自己的篇章，阅历，提高自己的能力等待时机去放手一搏。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;朋友说：&lt;/strong&gt;
今天差点和销售老总吵起来了，但我还是忍下来了，想想得不偿失。 （产品出了问题，朋友和销售老总都有责任吧）
哎，最近我也失眠了整夜的睡不着。都烦透了。
我明天要直接和我们董事长汇报工作，今天晚上我得打好腹稿，不然明天还不知道从哪开始说了。
很纠结啊，在不能得罪任何人的情况下又要把这次的质量事故叙述清楚，真的要成神经了呵。&lt;/p&gt;

&lt;h4&gt;为朋友感到骄傲&lt;/h4&gt;

&lt;p&gt;因为你已经学会忍一时之气，免百日之忧。至少平静;处理好利害关系。能饶人处且饶人。真的，你已经很了不起啦，虽然说你现在还有烦恼，还有困难，相信你一定能处理的很好。&lt;/p&gt;

&lt;p&gt;从上面网友的文章及朋友的对话，不由的触动了自己的心炫...&lt;/p&gt;

&lt;h3&gt;路漫漫其修远兮，吾将上下而求索&lt;/h3&gt;

&lt;h3&gt;人际关系&lt;/h3&gt;

&lt;p&gt;人际关系处理，在这里我不想用自己没有条理及浮躁心情来写，只有借用卡耐基人际关系巨作《人性的弱点》来引导自己。在上一篇日志《卡耐基人生关系指南》中可以阅读。&lt;/p&gt;

&lt;h3&gt;处事方式&lt;/h3&gt;

&lt;h4&gt;一、学会忍一时之气，免百日之忧.&lt;/h4&gt;

&lt;p&gt;（上面跟朋友聊天中多次提到）对于那些经常找你麻烦甚至欺负你的人，能忍则忍，没必要时刻与莽夫过不去，但一定要给他攒着，新仇旧怨积累起来，正义和真理就属于你了，那么瞅准机会一定要彻底教训他一次，在法律赋予的权限以内，往死里整，往死里揍，让小子永远记住：除了你爹，没人会惯你这些臭毛病。&lt;/p&gt;

&lt;h4&gt;二、学会沉默&lt;/h4&gt;

&lt;p&gt;有时候，你被人误解，你不想争辩，所以选择沈默。本来就不是所有的人都得了解你，因此你认为不必对全世界喊话。却也有时候，你被最爱的人误解，你难过到不想争辩，也只有选择沈默。全世界都可以不懂你，但他应该懂，若他竟然不能懂，还有什么话可说?生命中往往有连舒伯特都无言以对的时刻，毕竟不是所有的是非都能条列清楚，甚至可能根本没有真正的是与非。那么，不想说话，就不说吧，在多说无益的时候，也许沈默就是最好的解释。&lt;/p&gt;

&lt;h4&gt;三、至少平静&lt;/h4&gt;

&lt;p&gt;在你跌入人生谷底的时候，你身旁所有的人都告诉你：要坚强，而且要快乐。坚强是绝对需要的，但是快乐?在这种情形下，恐怕是太为难你了。毕竟，谁能在跌得头破血流的时候还觉得高兴？但是至少可以做到平静。平静地看待这件事，平静地把其他该处理的事处理好。平静，没有快乐，也没有不快乐&lt;/p&gt;

&lt;h4&gt;四、学会弯腰这会是我意外的收获&lt;/h4&gt;

&lt;p&gt;当和别人发生意见上的纷歧，甚造成言语上的冲突，所以你闷闷不乐，因为你觉得都是别人恶意。别再耿耿于怀了，回家去擦地板吧。拎一块抹布，弯下腰，双膝着地，把你面前这张地板的每个角落来回擦拭干净。然后重新省思自己在那场冲突，所说过的每一句话。现在，你发现自己其实也有不对的地方了，是不是?你渐渐心平气和了，是不是?有时候你必须学习弯腰，因为这个动作可以让你谦卑。劳动身体的同时，你也擦亮了自己的心绪。而且，你还拥有了一张光洁的地板呢。这是你的第二个收获。&lt;/p&gt;

&lt;h4&gt;五、不要想如果当初&lt;/h4&gt;

&lt;p&gt;你说，人生是一条有无限多岔口的长路，永远在不停地做选择。如果只是选择吃炒面或炒饭，影响似乎不大，但选择读什么科系、做什么工作、结婚或不结婚、要不要有孩子，每一个选择都影响深远，而不同的选择也必定造就完全不一样的人生。你又说，生命中不可承受之情，就在于人生没有重来的机会啊。如果当初如何如何，现在就不会怎样怎样...这种充满怅然的喃喃自语，还是别再多说了吧。每一个岔口的选择其实没有真正的好与坏，只要把人生看成是自己。独一无二的创作，就不会频频回首如果当初做了不一样的选择&lt;/p&gt;

&lt;h4&gt;六、保持单纯&lt;/h4&gt;

&lt;p&gt;因为思虑过多，所以你常常把你的人生复杂化了。明明是活在现在，你却总是念念不忘着过去，又忧心忡忡着未来；坚持携带着过去、未来与现在同行，你的人生当然只有一片拖泥带水。而单纯是一种恩宠状态。单纯地以皮肤感受天气的变化，单纯地以鼻腔品尝雨后的青草香，单纯地以眼睛统摄远山近景如一幅画。单纯地活在当下。而当下其实无所谓是非真假。既然没有是非，就不必思虑；没有真假，就无须念念不忘又忧心忡忡。无是非真假，不就像在做梦一样了吗?是呀，就单纯地把你的人生当成梦境去执行吧。&lt;/p&gt;

&lt;h4&gt;七，能饶人处且饶人。&lt;/h4&gt;

&lt;p&gt;对待小人一定要忍让，退一步海阔天空，实在不行把属于自己的空间也送给他们，让他们如莺歌燕舞般陶醉吧。俗话说大人大度量，不把俗事放在心里，小人鼠肚鸡肠，惹着小人就等与惹了麻烦，天底下顶数小人惹不起。直到现在我也没想出更好的办法战胜小人，不知道敬而远之是否可行。&lt;/p&gt;

&lt;h4&gt;八，虚怀若谷，大智若愚。&lt;/h4&gt;

&lt;p&gt;待人接物要摆正自己的位置，不可以老把自己当人物，老拿自己当领导，老把自己当富翁，老以为自己是情圣，老是自我感觉良好，即便真是小有作为，业绩斐然，也要谨慎，要虚怀若谷，要大智若愚，其实人的最终结局都是一样的，只是你把自己看复杂了，说句俗话：千万别把自己当回事&lt;/p&gt;

&lt;h4&gt;九，处理好利害关系。&lt;/h4&gt;

&lt;p&gt;这世道没有无缘无故的爱，也没有无缘无故的恨，不要参与评论任何人，做到心中有数就可以了。所谓盖棺论定的道理多简单，就是有操之过急。谁也没有理论依据来界定好人与坏蛋，其实就是利益关系的问题。&lt;/p&gt;

&lt;h4&gt;十、谨开口慢出言。&lt;/h4&gt;

&lt;p&gt;说话要用脑子，做事慎言 .话多无益，嘴只是一件扬声器而已，平时一定要注意监督控制好调频旋钮和音控开关，否则会给自己带来许多麻烦。讲话不要只顾一时痛快,信口开河，以为人家给你笑脸就是欣赏，没完没了的把掏心窝子的话都讲出来，结果让人家彻底摸清了家底，还偷着笑你。&lt;/p&gt;

&lt;h4&gt;总结：&lt;/h4&gt;

&lt;p&gt;这篇日志花了我2个小时左右，真的很值得，因为我也学会了很多东西，该怎么去回顾自己的旅途，确定自己的方向，相信在未来的某一天，人生旅途会添加更加精彩的篇章。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/04/lvtu/index.html</link>
            <guid>http://demi-panda.com/2012/12/04/lvtu/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Linux图片处理工具imagemagick使用方法 ]]></title>
            <pubDate>Tue, 04 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;图片在网站所占的比重越来越重。更好的优化图片可以提高网站速度。减少宽带流量。ImageMagick 是一个用来创建、编辑、合成图片的软件。它可以读取、转换、写入多种格式的图片。图片切割、颜色替换、各种效果的应用，图片的旋转、组合，文本，直线， 多边形，椭圆，曲线，附加到图片伸展旋转。ImageMagick是免费软件：全部源码开放，可以自由使用，复制，修改，发布。支持大多数的操作系统。&lt;/p&gt;

&lt;h3&gt;语法&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
Usage: convert [options ...] file [ [options ...] file ...] [options ...] file
&lt;/pre&gt;


&lt;h3&gt;示例&lt;/h3&gt;

&lt;h4&gt;对用户上传图片进行缩放&lt;/h4&gt;

&lt;p&gt;对于用户自己上传的图片不能简单的 用css限制大小，因为这样每次加载图片时候还是会加载整幅大图。占用多余的宽带，并且影响页面加载速度。应该根据实际显示需要进行缩放。比如我想要用户 相册里的图片大小不能超过500x300：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ convert -resize &quot;500x300&gt;&quot; input.jpg  output.jpg
&lt;/pre&gt;


&lt;p&gt;如果图片比500x300小就保持原样，以防小图片被放大失真。&lt;/p&gt;

&lt;h4&gt;生成不同比例缩略图&lt;/h4&gt;

&lt;p&gt;一般相册等应用，都会提供缩略图和预览图，这些缩略图同样不能简单的用css来限制大小，要为每个图片生成不同比例的预览图。&lt;/p&gt;

&lt;h4&gt;去除多余信息&lt;/h4&gt;

&lt;p&gt;Exif信息是数码相机在拍摄过程中采集的一系列信息，这些信息放置在我们熟知的jpg文件的头部，也就是说Exif信息是镶嵌在JPEG图像文件格式内 的一组拍摄参数，主要包括摄影时的光圈、快门、ISO、日期时间等各种与当时摄影条件相关的讯息，相机品牌型号，色彩编码，拍摄时录制的声音以及全球定位 系统（GPS）等信息。简单的说，它就好像是傻瓜相机的日期打印功能一样，只不过Exif信息所记录的资讯更为详尽和完备。不过，具有Exif信息的 JPEG图像文件要比普通的JPEG文件略大一点。还有就是像PS这种软件处理过的图片会有&quot;program comments&quot;。如果不是专业的摄影类网站，这些信息是没有用的，可以去掉：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ convert -strip input.jpg output.jpg
&lt;/pre&gt;


&lt;h4&gt;调节压缩比&lt;/h4&gt;

&lt;p&gt;大多时候，我们的网站并不需要那么清晰的图片，适量调节JPG图片的压缩比会减少图片大小，肉眼并不会分辨出质量被压缩后的图片。通常75%是最佳比例。&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ convert -quality 75% input.jpg output.jpg
&lt;/pre&gt;


&lt;p&gt;上面几个步骤可以一次搞定：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ convert -resize &quot;500x300&quot; -strip -quality 75% input.jpg output.jpg
&lt;/pre&gt;


&lt;p&gt;上面说的都是针对JPG格式的处理方式，下面说一下BMP，GIF，PNG等格式的处理。对于BMP直接转成JPG就可以了。再按照上面的方式处理。&lt;/p&gt;

&lt;p&gt;而GIF和PNG貌似有些特殊。GIF的一些特性（动画效果，透明等）是 JPG没有的，可以根据实际情况选择转或不转，如果转换成jpg，取第一帧只需要这样：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ convert -format jpg input.gif input.jpg
&lt;/pre&gt;


&lt;p&gt;PNG也可以通过减少PNG图片color数量的办法达到压缩的目的。但是这种办法压缩出来的图像可以明显看出来失真，而且呈锯齿状。&lt;/p&gt;

&lt;p&gt;对于真实世界的PNG图片（通常指照片），一般先转换成JPG，再通过上面的办法来压缩。&lt;/p&gt;

&lt;h4&gt;关于图片扩展名&lt;/h4&gt;

&lt;p&gt;发现大部分网站喜欢把用户上传的图片（头像，相册等）都统一转成特定格式（一般都是 jpg）。这样做的潜在弊端就是在用像ImageMagick这样的软件处理的时候会根据扩展名做隐式格式转换。
个人觉得在保存图片的时候不加扩展名处理起来更灵活一些。&lt;/p&gt;

&lt;h4&gt;使用 @ 来制定图片的像素个数&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ convert -resize &quot;10000@&quot; src.jpg dst.jpg
&lt;/pre&gt;


&lt;p&gt;此命令执行后，dst.jpg图片大小为（115×86），图片保持原有比例（115×86= 9080 &amp;lt; 10000)&lt;/p&gt;

&lt;h4&gt;当原始文件大于指定的宽高时，才进行图片放大缩小，可使用&gt;命令后缀&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ convert -resize &quot;100×50&amp;gt;&quot; src.jpg dst.jpg
&lt;/pre&gt;


&lt;p&gt;命令执行后，dst.jpg图片大小为（67×50），图片保持原有比&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ convert -resize &quot;100×50&amp;gt;!&quot; src.jpg dst.jpg
&lt;/pre&gt;


&lt;p&gt;命令执行后，dst.jpg图片大小为（100×50），图片不保持原有比例。&lt;/p&gt;

&lt;h4&gt;当原始文件小于指定的宽高时，才进行图片放大转换，可使用&amp;lt;命令后缀.&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ convert -resize &quot;100×500&amp;lt;&quot; src.jpg dst.jpg 
#或者
$ convert -resize &quot;100×100&amp;lt;!&quot; src.jpg dst.jpg
&lt;/pre&gt;


&lt;p&gt;命令执行后，dst.jpg和src.jpg大小相同，因为原始图片宽比100大&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ convert -resize &quot;600×600&lt;&quot; src.jpg dst.jpg
&lt;/pre&gt;


&lt;p&gt;命令执行后，dst.jpg图片大小为（600×450），图片保持原有比例。&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ convert -resize &quot;600×600&amp;lt;!&quot; src.jpg dst.jpg
&lt;/pre&gt;


&lt;p&gt;命令执行后，dst.jpg图片大小为（600×600），图片不保持原有比例。&lt;/p&gt;

&lt;h4&gt;使用&lt;sup&gt;命令后缀可以使用宽高中较小的那个值作为尺寸&lt;/sup&gt;&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ convert -resize &quot;300×300^&quot; src.jpg dst.jpg
&lt;/pre&gt;


&lt;p&gt;命令执行后，dst.jpg图片大小为（400×300），图片保持原有比例，(300:300 &amp;lt; 200:150，选择高作为最小尺寸）。&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ convert -resize &quot;300×200^&quot; src.jpg dst.jpg
&lt;/pre&gt;


&lt;p&gt;命令执行后，dst.jpg图片大小为（300×225），图片保持原有比例，(300:200 &gt; 200:150，选择宽作为最小尺寸）。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/04/linux-imagemagick/index.html</link>
            <guid>http://demi-panda.com/2012/12/04/linux-imagemagick/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[HTML JavaScript 转义字符 ]]></title>
            <pubDate>Tue, 04 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;HTML中&amp;lt;，&amp;gt;，&amp;amp;等有特殊含义（&amp;lt;，&amp;gt;，用于链接签，&amp;amp;用于转义），不能直接使用。这些符号是不显示在我们最终看到的网页里的，那如果我们希望在网页中显示这些符号，该怎么办呢？&lt;/p&gt;

&lt;p&gt;这就要说到HTML转义字符串（Escape Sequence）了。 &lt;/p&gt;


&lt;p&gt;　　转义字符（Escape Sequence）也称字符实体(Character Entity)。在HTML中，定义转义字符串的原因有两个：第一个原因是像“&amp;lt;”和“&amp;gt;”这类符号已经用来表示HTML标签，因此就不能直接当作文本中的符号来使用。为了在HTML文档中使用这些符号，就需要定义它的转义字符串。当解释程序遇到这类字符串时就把它解释为真实的字符。在输入转义字符串时，要严&amp;#26684;遵守字母大小写的规则。第二个原因是，有些字符在ASCII字符集中没有定义，因此需要使用转义字符串来表示。
&lt;/p&gt;


&lt;h3&gt;HTML特殊转义字符列表&lt;/h3&gt;

&lt;table width=&quot;580px&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;实体名称&lt;/th&gt;
&lt;th&gt;实体编号&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;半方大的空白&lt;/td&gt;
&lt;td&gt;&amp;amp;ensp;&lt;/td&gt;
&lt;td&gt;&amp;amp;#8194;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;全方大的空白&lt;/td&gt;
&lt;td&gt;&amp;amp;emsp;&lt;/td&gt;
&lt;td&gt;&amp;amp;#8195;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;不断行的空白&amp;#26684;&lt;/td&gt;
&lt;td&gt;&amp;amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;amp;#160;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;&lt;/td&gt;
&lt;td&gt;小于&lt;/td&gt;
&lt;td&gt;&amp;amp;lt;&lt;/td&gt;
&lt;td&gt;&amp;amp;#60;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;大于&lt;/td&gt;
&lt;td&gt;&amp;amp;gt;&lt;/td&gt;
&lt;td&gt;&amp;amp;#62;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;amp;&lt;/td&gt;
&lt;td&gt;&amp;amp;符号&lt;/td&gt;
&lt;td&gt;&amp;amp;amp;&lt;/td&gt;
&lt;td&gt;&amp;amp;#38;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;quot;&lt;/td&gt;
&lt;td&gt;双引号&lt;/td&gt;
&lt;td&gt;&amp;amp;quot;&lt;/td&gt;
&lt;td&gt;&amp;amp;#34;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;©&lt;/td&gt;
&lt;td&gt;版权&lt;/td&gt;
&lt;td&gt;&amp;amp;copy;&lt;/td&gt;
&lt;td&gt;&amp;amp;#169;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;®&lt;/td&gt;
&lt;td&gt;已注册商标&lt;/td&gt;
&lt;td&gt;&amp;amp;reg;&lt;/td&gt;
&lt;td&gt;&amp;amp;#174;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;td&gt;商标（美国）&lt;/td&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;td&gt;&amp;amp;#8482;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;乘号&lt;/td&gt;
&lt;td&gt;&amp;amp;times;&lt;/td&gt;
&lt;td&gt;&amp;amp;#215;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;÷&lt;/td&gt;
&lt;td&gt;除号&lt;/td&gt;
&lt;td&gt;&amp;amp;divide;&lt;/td&gt;
&lt;td&gt;&amp;amp;#247;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;h3&gt;JavaScript转义符&lt;/h3&gt;

&lt;table width=&quot;580px&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th width=&quot;35%&quot;&gt;转义序列&lt;/th&gt;
&lt;th width=&quot;65%&quot;&gt;字符&lt;/th&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;35%&quot;&gt;\b&lt;/td&gt;
&lt;td width=&quot;65%&quot;&gt;退&amp;#26684;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;35%&quot;&gt;\f&lt;/td&gt;
&lt;td width=&quot;65%&quot;&gt;走纸换页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;35%&quot;&gt;\n&lt;/td&gt;
&lt;td width=&quot;65%&quot;&gt;换行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;35%&quot;&gt;\r&lt;/td&gt;
&lt;td width=&quot;65%&quot;&gt;回车&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;35%&quot;&gt;\t&lt;/td&gt;
&lt;td width=&quot;65%&quot;&gt;横向跳&amp;#26684; (Ctrl-I)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;35%&quot;&gt;\'&lt;/td&gt;
&lt;td width=&quot;65%&quot;&gt;单引号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;35%&quot;&gt;\&amp;quot;&lt;/td&gt;
&lt;td width=&quot;65%&quot;&gt;双引号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;35%&quot;&gt;\\&lt;/td&gt;
&lt;td width=&quot;65%&quot;&gt;反斜杠&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/12/04/html-escape-sequence/index.html</link>
            <guid>http://demi-panda.com/2012/12/04/html-escape-sequence/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[衡量创业智商的几个因素 ]]></title>
            <pubDate>Mon, 03 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;我们总提起IQ，EQ，听说过FQ（Founder Quotient）吗？又是哪些因素是考察FQ需要考虑的呢？Charles River Ventrues的Saar Gur给出了一些答案，本文发表于&lt;a href=&quot;http://techcrunch.com/2012/11/17/measure-founder-strength-with-your-founder-quotient/&quot;&gt;TC&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/media/pub/life/pub/founder-quotient-circle.jpg&quot;  width=&quot;300&quot; height=&quot;300&quot; class=&quot;img-right&quot;/&gt;&lt;/p&gt;

&lt;p&gt;在Charles River Venture，我们寻找并去支持一些创业者在某一领域建立起一个公司，以期将来有一天，他们可以影响世界。在过去的四十年里，我们经历了15支基金，70个IPO，以及100+的收购并购，结识了很多有天赋的企业家。我们知道，一个高水平的公司有能力经历一些风浪甚至转型，而掌控这一切的关键在于，创始人。那是真正驱动商业动作的主要因素。&lt;/p&gt;

&lt;p&gt;对于一些风投机构来说也常会犯一些错误，对创业者的误读，对他们这个团队的误读，会让我们丧失一些重要的机会。而一旦我们找到了合适的创业者就要与大家同甘共苦。今年夏天，David Sacks 将Yammer以12亿美元的价格卖给微软。我的同事George Zachary曾投资1000万美元给David之前的公司Geni，不过那个公司并没有得到太好的回报，尽管如此，George还会再向David投资。&lt;/p&gt;

&lt;p&gt;伟大的公司拥有抵御风险的能力，而我们会尽可能的提供帮助，但最终我们还是希望创始人能够自己抗好大旗，在他们的领域独当一面。&lt;/p&gt;

&lt;p&gt;于是，我们花了很多时间来研究和评估创始团队。我们不得不这样做，因为我们投资的大量的资金都交给了那些第一次融资的团队和创始人。我们对他们一无所知，在我们内部，我们称这是在分析他们的FQ（Found Quotient），或者说创业商。FQ是对创始人能力和是否适合这个团队的评估。这跟IQ、EQ挺像的。&lt;/p&gt;

&lt;p&gt;我们评估一个人FQ的方式已经成体系，我可以据此写一本书了。现在，我列一些主要的我们评估FQ时所看中的因素。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1，独特的对产品的思考。&lt;/strong&gt;大多数创业者都是在抄袭。我们想寻找那1%的有着他们独特的创业想法的创始人。举例说，乔布斯为智能手机设定了触屏新标准。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2，心理因素。&lt;/strong&gt;什么驱动一个人前进？他们做好面对创业所带来的逆境和不确定性了吗？他们需要证明什么吗？他们有想成功的意愿强烈吗？他们准备为创业做出什么样的牺牲？这些因素都跟他们的童年有关。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3，可靠性。&lt;/strong&gt;这个公司是否跟创始人的信仰和价值观相同？他们是否足够关心他们现在正面临的问题？他们富有激情吗？&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4，对市场独特的视角。&lt;/strong&gt;他们对所面对的问题是否有独特的认识？对市场时机，公司前景有独特的认识？&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5，智商。&lt;/strong&gt;IQ，EQ，自我意识，信念坚定。创业跟下棋一样，创始人需要考虑到几步之后的走法，对于产品方向，商业决策和人员决策时是一样的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6，价值。&lt;/strong&gt;他们是否诚实？如果他们做的是一个人员密集型的企业，他们是否足够重视员工或者仅仅是以自我为中心。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7，判断力。&lt;/strong&gt;对产品的判断，对雇佣员工的判断等等。他们是否做过什么判断？&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8，经历。&lt;/strong&gt;他们有强大的执行能力吗？有相关工作的10000个小时工作经历吗？&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9，招募新员工的能力。&lt;/strong&gt;包括推销你的愿景，并被人接受，打造一个互补的团队，建立一个人际关系网络，等等。&lt;/p&gt;

&lt;p&gt;你认为在衡量FQ时还应该再考虑哪些因素呢？&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/03/Founder-Quotient/index.html</link>
            <guid>http://demi-panda.com/2012/12/03/Founder-Quotient/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[HTTP协议头部与Keep-Alive模式详解 ]]></title>
            <pubDate>Sun, 02 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;我们知道HTTP协议采用“请求-应答”模式，当使用普通模式，即非KeepAlive模式时，每个请求/应答客户和服务器都要新建一个连接，完成 之后立即断开连接（HTTP协议为无连接的协议）；当使用Keep-Alive模式（又称持久连接、连接重用）时，Keep-Alive功能使客户端到服 务器端的连接持续有效，当出现对服务器的后继请求时，Keep-Alive功能避免了建立或者重新建立连接。
&lt;img src=&quot;http://demi-panda.com/media/pub/java/450px-HTTP_persistent_connection.svg.png&quot; width=&quot;580px&quot;&gt;&lt;/img&gt;
http 1.0中默认是关闭的，需要在http头加入&quot;Connection: Keep-Alive&quot;，才能启用Keep-Alive；http 1.1中默认启用Keep-Alive，如果加入&quot;Connection: close &quot;，才关闭。目前大部分浏览器都是用http1.1协议，也就是说默认都会发起Keep-Alive的连接请求了，所以是否能完成一个完整的Keep- Alive连接就看服务器设置情况。&lt;/p&gt;

&lt;h3&gt;启用Keep-Alive的优点&lt;/h3&gt;

&lt;p&gt;从上面的分析来看，启用Keep-Alive模式肯定更高效，性能更高。因为避免了建立/释放连接的开销。下面是&lt;a href=&quot;http://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt; 上的总结：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;By opening and closing fewer TCP connections, CPU time is saved in routers and hosts (clients, servers, proxies, gateways, tunnels, or caches), and memory used for TCP protocol control blocks can be saved in hosts.&lt;/li&gt;
&lt;li&gt;HTTP requests and responses can be pipelined on a connection. Pipelining allows a client to make multiple requests without waiting for each response, allowing a single TCP connection to be used much more efficiently, with much lower elapsed time.&lt;/li&gt;
&lt;li&gt;Network congestion is reduced by reducing the number of packets caused by TCP opens, and by allowing TCP sufficient time to determine the congestion state of the network.&lt;/li&gt;
&lt;li&gt;Latency on subsequent requests is reduced since there is no time spent in TCPs connection opening handshake.&lt;/li&gt;
&lt;li&gt;HTTP can evolve more gracefully, since errors can be reported without the penalty of closing the TCP connection. Clients using     future versions of HTTP might optimistically try a new feature, but if communicating with an older server, retry with old   semantics after an error is reported.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;FC 2616 （P47）还指出：单用户客户端与任何服务器或代理之间的连接数不应该超过2个。一个代理与其它服务器或代码之间应该使用超过2 * N的活跃并发连接。这是为了提高HTTP响应时间，避免拥塞（冗余的连接并不能代码执行性能的提升）。&lt;/p&gt;

&lt;h3&gt;回到我们的问题（即如何判断消息内容/长度的大小？）&lt;/h3&gt;

&lt;p&gt;Keep-Alive模式，客户端如何判断请求所得到的响应数据已经接收完成（或者说如何知道服务器已经发生完了数据）？我们已经知道 了，Keep-Alive模式发送玩数据HTTP服务器不会自动断开连接，所有不能再使用返回EOF（-1）来判断（当然你一定要这样使用也没有办法，可 以想象那效率是何等的低）！下面我介绍两种来判断方法&lt;/p&gt;

&lt;h4&gt;使用消息首部字段Conent-Length&lt;/h4&gt;

&lt;p&gt;故名思意，Conent-Length表示实体内容长度，客户端（服务器）可以根据这个值来判断数据是否接收完成。但是如果消息中没有Conent-Length，那该如何来判断呢？又在什么情况下会没有Conent-Length呢？请继续往下看&lt;/p&gt;

&lt;h4&gt;使用消息首部字段Transfer-Encoding&lt;/h4&gt;

&lt;p&gt;当客户端向服务器请求一个静态页面或者一张图片时，服务器可以很清楚的知道内容大小，然后通过Content-length消息首部字段告诉客户端 需要接收多少数据。但是如果是动态页面等时，服务器是不可能预先知道内容大小，这时就可以使用Transfer-Encoding：chunk模式来传输 数据了。即如果要一边产生数据，一边发给客户端，服务器就需要使用&quot;Transfer-Encoding: chunked&quot;这样的方式来代替Content-Length。
chunk编码将数据分成一块一块的发生。Chunked编码将使用若干个Chunk串连而成，由一个标明长度为0 的chunk标示结束。每个Chunk分为头部和正文两部分，头部内容指定正文的字符总数（十六进制的数字 ）和数量单位（一般不写），正文部分就是指定长度的实际内容，两部分之间用回车换行(CRLF) 隔开。在最后一个长度为0的Chunk中的内容是称为footer的内容，是一些附加的Header信息（通常可以直接忽略）。&lt;/p&gt;

&lt;pre&gt;
#Chunk编码的格式如下：
Chunked-Body = *chunk 
                &quot;0&quot; CRLF 
                footer 
                CRLF  
chunk = chunk-size [ chunk-ext ] CRLF 
            chunk-data CRLF
hex-no-zero = &lt;HEX excluding &quot;0&quot;&gt;
chunk-size = hex-no-zero *HEX 
chunk-ext = *( &quot;;&quot; chunk-ext-name [ &quot;=&quot; chunk-ext-value ] ) 
chunk-ext-name = token 
chunk-ext-val = token | quoted-string 
chunk-data = chunk-size(OCTET)
footer = *entity-header
&lt;/pre&gt;


&lt;p&gt;即Chunk编码由四部分组成：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;0至多个chunk块 &lt;/li&gt;
&lt;li&gt;&quot;0&quot; CRLF &lt;/li&gt;
&lt;li&gt;footer &lt;/li&gt;
&lt;li&gt;CRLF . 而每个chunk块由：chunk-size、chunk-ext（可选）、CRLF、chunk-data、CRLF组成。&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;消息长度的总结&lt;/h3&gt;

&lt;p&gt;其实，上面2中方法都可以归纳为是如何判断http消息的大小、消息的数量。RFC 2616 对 消息的长度总结如下：一个消息的transfer-length（传输长度）是指消息中的message-body（消息体）的长度。当应用了 transfer-coding（传输编码），每个消息中的message-body（消息体）的长度（transfer-length）由以下几种情况 决定（优先级由高到低）：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;任何不含有消息体的消息（如1XXX、204、304等响应消息和任何头(HEAD，首部)请求的响应消息），总是由一个空行（CLRF）结束。&lt;/li&gt;
&lt;li&gt;如果出现了Transfer-Encoding头字段 并且值为非“identity”，那么transfer-length由“chunked” 传输编码定义，除非消息由于关闭连接而终止。&lt;/li&gt;
&lt;li&gt;如果出现了Content-Length头字段，它的值表示entity-length（实体长度）和transfer-length（传输长 度）。如果这两个长度的大小不一样（i.e.设置了Transfer-Encoding头字段），那么将不能发送Content-Length头字段。并 且如果同时收到了Transfer-Encoding字段和Content-Length头字段，那么必须忽略Content-Length字段。&lt;/li&gt;
&lt;li&gt;如果消息使用媒体类型“multipart/byteranges”，并且transfer-length 没有另外指定，那么这种自定界（self-delimiting）媒体类型定义transfer-length 。除非发送者知道接收者能够解析该类型，否则不能使用该类型。&lt;/li&gt;
&lt;li&gt;由服务器关闭连接确定消息长度。（注意：关闭连接不能用于确定请求消息的结束，因为服务器不能再发响应消息给客户端了。）&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;为了兼容HTTP/1.0应用程序，HTTP/1.1的请求消息体中必须包含一个合法的Content-Length头字段，除非知道服务器兼容 HTTP/1.1。一个请求包含消息体，并且Content-Length字段没有给定，如果不能判断消息的长度，服务器应该用用400 (bad request) 来响应；或者服务器坚持希望收到一个合法的Content-Length字段，用 411 (length required)来响应。&lt;/p&gt;

&lt;p&gt;所有HTTP/1.1的接收者应用程序必须接受“chunked” transfer-coding (传输编码)，因此当不能事先知道消息的长度，允许使用这种机制来传输消息。消息不应该够同时包含 Content-Length头字段和non-identity transfer-coding。如果一个消息同时包含non-identity transfer-coding和Content-Length ，必须忽略Content-Length 。&lt;/p&gt;

&lt;h3&gt;HTTP头字段总结&lt;/h3&gt;

&lt;p&gt;最后我总结下HTTP协议的头部字段:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Accept：告诉WEB服务器自己接受什么介质类型，*/* 表示任何类型，type/* 表示该类型下的所有子类型，type/sub-type。&lt;/li&gt;
&lt;li&gt;Accept-Charset： 浏览器申明自己接收的字符集 
Accept-Encoding： 浏览器申明自己接收的编码方法，通常指定压缩方法，是否支持压缩，支持什么压缩方法（gzip，deflate） 
Accept-Language：浏览器申明自己接收的语言 语言跟字符集的区别：中文是语言，中文有多种字符集，比如big5，gb2312，gbk等等。&lt;/li&gt;
&lt;li&gt;Accept-Ranges：WEB服务器表明自己是否接受获取其某个实体的一部分（比如文件的一部分）的请求。bytes：表示接受，none：表示不接受。&lt;/li&gt;
&lt;li&gt; Age：当代理服务器用自己缓存的实体去响应请求时，用该头部表明该实体从产生到现在经过多长时间了。&lt;/li&gt;
&lt;li&gt; Authorization：当客户端接收到来自WEB服务器的 WWW-Authenticate 响应时，用该头部来回应自己的身份验证信息给WEB服务器。&lt;/li&gt;
&lt;li&gt;Cache-Control：请求：no-cache（不要缓存的实体，要求现在从WEB服务器去取） 
max-age：（只接受 Age 值小于 max-age 值，并且没有过期的对象） 
max-stale：（可以接受过去的对象，但是过期时间必须小于 max-stale 值） 
min-fresh：（接受其新鲜生命期大于其当前 Age 跟 min-fresh 值之和的缓存对象） 
响应：public(可以用 Cached 内容回应任何用户) 
private（只能用缓存内容回应先前请求该内容的那个用户） 
no-cache（可以缓存，但是只有在跟WEB服务器验证了其有效后，才能返回给客户端） 
max-age：（本响应包含的对象的过期时间） 
ALL: no-store（不允许缓存）
&lt;/li&gt;
&lt;li&gt;Connection：请求：close（告诉WEB服务器或者代理服务器，在完成本次请求的响应后，断开连接，不要等待本次连接的后续请求了）。 
keepalive（告诉WEB服务器或者代理服务器，在完成本次请求的响应后，保持连接，等待本次连接的后续请求）。 
响应：close（连接已经关闭）。 
keepalive（连接保持着，在等待本次连接的后续请求）。 
Keep-Alive：如果浏览器请求保持连接，则该头部表明希望 WEB 服务器保持连接多长时间（秒）。例如：Keep-Alive：300
&lt;/li&gt;
&lt;li&gt;Content-Encoding：WEB服务器表明自己使用了什么压缩方法（gzip，deflate）压缩响应中的对象。例如：Content-Encoding：gzip&lt;/li&gt;
&lt;li&gt;Content-Language：WEB 服务器告诉浏览器自己响应的对象的语言。&lt;/li&gt;
&lt;li&gt;Content-Length： WEB 服务器告诉浏览器自己响应的对象的长度。例如：Content-Length: 26012&lt;/li&gt;
&lt;li&gt;Content-Range： WEB 服务器表明该响应包含的部分对象为整个对象的哪个部分。例如：Content-Range: bytes 21010-47021/47022&lt;/li&gt;
&lt;li&gt;Content-Type： WEB 服务器告诉浏览器自己响应的对象的类型。例如：Content-Type：application/xml&lt;/li&gt;
&lt;li&gt;ETag：就是一个对象（比如URL）的标志值，就一个对象而言，比如一个 html 文件，如果被修改了，其 Etag 也会别修改，所以ETag 的作用跟 Last-Modified 的作用差不多，主要供 WEB 服务器判断一个对象是否改变了。比如前一次请求某个 html 文件时，获得了其 ETag，当这次又请求这个文件时，浏览器就会把先前获得的 ETag 值发送给WEB 服务器，然后 WEB 服务器会把这个 ETag 跟该文件的当前 ETag 进行对比，然后就知道这个文件有没有改变了。&lt;/li&gt;
&lt;li&gt; Expired：WEB服务器表明该实体将在什么时候过期，对于过期了的对象，只有在跟WEB服务器验证了其有效性后，才能用来响应客户请求。是 HTTP/1.0 的头部。例如：Expires：Sat, 23 May 2009 10:02:12 GMT&lt;/li&gt;
&lt;li&gt; Host：客户端指定自己想访问的WEB服务器的域名/IP 地址和端口号。例如：Host：rss.sina.com.cn&lt;/li&gt;
&lt;li&gt;If-Match：如果对象的 ETag 没有改变，其实也就意味著对象没有改变，才执行请求的动作。&lt;/li&gt;
&lt;li&gt;If-None-Match：如果对象的 ETag 改变了，其实也就意味著对象也改变了，才执行请求的动作。&lt;/li&gt;
&lt;li&gt;If-Modified-Since：如果请求的对象在该头部指定的时间之后修改了，才执行请求的动作（比如返回对象），否则返回代码304，告诉浏览器 该对象没有修改。例如：If-Modified-Since：Thu, 10 Apr 2008 09:14:42 GMT&lt;/li&gt;
&lt;li&gt;If-Unmodified-Since：如果请求的对象在该头部指定的时间之后没修改过，才执行请求的动作（比如返回对象）。&lt;/li&gt;
&lt;li&gt;If-Range：浏览器告诉 WEB 服务器，如果我请求的对象没有改变，就把我缺少的部分给我，如果对象改变了，就把整个对象给我。浏览器通过发送请求对象的 ETag 或者 自己所知道的最后修改时间给 WEB 服务器，让其判断对象是否改变了。总是跟 Range 头部一起使用。&lt;/li&gt;
&lt;li&gt;Last-Modified：WEB 服务器认为对象的最后修改时间，比如文件的最后修改时间，动态页面的最后产生时间等等。例如：Last-Modified：Tue, 06 May 2008 02:42:43 GMT&lt;/li&gt;
&lt;li&gt;Location：WEB 服务器告诉浏览器，试图访问的对象已经被移到别的位置了，到该头部指定的位置去取。例如：Location：http://i0.sinaimg.cn/dy/deco/2008/0528/sinahome_0803_ws_005_text_0.gif&lt;/li&gt;
&lt;li&gt;Pramga：主要使用 Pramga: no-cache，相当于 Cache-Control： no-cache。例如：Pragma：no-cache&lt;/li&gt;
&lt;li&gt;Proxy-Authenticate： 代理服务器响应浏览器，要求其提供代理身份验证信息。Proxy-Authorization：浏览器响应代理服务器的身份验证请求，提供自己的身份信息。&lt;/li&gt;
&lt;li&gt;Range：浏览器（比如 Flashget 多线程下载时）告诉 WEB 服务器自己想取对象的哪部分。例如：Range: bytes=1173546-&lt;/li&gt;
&lt;li&gt;Referer：浏览器向 WEB 服务器表明自己是从哪个 网页/URL 获得/点击 当前请求中的网址/URL。例如：Referer：http://www.sina.com/&lt;/li&gt;
&lt;li&gt;Server: WEB 服务器表明自己是什么软件及版本等信息。例如：Server：Apache/2.0.61 (Unix)&lt;/li&gt;
&lt;li&gt;User-Agent: 浏览器表明自己的身份（是哪种浏览器）。例如：User-Agent：Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.8.1.14) Gecko/20080404 Firefox/2、0、0、14&lt;/li&gt;
&lt;li&gt;Transfer-Encoding: WEB 服务器表明自己对本响应消息体（不是消息体里面的对象）作了怎样的编码，比如是否分块（chunked）。例如：Transfer-Encoding: chunked&lt;/li&gt;
&lt;li&gt;Vary: WEB服务器用该头部的内容告诉 Cache 服务器，在什么条件下才能用本响应所返回的对象响应后续的请求。假如源WEB服务器在接到第一个请求消息时，其响应消息的头部为：Content- Encoding: gzip; Vary: Content-Encoding那么 Cache 服务器会分析后续请求消息的头部，检查其 Accept-Encoding，是否跟先前响应的 Vary 头部值一致，即是否使用相同的内容编码方法，这样就可以防止 Cache 服务器用自己 Cache 里面压缩后的实体响应给不具备解压能力的浏览器。例如：Vary：Accept-Encoding&lt;/li&gt;
&lt;li&gt;Via： 列出从客户端到 OCS 或者相反方向的响应经过了哪些代理服务器，他们用什么协议（和版本）发送的请求。当客户端请求到达第一个代理服务器时，该服务器会在自己发出的请求里面添 加 Via 头部，并填上自己的相关信息，当下一个代理服务器收到第一个代理服务器的请求时，会在自己发出的请求里面复制前一个代理服务器的请求的Via 头部，并把自己的相关信息加到后面，以此类推，当 OCS 收到最后一个代理服务器的请求时，检查 Via 头部，就知道该请求所经过的路由。例如：Via：1.0 236.D0707195.sina.com.cn:80 (squid/2.6.STABLE13)&lt;/li&gt;
&lt;/ol&gt;


&lt;pre id=&quot;bash&quot;&gt;
HTTP 请求消息头部实例： 
Host：rss.sina.com.cn 
User-Agent：Mozilla/5、0 (Windows; U; Windows NT 5、1; zh-CN; rv:1、8、1、14) Gecko/20080404 Firefox/2、0、0、14 
Accept：text/xml,application/xml,application/xhtml+xml,text/html;q=0、9,text/plain;q=0、8,image/png,*/*;q=0、5 
Accept-Language：zh-cn,zh;q=0、5 
Accept-Encoding：gzip,deflate 
Accept-Charset：gb2312,utf-8;q=0、7,*;q=0、7 
Keep-Alive：300 
Connection：keep-alive 
Cookie：userId=C5bYpXrimdmsiQmsBPnE1Vn8ZQmdWSm3WRlEB3vRwTnRtW &amp;lt;-- Cookie 
If-Modified-Since：Sun, 01 Jun 2008 12:05:30 GMT 
Cache-Control：max-age=0 
HTTP 响应消息头部实例： 
Status：OK - 200 &amp;lt;-- 响应状态码，表示 web 服务器处理的结果。 
Date：Sun, 01 Jun 2008 12:35:47 GMT 
Server：Apache/2、0、61 (Unix) 
Last-Modified：Sun, 01 Jun 2008 12:35:30 GMT 
Accept-Ranges：bytes 
Content-Length：18616 
Cache-Control：max-age=120 
Expires：Sun, 01 Jun 2008 12:37:47 GMT 
Content-Type：application/xml 
Age：2 
X-Cache：HIT from 236-41、D07071951、sina、com、cn &amp;lt;-- 反向代理服务器使用的 HTTP 头部 
Via：1.0 236-41.D07071951.sina.com.cn:80 (squid/2.6.STABLE13) 
Connection：close
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/12/02/keep-alive/index.html</link>
            <guid>http://demi-panda.com/2012/12/02/keep-alive/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[负载均衡工具haproxy安装，配置，使用 ]]></title>
            <pubDate>Sat, 01 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;HAProxy提供高可用性、负载均衡以及基于TCP和HTTP应用的代 理，支持虚拟主机
，它是免费、快速并且可靠的一种解决方案。HAProxy特别适用于那些负载特大的web站点，这些站点通常又需要会话保持或七层处理。 HAProxy运行在当前的硬件上，完全可以支持数以万计的并发连接。并且它的运行模式使得它可以很简单安全的整合进您当前的架构中， 同时可以保护你的web服务器不被暴露到网络上。&lt;/p&gt;

&lt;h3&gt;安装haproxy&lt;/h3&gt;

&lt;p&gt;下载列表地址:&lt;a rel=&quot;nofollow&quot; href=&quot;http://haproxy.1wt.eu&quot;&gt;http://haproxy.1wt.eu&lt;/a&gt;&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ wget http://haproxy.1wt.eu/download/1.4/src/haproxy-1.4.8.tar.gz
$ tar zxvf haproxy-1.4.8.tar.gz
$ cd haproxy-1.4.8
$ uname -a           //查看linux内核版本
$ make TARGET=linux26 PREFIX=/usr/local/haproxy
$ make install PREFIX=/usr/local/haproxy
&lt;/pre&gt;


&lt;h3&gt;配置haproxy&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ vi /usr/local/haproxy/haproxy.cfg
#####################################
# HAProxy 配置文件
#####################################

global
# 使用系统的syslog记录日志（通过udp，默认端口号为514）
log 127.0.0.1 local0 # info [err warning info debug]
chroot /opt/haproxy-1.3.25

#限制单个进程的最大连接数
maxconn 65535

# 让进程在后台运行，即作为守护进程运行，正式运行的时候开启，此处先禁止，等同于在命令行添加参数 -D
# daemon
# 指定作为守护进程运行的时候，要创建多少个进程，默认只创建一个，需要daemon开启模式
# nbproc 1

# 设置debug模式运行，与daemon模式只能互斥，等同于在命令行添加参数 -d
# debug
pidfile /opt/haproxy-1.3.25/haproxy.pid    # not work

defaults
# 在连接失败或断开的情况下，允许当前会话被重新分发
option redispatch
# 设置在一个服务器上链接失败后的重连次数
retries 2
# 设置服务器分配算法
balance roundrobin

# 不记录空连接
option dontlognull

# 设置等待连接到服务器成功的最大时间
timeout connect 5000ms
# 设置客户端的最大超时时间
timeout client 1800000ms
# 设置服务器端的最大超时时间
timeout server 1800000ms

# Enable the sending of TCP keepalive packets on both sides, clients and servers
# NOTE: 在服务器CPU强劲的情况下，最好不要开启保活，这样可减少资源消耗
#option tcpka

##################################
###  统计页面配置
##################################

listen admin_stat
# 监听端口
bind *:8011
# http的7层模式
mode http
option httplog
log global
# 统计页面自动刷新时间
stats refresh 30s
# 统计页面URL
stats uri /admin?stats
# 统计页面密码框上提示文本
stats realm Haproxy\ Statistics
# 统计页面用户名和密码设置
stats auth yoyoadm:yoyoadm
# 隐藏统计页面上HAProxy的版本信息
stats hide-version


################################
### HTTP连接的监听配置
################################

listen  http-in
bind *:80
mode http
option httplog
log global


# insert: to create a new cookie and assign the server identifier to it
# indirect: remove the cookie for direct accesses
# nocache: ensure that no upstream cache will store it
#cookie SERVERID insert indirect nocache
#cookie JSESSIONID prefix
#appsession JSESSIONID len 32 timeout 86400000

# force connection:close, thus disabling HTTP keep-alive  
#option httpclose


# 设置健康检查模式
#option httpchk OPTIONS * HTTP/1.1\r\nHost:\ web
#option smtpchk

# 后台服务器
#server ssweb1 172.16.205.188:8080 cookie yoyo_app_1 weight 3 check inter 2000 rise 2 fall 3
#server ssweb2 172.16.205.189:8080 cookie yoyo_app_2 weight 3 check inter 2000 rise 2 fall 3
server ssweb1 172.16.205.188:8080 weight 3 check inter 2000 rise 2 fall 3
server ssweb2 172.16.205.189:8080 weight 3 check inter 2000 rise 2 fall 3                        
&lt;/pre&gt;


&lt;h3&gt;启动haproxy&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
#启动haproxy
$ /usr/local/haproxy/haproxy -f /usr/local/haproxy/haproxy.cfg
#查看是否启动
$ haproxy]$ ps -e|grep haproxy
&lt;/pre&gt;


&lt;h3&gt;压力测试&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ /usr/local/bin/webbench -c 100 -t 30 http://localhost:1080/phpinfo.php
webbench – Simple web Benchmark 1.5
Copyright (c) Radim Kolar 1997-2004, GPL Open Source Software.
Benchmarking: GET http://localhost:1080/phpinfo.php
100 clients, running 30 sec.
Speed=26508 pages/min, 20929384 bytes/sec.
Requests: 13254 susceed, 0 failed.
&lt;/pre&gt;


&lt;p&gt;说明：haproxy监听的端口是1080，代理192.168.18.2:10000，127.0.0.1:10000
统计监听的是8888端口 http://localhost:8888/haproxy-stats&lt;/p&gt;

&lt;h3&gt;监控页面&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/media/pub/web/haproxy-300x76.jpg&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h3&gt;配置说明&lt;/h3&gt;

&lt;p&gt;1.4系列参考配置文件
&lt;a rel=&quot;nofollow&quot; href=&quot;http://haproxy.1wt.eu/download/1.4/doc/configuration.txt&quot;&gt;http://haproxy.1wt.eu/download/1.4/doc/configuration.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1.3系列参考配置文件
&lt;a rel=&quot;nofollow&quot; href=&quot;http://haproxy.1wt.eu/download/1.3/doc/configuration.txt&quot;&gt;http://haproxy.1wt.eu/download/1.3/doc/configuration.txt&lt;/a&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/01/web-haproxy/index.html</link>
            <guid>http://demi-panda.com/2012/12/01/web-haproxy/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Piwik 网站分析系统 ]]></title>
            <pubDate>Sat, 01 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;http://piwik.org/&quot;&gt;开源网站分析工具&lt;/a&gt;Piwik是一套基于Php+MySQL技术构建的开源网站访问统计系统，前身是phpMyVisites。Piwik可以给你详细的统计信息，比 如网页 浏览人数, 访问最多的页面, 搜索引擎关键词等等，并且采用了大量的AJAX/Flash技术，使得在操作上更加便易。此外，它还采用了插件扩展及开放API架构，可以让开发人员根据 自已的实际需求创建更多的功能．它最大的特点便是容许用户将这款网站分析工具安装在自己的服务器上，使用者独立拥有自己的统计数据，而不是寄存在服务商那里，这样就可以更灵活的使用统计数据，不用担心数据丢失问题， 数据安全，反应速度都比谷歌分析好。这就是Piwik自称为实时网站分析工具的原因，不行谷歌分析至少需要几个小时才能反应此时的数据。 安装完成之后会有一段Js代码，将这段代码贴至Body标签内即可实现对相应页面的跟踪。 Piwik官方网站介绍它是通过GPL认证的开源、实时的web统计程序软件。详细的统计报告包括网站访问者、用户使用的搜索引擎关键词、用户使用的语言、浏览次数最多的热门页面统计排列等等，Piwik和Google analytics已成为网站管理员的不二之选。&lt;/p&gt;

&lt;p&gt;Piwik目标是成为一个开源替代谷歌分析。Piwik用户 可以建立内部插件：您可以添加新的功能和删除那些你不需要。如果你是一个开发商，你可以轻松地建立自己的插件！&lt;/p&gt;

&lt;p&gt;您拥有您的数据：因为Piwik是安装在您的服务器，数据储存在自己的数据库，你可以得到所有的统计数据采用开放的API (发布的数据在许多格式： XML的， json ， PHP中， csv格式)&lt;/p&gt;

&lt;p&gt;Piwik的用户界面中主要有：控制台，访客，进站活动，推介网站和目标。支持的语言有好几十种，其中包括中文。
Piwik的常用组件包括：访客，SEO，访客概述等&lt;/p&gt;

&lt;h3&gt;Piwik特点与优势&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Piwik特点之一是其内置插件，用户可以非常方便的安装或者卸载相关功能的插件，在后台可以设置。同时开发人员可以自主定制插件；
&lt;/li&gt;
&lt;li&gt;
所有数据都存储在服务器端，统计数据可以通过open APIs以xml, json, php, csv等格式展示；
&lt;/li&gt;
&lt;li&gt;
用户界面完全自主定制，可以将最重要的数据窗口放置在最易观察的位置，完全凭个人习惯和喜好；
&lt;/li&gt;
&lt;li&gt;
实时web分析报告，默认情况下Piwik报告实时生成，对于大流量的站点，可以自主设置报告生成频率。
&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;如果各位网站分析爱好者们想体验一下这款开源分析工具，你可以去PIWIK官方网站使用一下它的DEMO。
http://demo.piwik.org/index.php?module=CoreHome&amp;amp;action=index&amp;amp;idSite=7&amp;amp;period=day&amp;amp;date=yesterday&lt;/p&gt;

&lt;p&gt;Piwik的官方网站为：http://piwik.org/&lt;/p&gt;

&lt;h3&gt;Piwik安装&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;保证你的PHP和MYSQL可以正常运行。&lt;/li&gt;
&lt;li&gt;下载Piwik安装包。&lt;/li&gt;
&lt;li&gt;下载pdo_mysql包，http://pecl.php.net/get/PDO_MYSQL-1.0.2.tgz ，如果你已安装了pdo_mysql ，跳过此步。&lt;/li&gt;
&lt;li&gt;将Piwik上传至你的服务器，将以下目录权限改为0777&lt;/li&gt;
&lt;/ol&gt;


&lt;pre id=&quot;bash&quot;&gt;
/usr/web/piwik/config 
/usr/web/piwik/tmp 
/usr/web/piwik/tmp/templates_c 
/usr/web/piwik/tmp/cache 
/usr/web/piwik/tmp/latest 
/usr/web/piwik/tmp/assets
&lt;/pre&gt;


&lt;p&gt;&lt;li&gt;打开http://你的服务器地址/Piwik，进入安装向导&lt;/li&gt;
&lt;li&gt;到这里如有以下错误提示则安装pdo_mysql&lt;/li&gt;
&lt;/ol&gt;
Piwik requires either the mysqli extension or both the PDO and pdo_mysql extensions.
On a Linux server you can compile php with the following options:&lt;/p&gt;

&lt;pre&gt;
--with-mysqli 
--with-pdo-mysql 
&lt;/pre&gt;


&lt;p&gt;In your php.ini, add the following lines:&lt;/p&gt;

&lt;pre&gt;
extension=mysqli.so 
extension=pdo.so 
extension=pdo_mysql.so 
&lt;/pre&gt;


&lt;p&gt;More information on: PHP PDO and MYSQLI .&lt;/p&gt;

&lt;pre&gt;
tar zxvf PDO_MYSQL-1.0.2.tgz
cd PDO_MYSQL-1.0.2
$ /usr/local/php-fcgi/bin/phpize
./configure --with-php-config=/usr/local/php/bin/php-config  --with-pdo-mysql=/usr/local/mysql --with-mysqli=/usr/local/mysql/bin/mysql_config
make &amp;&amp; make install
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/12/01/piwik/index.html</link>
            <guid>http://demi-panda.com/2012/12/01/piwik/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Linux wget 详解 ]]></title>
            <pubDate>Sat, 01 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;Wget是一个十分常用命令行下载工具，多数Linux发行版本都默认包含这个工具。如果没有安装可在&lt;a href=&quot;http: //www.gnu.org/software/wget/wget.html&quot;&gt; http: //www.gnu.org/software/wget/wget.html&lt;/a&gt; 下载最新版本.&lt;/p&gt;

&lt;h3&gt;安装&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ tar zxvf wget-1.9.1.tar.gz 
$ cd wget-1.9.1 
$ ./configure 
$ make 
$ make install 
&lt;/pre&gt;


&lt;h3&gt;使用方法&lt;/h3&gt;

&lt;p&gt;wget虽然功能强大，但是使用起来还是比较简单的，基本的语法是：wget [参数列表] URL&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;支持断点下传功能；这一点，也是网络蚂蚁和FlashGet当年最大的卖点，现在，Wget也可以使用此功能，那些网络不是太好的用户可以放心了；&lt;/li&gt;
&lt;li&gt;同时支持FTP和HTTP下载方式；尽管现在大部分软件可以使用HTTP方式下载，但是，有些时候，仍然需要使用FTP方式下载软件；&lt;/li&gt;
&lt;li&gt;支持代理服务器；对安全强度很高的系统而言，一般不会将自己的系统直接暴露在互联网上，所以，支持代理是下载软件必须有的功能；&lt;/li&gt;
&lt;li&gt;设置方便简单；可能，习惯图形界面的用户已经不是太习惯命令行了，但是，命令行在设置上其实有更多的优点，最少，鼠标可以少点很多次，也不要担心是否错点鼠标；&lt;/li&gt;
&lt;li&gt;程序小，完全免费；程序小可以考虑不计，因为现在的硬盘实在太大了；完全免费就不得不考虑了，即使网络上有很多所谓的免费软件，但是，这些软件的广告却不是我们喜欢的；&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;示例&lt;/h3&gt;

&lt;h4&gt;下载整个http或者ftp站点&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ wget http://place.your.url/here
&lt;/pre&gt;


&lt;p&gt;这个命令可以将http://place.your.url/here 首页下载下来。使用-x会强制建立服务器上一模一样的目录，如果使用-nd参数，那么服务器上下载的所有内容都会加到本地当前目录。&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ wget -r http://place.your.url/here
&lt;/pre&gt;


&lt;p&gt;这个命令会按照递归的方法，下载服务器上所有的目录和文件，实质就是下载整个网站。这个命令一定要小心使用，因为在下载的时候，被下载网站指向的所有地址 同样会被下载，因此，如果这个网站引用了其他网站，那么被引用的网站也会被下载下来！基于这个原因，这个参数不常用。可以用-l number参数来指定下载的层次。例如只下载两层，那么使用-l 2。&lt;/p&gt;

&lt;p&gt;要是您想制作镜像站点，那么可以使用－m参数，例如：wget -m http://place.your.url/here
这时wget会自动判断合适的参数来制作镜像站点。此时，wget会登录到服务器上，读入robots.txt并按robots.txt的规定来执行。&lt;/p&gt;

&lt;h3&gt;断点续传&lt;/h3&gt;

&lt;p&gt;当文件特别大或者网络特别慢的时候，往往一个文件还没有下载完，连接就已经被切断，此时就需要断点续传。wget的断点续传是自动的，只需要使用-c参数，例如：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ wget -c http://the.url.of/incomplete/file
&lt;/pre&gt;


&lt;p&gt;使用断点续传要求服务器支持断点续传。-t参数表示重试次数，例如需要重试100次，那么就写-t 100，如果设成-t 0，那么表示无穷次重试，直到连接成功。-T参数表示超时等待时间，例如-T 120，表示等待120秒连接不上就算超时&lt;/p&gt;

&lt;h3&gt;批量下载&lt;/h3&gt;

&lt;p&gt;如果有多个文件需要下载，那么可以生成一个文件，把每个文件的URL写一行，例如生成文件download.txt，然后用命令：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ wget -i download.txt
&lt;/pre&gt;


&lt;p&gt;这样就会把download.txt里面列出的每个URL都下载下来。（如果列的是文件就下载文件，如果列的是网站，那么下载首页）&lt;/p&gt;

&lt;h3&gt;选择性的下载&lt;/h3&gt;

&lt;p&gt;可以指定让wget只下载一类文件，或者不下载什么文件。例如：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ wget -m –reject=gif http://target.web.site/subdirectory$ 
&lt;/pre&gt;


&lt;p&gt;表示下载http://target.web.site/subdirectory，但是忽略gif文件。–accept=LIST 可以接受的文件类型，–reject=LIST拒绝接受的文件类型。&lt;/p&gt;

&lt;h3&gt;密码和认证&lt;/h3&gt;

&lt;p&gt;wget只能处理利用用户名/密码方式限制访问的网站，可以利用两个参数：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
–http-user=USER设置HTTP用户
–http-passwd=PASS设置HTTP密码
&lt;/pre&gt;


&lt;p&gt;对于需要证书做认证的网站，就只能利用其他下载工具了，例如curl。&lt;/p&gt;

&lt;h3&gt;利用代理服务器进行下载。&lt;/h3&gt;

&lt;p&gt;如果用户的网络需要经过代理服务器，那么可以让wget通过代理服务器进行文件的下载。此时需要在当前用户的目录下创建一个.wgetrc文件。文件中可以设置代理服务器：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
http-proxy = 111.111.111.111:8080
ftp-proxy = 111.111.111.111:8080
&lt;/pre&gt;


&lt;p&gt;分别表示http的代理服务器和ftp的代理服务器。如果代理服务器需要密码则使用：&lt;/p&gt;

&lt;pre&gt;
–proxy-user=USER设置代理用户
–proxy-passwd=PASS设置代理密码
&lt;/pre&gt;


&lt;p&gt;这两个参数。
使用参数–proxy=on/off 使用或者关闭代理。
wget还有很多有用的功能，需要用户去挖掘。&lt;/p&gt;

&lt;h3&gt;可根据需要选择用下面的参数：&lt;/h3&gt;

&lt;pre&gt;
$ wget -c -r -nd -np -k -L -p -A c,h www.xxx.org/pub/path/
&lt;/pre&gt;


&lt;p&gt;-c   断点续传
-r   递归下载，下载指定网页某一目录下（包括子目录）的所有文件
-nd 递归下载时不创建一层一层的目录，把所有的文件下载到当前目录
-np 递归下载时不搜索上层目录，如wget -c -r www.xxx.org/pub/path/
没有加参数-np，就会同时下载path的上一级目录pub下的其它文件
-k   将绝对链接转为相对链接，下载整个站点后脱机浏览网页，最好加上这个参数
-L   递归时不进入其它主机，如wget -c -r www.xxx.org/ 如果网站内有一个这样的链接：
www.yyy.org，不加参数-L，就会像大火烧山一样，会递归下载www.yyy.org网站
-p   下载网页所需的所有文件，如图片等
-A   指定要下载的文件样式列表，多个样式用逗号分隔
-i   后面跟一个文件，文件内指明要下载的URL&lt;/p&gt;

&lt;h3&gt;附录&lt;/h3&gt;

&lt;h4&gt;命令格式&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
wget [参数列表] [目标软件、网页的网址]
-V 版本信息
-h 帮助信息
-b 后台执行Wget
-o filename 把记录放在文件filename
-a filename 把记录附加在文件filename
-d 显示调试信息
-q 无输出下载方式
-v 详细的屏幕输出（默认）
-nv 简单的屏幕输出
-i inputfiles 从文本文件内读取地址列表
-F forcehtml 从html文件内读取地址列表
-t number number次重试下载(0时为无限次)
-O output document file 写文件到文件
-nc 不覆盖已有的文件
-c 断点下传
-N 时间时间戳。该参数指定wget只下载更新的文件，也就是说，与本地目录中的对应文件的长度和最后修改日期一样的文件将不被下载。
-S 显示服务器响应
-T timeout 超时时间设置(单位秒)
-w time 重试延时(单位秒)
-Y proxy=on/off 是否打开代理
-Q quota=number 重试次数
&lt;/pre&gt;


&lt;h3&gt;目录:&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
-nd –no-directories 不建立目录.
-x, –force-directories 强制进行目录建立的工作.
-nH, –no-host-directories 不建立主机的目录.
-P, –directory-prefix=PREFIX 把档案存到 PREFIX/…
–cut-dirs=NUMBER 忽略 NUMBER 个远端的目录元件.
&lt;/pre&gt;


&lt;h3&gt;HTTP 选项&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
–http-user=USER 设 http 使用者为 USER.
–http0passwd=PASS 设 http 使用者的密码为 PASS.
-C, –cache=on/off 提供/关闭快取伺服器资料 (正常情况为提供).
–ignore-length 忽略 `Content-Length’ 标头栏位.
–proxy-user=USER 设 USER 为 Proxy 使用者名称.
–proxy-passwd=PASS 设 PASS 为 Proxy 密码.
-s, –save-headers 储存 HTTP 标头成为档案.
-U, –user-agent=AGENT 使用 AGENT 取代 Wget/VERSION 作为识别代号.
&lt;/pre&gt;


&lt;h3&gt;FTP 选项&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
–retr-symlinks 取回 FTP 的象徵连结.
-g, –glob=on/off turn file name globbing on ot off.
–passive-ftp 使用 “passive” 传输模式.
&lt;/pre&gt;


&lt;h3&gt;使用递回方式的取回&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
-r, –recursive 像是吸入 web 的取回 — 请小心使用!.
-l, –level=NUMBER 递回层次的最大值 (0 不限制).
–delete-after 删除下载完毕的档案.
-k, –convert-links 改变没有关连的连结成为有关连.
-m, –mirror 开启适合用来映射的选项.
-nr, –dont-remove-listing 不要移除 `.listing’ 档.
&lt;/pre&gt;


&lt;h3&gt;递回式作业的允许与拒绝选项:&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
-A, –accept=LIST 允许的扩充项目的列表
. -R, –reject=LIST 拒绝的扩充项目的列表.
-D, –domains=LIST 允许的网域列表.
–exclude-domains=LIST 拒绝的网域列表 (使用逗号来分隔).
-L, –relative 只跟随关联连结前进.
–follow-ftp 跟随 HTML 文件里面的 FTP 连结.
-H, –span-hosts 当开始递回时便到外面的主机.
-I, –include-directories=LIST 允许的目录列表.
-X, –exclude-directories=LIST 排除的目录列表.
-nh, –no-host-lookup 不透过 DNS 查寻主机.
-np, –no-parent 不追朔到起源目录.
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/12/01/linux-wget/index.html</link>
            <guid>http://demi-panda.com/2012/12/01/linux-wget/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[jQuery插件-Lazy Load延迟加载图片 ]]></title>
            <pubDate>Sat, 01 Dec 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;Lazy Load 是一个用 JavaScript 编写的 jQuery 插件. 它可以延迟加载长页面中的图片. 在浏览器可视区域外的图片不会被载入, 直到用户将页面滚动到它们所在的位置. 这与图片预加载的处理方式正好是相反的.&lt;/p&gt;

&lt;p&gt;在包含很多大图片长页面中延迟加载图片可以加快页面加载速度. 浏览器将会在加载可见图片之后即进入就绪状态. 在某些情况下还可以帮助降低服务器负担.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/media/pub/web/jquery-lazy-load-plugin.png&quot; width=&quot;580px&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;p&gt;Lazy Load 灵感来自 Matt Mlinac 制作的 &lt;a href=&quot;http://developer.yahoo.com/yui/imageloader/&quot;&gt;YUI ImageLoader&lt;/a&gt; 工具箱. 这是&lt;a href=&quot;http://www.appelsiini.net/projects/lazyload/enabled.html&quot;&gt;演示页面&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
这里有几个可用的 demo 页面提供给那些匆忙的人参考: &lt;a href=&quot;http://www.appelsiini.net/projects/lazyload/enabled.html&quot; rel=&quot;nofollow external&quot;&gt;基本选项&lt;/a&gt;, &lt;a href=&quot;http://www.appelsiini.net/projects/lazyload/enabled_fadein.html&quot; rel=&quot;nofollow external&quot;&gt;淡入展示效果&lt;/a&gt;, &lt;a href=&quot;http://www.appelsiini.net/projects/lazyload/enabled_noscript.html&quot; rel=&quot;nofollow external&quot;&gt;script 脚本缺失的降级处理&lt;/a&gt;, &lt;a href=&quot;http://www.appelsiini.net/projects/lazyload/enabled_wide.html&quot; rel=&quot;nofollow external&quot;&gt;水平滚动&lt;/a&gt;, &lt;a href=&quot;http://www.appelsiini.net/projects/lazyload/enabled_wide_container.html&quot; rel=&quot;nofollow external&quot;&gt;容器内水平滚动&lt;/a&gt;, &lt;a href=&quot;http://www.appelsiini.net/projects/lazyload/enabled_container.html&quot; rel=&quot;nofollow external&quot;&gt;容器内垂直滚动&lt;/a&gt;, &lt;a href=&quot;http://www.appelsiini.net/projects/lazyload/enabled_gazillion.html&quot; rel=&quot;nofollow external&quot;&gt;页面内存在超多图片&lt;/a&gt;, &lt;a href=&quot;http://www.appelsiini.net/projects/lazyload/enabled_timeout.html&quot; rel=&quot;nofollow external&quot;&gt;延时加载图片&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;查看 demo 中每个请求间浏览器缓存的内容.&lt;/strong&gt; 你可以通过开发者控制台 (Chrome 和 Safari), Firebug (Firefox) 或者 HTTPHeaders (IE) 检测到实际加载的内容.
&lt;/p&gt;


&lt;h3&gt;怎样使用?&lt;/h3&gt;

&lt;p&gt;Lazy Load 依赖于 &lt;a href=&quot;jQuery.com&quot;&gt;jQuery&lt;/a&gt;. 请将下列代码加入页面 head 区域:&lt;/p&gt;

&lt;pre &gt;
&amp;lt;script src=&quot;jquery.js&quot; type=&quot;text/javascript&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&quot;jquery.lazyload.js&quot; type=&quot;text/javascript&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/pre&gt;


&lt;p&gt;你必须修改 HTML 代码. 在 src 属性中设置展位符图片, demo 页面使用 1x1 像素灰色 GIF 图片. 并且需要将真实图片的 URL 设置到 data-original 属性. 这里可以定义特定的 class 以获得需要延迟加载的图片对象. 通过这种方法你可以简单地控制插件绑定.&lt;/p&gt;

&lt;pre&gt;
&amp;lt;img class=&quot;lazy&quot; src=&quot;img/grey.gif&quot; data-original=&quot;img/example.jpg&quot;  width=&quot;640&quot; heigh=&quot;480&quot;&amp;gt;
&lt;/pre&gt;


&lt;p&gt;处理图片的代码如下.&lt;/p&gt;

&lt;pre&gt;
$(&quot;img.lazy&quot;).lazyload();
&lt;/pre&gt;


&lt;p&gt;这将使所有 class 为 lazy 的图片将被延迟加载. 可以参考&lt;a href=&quot;http://www.appelsiini.net/projects/lazyload/enabled.html&quot;&gt;基本选项 demo&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;占位图片&lt;/h3&gt;

&lt;p&gt;你还可以设定一个占位图片并定义事件来触发加载动作. 这时需要为占位图片设定一个 URL 地址. 透明, 灰色和白色的 1x1 象素的图片已经包含在插件里面.&lt;/p&gt;

&lt;h3&gt;事件触发加载&lt;/h3&gt;

&lt;p&gt;事件可以是任何 jQuery 时间, 如: click 和 mouseover. 你还可以使用自定义的事件, 如: sporty 和 foobar. 默认情况下处于等待状态, 直到用户滚动到窗口上图片所在位置. 在灰色占位图片被点击之前阻止加载图片, 你可以这样做:&lt;/p&gt;

&lt;pre&gt;
$(&quot;img&quot;).lazyload({
    placeholder : &quot;img/grey.gif&quot;,
        event : &quot;click&quot;
});
&lt;/pre&gt;


&lt;h3&gt;设置敏感度&lt;/h3&gt;

&lt;p&gt;几乎所有浏览器的 JavaScript 都是激活的. 然而可能你仍希望能在不支持 JavaScript 的客户端展示真实图片. 当浏览器不支持 JavaScript 时优雅降级, 你可以将真实的图片片段在写 &amp;lt;noscript&amp;gt; 标签内.&lt;/p&gt;

&lt;pre&gt;
&amp;lt;img class=&quot;lazy&quot; src=&quot;img/grey.gif&quot; data-original=&quot;img/example.jpg&quot;  width=&quot;640&quot; heigh=&quot;480&quot;&amp;gt;
&amp;lt;noscript&amp;gt;&amp;lt;img src=&quot;img/example.jpg&quot; width=&quot;640&quot; heigh=&quot;480&quot;&amp;gt;&amp;lt;/noscript&amp;gt;
&lt;/pre&gt;


&lt;p&gt;可以通过 CSS 隐藏占位符.&lt;/p&gt;

&lt;pre&gt;
.lazy {
  display: none;
  }
&lt;/pre&gt;


&lt;p&gt;在支持 JavaScript 的浏览器中, 你必须在 DOM ready 时将占位符显示出来, 这可以在插件初始化的同时完成.&lt;/p&gt;

&lt;pre&gt;
$(&quot;img.lazy&quot;).show().lazyload();
&lt;/pre&gt;


&lt;p&gt;这些都是可选的, 但如果你希望插件平稳降级这些都是应该做的.&lt;/p&gt;

&lt;h3&gt;设置敏感度&lt;/h3&gt;

&lt;p&gt;默认情况下图片会出现在屏幕时加载. 如果你想提前加载图片, 可以设置 threshold 选项, 设置 threshold 为 200 令图片在距离屏幕 200 像素时提前加载.&lt;/p&gt;

&lt;pre&gt;
$(&quot;img.lazy&quot;).lazyload({ threshold : 200 });
&lt;/pre&gt;


&lt;h3&gt;使用特效&lt;/h3&gt;

&lt;p&gt;how() 方法来将图显示出来. 其实你可以使用任何你想用的特效来处理. 下面的代码使用 FadeIn 效果. 这是效果演示页面.&lt;/p&gt;

&lt;pre&gt;
$(&quot;img.lazy&quot;).lazyload({ 
    effect : &quot;fadeIn&quot;
});
&lt;/pre&gt;


&lt;h3&gt;图片在容器里面&lt;/h3&gt;

&lt;p&gt;
你可以将插件用在可滚动容器的图片上, 例如带滚动条的 DIV 元素. 你要做的只是将容器定义为 jQuery 对象并作为参数传到初始化方法里面. 这是&lt;a rel=&quot;nofollow external&quot; href=&quot;http://www.appelsiini.net/projects/lazyload/enabled_container.html&quot;&gt;水平滚动演示页面&lt;/a&gt;和&lt;a rel=&quot;nofollow external&quot; href=&quot;http://www.appelsiini.net/projects/lazyload/enabled_wide_container.html&quot;&gt;垂直滚动的演示页面&lt;/a&gt;.
&lt;/p&gt;


&lt;pre&gt;
#container {
    height: 600px;
        overflow: scroll;
}
&lt;/pre&gt;


&lt;p&gt;&lt;/p&gt;

&lt;pre&gt;
$(&quot;img.lazy&quot;).lazyload({         
     container: $(&quot;#container&quot;)
});
&lt;/pre&gt;


&lt;h3&gt;当图片不顺序排列&lt;/h3&gt;

&lt;p&gt;滚动页面的时候, Lazy Load 会循环为加载的图片. 在循环中检测图片是否在可视区域内. 默认情况下在找到第一张不在可见区域的图片时停止循环. 图片被认为是流式分布的, 图片在页面中的次序和 HTML 代码中次序相同. 但是在一些布局中, 这样的假设是不成立的. 不过你可以通过 failurelimit 选项来控制加载行为.&lt;/p&gt;

&lt;pre&gt;
$(&quot;img.lazy&quot;).lazyload({ 
    failure_limit : 10
});
&lt;/pre&gt;


&lt;p&gt;将 failurelimit 设为 10 令插件找到 10 个不在可见区域的图片是才停止搜索. 如果你有一个猥琐的布局, 请把这个参数设高一点.&lt;/p&gt;

&lt;h3&gt;延迟加载图片&lt;/h3&gt;

&lt;p&gt;Lazy Load 插件的一个不完整的功能, 但是这也能用来实现图片的延迟加载. 下面的代码实现了页面加载完成后再加载. 页面加载完成 5 秒后, 指定区域内的图片会自动进行加载. 这是&lt;a href=&quot;http://www.appelsiini.net/projects/lazyload/enabled_timeout.html&quot;&gt;延迟加载演示页面&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;
$(function() {          
    $(&quot;img:below-the-fold&quot;).lazyload({
        event : &quot;sporty&quot;
    });
});
$(window).bind(&quot;load&quot;, function() { 
    var timeout = setTimeout(function() {$(&quot;img.lazy&quot;).trigger(&quot;sporty&quot;)}, 5000);
});
&lt;/pre&gt;


&lt;h3&gt;加载隐藏的图片&lt;/h3&gt;

&lt;p&gt;可能在你的页面上埋藏可很多隐藏的图片. 比如插件用在对列表的筛选, 你可以不断地修改列表中各条目的显示状态. 为了提升性能, Lazy Load 默认忽略了隐藏图片. 如果你想要加载隐藏图片, 请将 skip_invisible 设为 false&lt;/p&gt;

&lt;pre&gt;
$(&quot;img.lazy&quot;).lazyload({ 
    skip_invisible : false
});
&lt;/pre&gt;


&lt;h3&gt;下载插件&lt;/h3&gt;

&lt;p&gt;最新版本&lt;a href=&quot;https://raw.github.com/tuupola/jquery_lazyload/master/jquery.lazyload.js&quot;&gt;源代码&lt;/a&gt;和&lt;a href=&quot;https://raw.github.com/tuupola/jquery_lazyload/master/jquery.lazyload.min.js&quot;&gt;压缩的代码&lt;/a&gt;. 插件已经在 OSX 的 Safari 5.1, Safari 6, Chrome 20, Firefox 12 浏览器上, Windows 的 Chrome 20, IE 8 and IE 9 浏览器上, 以及 iOS5 (iPhone 和 iPad) 的 Safari 5.1 浏览器上测试过.&lt;/p&gt;

&lt;p&gt;文章转自：&lt;a href=&quot;http://www.neoease.com/lazy-load-jquery-plugin-delay-load-image/&quot;&gt;http://www.neoease.com/lazy-load-jquery-plugin-delay-load-image/&lt;/a&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/12/01/jquery-lazyload/index.html</link>
            <guid>http://demi-panda.com/2012/12/01/jquery-lazyload/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Nginx 虚拟主机 VirtualHost 配置 ]]></title>
            <pubDate>Fri, 30 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;Nginx 是一个轻量级高性能的 www 服务器, 并发处理能力强, 对资源消耗小, 无论是静态服务器还是小网站, Nginx 表现更加出色, 作为 Apache 的补充和替代使用率越来越高.&lt;/p&gt;

&lt;h3&gt;增加 Nginx 虚拟主机&lt;/h3&gt;

&lt;p&gt;这里假设大家的 Nginx 服务器已经安装好, 不懂的请阅读各 Linux 发行版的官方文档或者 LNMP 的安装说明. 配置 Virtual host 步骤如下:
1. 进入 /usr/local/nginx/conf/vhost 目录, 创建虚拟主机配置文件 demo.neoease.com.conf ({域名}.conf).&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;打开配置文件, 添加服务如下:&lt;/li&gt;
&lt;/ol&gt;


&lt;pre &gt;
server {
        listen       80;
        server_name demo.neoease.com;
        index index.html index.htm index.php;
        root  /var/www/demo_neoease_com;
         
        log_format demo.neoease.com '$remote_addr - $remote_user [$time_local] $request'
        '$status $body_bytes_sent $http_referer '
        '$http_user_agent $http_x_forwarded_for';
         access_log  /var/log/demo.neoease.com.log demo.neoease.com;
    }
&lt;/pre&gt;


&lt;ol&gt;
&lt;li&gt;打开 Nginx 配置文件 /usr/local/nginx/conf/nginx.conf, 在 http 范围引入虚拟主机配置文件如下:&lt;/li&gt;
&lt;/ol&gt;


&lt;pre id=&quot;bash&quot;&gt;
include vhost/*.conf;
&lt;/pre&gt;


&lt;ol&gt;
&lt;li&gt;重启 Nginx 服务, 执行以下语句.&lt;/li&gt;
&lt;/ol&gt;


&lt;pre&gt;
service nginx restart
&lt;/pre&gt;


&lt;h3&gt;让 Nginx 虚拟主机支持 PHP&lt;/h3&gt;

&lt;p&gt;在前面第 2 步的虚拟主机服务对应的目录加入对 PHP 的支持, 这里使用的是 FastCGI, 修改如下.&lt;/p&gt;

&lt;pre&gt;
server {
        listen       80;
        server_name demo.neoease.com;
        index index.html index.htm index.php;
        root  /var/www/demo_neoease_com;
  
        location ~ .*\.(php|php5)?$ {
                 fastcgi_pass unix:/tmp/php-cgi.sock;
                 fastcgi_index index.php;
                 include fcgi.conf;
        }
                         
        log_format demo.neoease.com '$remote_addr - $remote_user [$time_local] $request'
        '$status $body_bytes_sent $http_referer '
        '$http_user_agent $http_x_forwarded_for';
        access_log  /var/log/demo.neoease.com.log demo.neoease.com;
}
&lt;/pre&gt;


&lt;h3&gt;图片防盗链&lt;/h3&gt;

&lt;p&gt;图片作为重要的耗流量大的静态资源, 可能网站主并不希望其他网站直接引用, Nginx 可以通过 referer 来防止外站盗链图片.&lt;/p&gt;

&lt;pre&gt;
server {
        listen       80;
        server_name demo.neoease.com;
        index index.html index.htm index.php;
        root  /var/www/demo_neoease_com;
        # 这里为图片添加为期 1 年的过期时间, 并且禁止 Google, 百度和本站之外的网站引用图片
        location ~ .*\.(ico|jpg|jpeg|png|gif)$ {
                expires 1y;
                valid_referers none blocked demo.neoease.com *.google.com *.baidu.com;
                if ($invalid_referer) {
                        return 404;
                 }
        }
        
        log_format demo.neoease.com '$remote_addr - $remote_user [$time_local] $request'
        '$status $body_bytes_sent $http_referer '
        '$http_user_agent $http_x_forwarded_for';
        access_log  /var/log/demo.neoease.com.log demo.neoease.com;
}
&lt;/pre&gt;


&lt;h3&gt;WordPress 伪静态配置&lt;/h3&gt;

&lt;p&gt;如果将 WordPress 的链接结构设定为 /%postname%/, /%postname%.html 等格式时, 需要 rewrite URL, WordPress 提供 Apache 的 .htaccess 修改建议, 但没告知 Nginx 该如何修改. 我们可以将 WordPress 的虚拟主机配置修改如下:&lt;/p&gt;

&lt;pre&gt;
server {
        listen       80;
        server_name demo.neoease.com;
        index index.html index.htm index.php;
        root  /var/www/demo_neoease_com;
         
        location / {
                if (-f $request_filename/index.html){
                        rewrite (.*) $1/index.html break;
                }
                if (-f $request_filename/index.php){
                        rewrite (.*) $1/index.php;
                }
                if (!-f $request_filename){
                        rewrite (.*) /index.php;
                }
        }
        rewrite /wp-admin$ $scheme://$host$uri/ permanent;
        location ~ .*\.(php|php5)?$ {
                fastcgi_pass unix:/tmp/php-cgi.sock;
                fastcgi_index index.php;
                include fcgi.conf;
        }
        log_format demo.neoease.com '$remote_addr - $remote_user [$time_local] $request'
        '$status $body_bytes_sent $http_referer '
        '$http_user_agent $http_x_forwarded_for';
        access_log  /var/log/demo.neoease.com.log demo.neoease.com;
}
&lt;/pre&gt;


&lt;p&gt;LNMP 套件在提供了 WordPress 为静态配置文件 /usr/local/nginx/conf/wordpress.conf, 在虚拟主机配置的 server 范围引用如下即可.&lt;/p&gt;

&lt;pre&gt;
include wordpress.conf;
&lt;/pre&gt;


&lt;p&gt;如果你使用 LNMP 套件, 进入 WordPress 后台发现会出现 404 页面, wp-admin 后面缺少了斜杆 /, 请在 wordpress.conf 最后添加以下语句:&lt;/p&gt;

&lt;pre&gt;
rewrite /wp-admin$ $scheme://$host$uri/ permanent;
&lt;/pre&gt;


&lt;p&gt;文章转自:http://www.neoease.com/nginx-virtual-host/&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/11/30/web-nginx/index.html</link>
            <guid>http://demi-panda.com/2012/11/30/web-nginx/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Solr-GeoHash 经纬度距离计算公式 ]]></title>
            <pubDate>Fri, 30 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;geohash作为Solr的位置信息搜索算法，有必要了解其基本的实现原理。geohash算法的wiki链接为http://en.wikipedia.org/wiki/Geohash&lt;/p&gt;

&lt;pre id=&quot;java&quot;&gt;
public class Distance {
  public static final double DEGREES_TO_RADIANS = Math.PI / 180.0;
  public static final double RADIANS_TO_DEGREES = 180.0 / Math.PI;
  //地球半径
  public static final double EARTH_MEAN_RADIUS_KM = 6371.009;
  //地球直径
  private static final double EARTH_MEAN_DIAMETER = EARTH_MEAN_RADIUS_KM * 2;

  /***
  * 距离半径计算方式
  * @param latCenterRad  中心点经纬度
  * @param lonCenterRad
  * @param latVals  目标经纬度
  * @param lonVals
  * @return 两坐标的距离 单位千米
  */
  public static double doubleVal(double latCenterRad, double lonCenterRad, double latVals, double lonVals) {
      //计算经纬度
      double latRad = latVals * DEGREES_TO_RADIANS;
      double lonRad = lonVals * DEGREES_TO_RADIANS;

      //计算经纬度的差
      double diffX = latCenterRad * DEGREES_TO_RADIANS - latRad;
      double diffY = lonCenterRad * DEGREES_TO_RADIANS - lonRad;
      //计算正弦和余弦
      double hsinX = Math.sin(diffX * 0.5);
      double hsinY = Math.sin(diffY * 0.5);
      double latCenterRad_cos = Math.cos(latCenterRad * DEGREES_TO_RADIANS);
      double h = hsinX * hsinX
      + (latCenterRad_cos * Math.cos(latRad) * hsinY * hsinY);

      return (EARTH_MEAN_DIAMETER * Math.atan2(Math.sqrt(h), Math.sqrt(1 - h)));
  }
}
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/11/30/solr-latVals/index.html</link>
            <guid>http://demi-panda.com/2012/11/30/solr-latVals/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Solr 获取分词 ]]></title>
            <pubDate>Fri, 30 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;Solr1.4有了对字段的分词。FieldAnalysisRequestHandler可以对某个字段或字段类型的分词器对查询串取到分词数据。
用 solr 的默认配置，如 solr 1.4.0。
我用IKAnalyzer为例,在schema.xml的 types 元素内加：&lt;/p&gt;

&lt;pre id=&quot;wiki&quot;&gt;
&amp;lt;fieldType name=&quot;text_cn&quot; class=&quot;solr.TextField&quot; positionIncrementGap=&quot;100&quot;&amp;gt;
  &amp;lt;analyzer&amp;gt;
      &amp;lt;tokenizer class=&quot;org.wltea.analyzer.solr.IKTokenizerFactory&quot;/&amp;gt;
      &amp;lt;filter class=&quot;solr.StopFilterFactory&quot;  
          ignoreCase=&quot;true&quot; words=&quot;stopwords.txt&quot;/&amp;gt;
      &amp;lt;filter class=&quot;solr.WordDelimiterFilterFactory&quot;  
          generateWordParts=&quot;1&quot;  
          generateNumberParts=&quot;1&quot;  
          catenateWords=&quot;1&quot;  
          catenateNumbers=&quot;1&quot;  
          catenateAll=&quot;0&quot;  
          splitOnCaseChange=&quot;1&quot;/&amp;gt;
      &amp;lt;filter class=&quot;solr.LowerCaseFilterFactory&quot;/&amp;gt;
      &amp;lt;filter class=&quot;solr.EnglishPorterFilterFactory&quot;  
          protected=&quot;protwords.txt&quot;/&amp;gt;
      &amp;lt;filter class=&quot;solr.RemoveDuplicatesTokenFilterFactory&quot;/&amp;gt;
  &amp;lt;/analyzer&amp;gt;  
 &amp;lt;/fieldType&amp;gt;
&lt;/pre&gt;


&lt;h3&gt;HTTP请求&lt;/h3&gt;

&lt;p&gt;http://localhost:6091/solr-web-shop/shop/analysis/field?q=北京烤鸭&amp;amp;analysis.fieldtype=text&amp;amp;indent=on&amp;amp;wt=json&lt;/p&gt;

&lt;pre&gt;
{
  responseHeader: {
    status: 0,
    QTime: 3
  },
  analysis: {
    field_types: {
      text: {
        query: [
          &quot;org.wltea.analyzer.lucene.IKTokenizer&quot;,
          [
            {
              text: &quot;北京烤鸭&quot;,
              start: 0,
              end: 4,
              position: 1,
              positionHistory: [
                1
              ],
              type: &quot;word&quot;
            },
            {
              text: &quot;北京烤&quot;,
              start: 0,
              end: 3,
              position: 2,
              positionHistory: [
                2
              ],
              type: &quot;word&quot;
            },
            {
              text: &quot;北京&quot;,
              start: 0,
              end: 2,
              position: 3,
              positionHistory: [
                3
              ],
              type: &quot;word&quot;
            },
            {
              text: &quot;烤鸭&quot;,
              start: 2,
              end: 4,
              position: 4,
              positionHistory: [
                4
              ],
              type: &quot;word&quot;
            }
          ],
          &quot;org.apache.lucene.analysis.synonym.SynonymFilter&quot;,[],
          &quot;org.apache.lucene.analysis.StopFilter&quot;,[],
          &quot;org.apache.lucene.analysis.LowerCaseFilter&quot;,[],
          &quot;org.apache.solr.analysis.RemoveDuplicatesTokenFilter&quot;,[]
        ]
      }
    },
    field_names: {}
  }
}
&lt;/pre&gt;


&lt;h3&gt;代码实现&lt;/h3&gt;

&lt;pre id=&quot;java&quot;&gt;
public static void main(String[] args) throws MalformedURLException, SolrServerException, IOException {
    CommonsHttpSolrServer solrServer = new CommonsHttpSolrServer(&quot;http://localhost:6091/solr-web-shop/shop&quot;);

    FieldAnalysisRequest request = new FieldAnalysisRequest(&quot;/analysis/field&quot;);
    request.addFieldName(&quot;shopName&quot;);
    request.setFieldValue(&quot;text&quot;);
    request.setQuery(&quot;北京烤鸭&quot;);
    FieldAnalysisResponse response = request.process(solrServer);

    Iterator it = response.getFieldNameAnalysis(&quot;shopName&quot;).getQueryPhases().iterator();
    while(it.hasNext()) {
      AnalysisPhase pharse = (AnalysisPhase)it.next();
      List&lt;TokenInfo&gt; list = pharse.getTokens();
      for (TokenInfo info : list) {
        System.out.println(&quot; text : &quot;+ info.getText());
      }

    }
}
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/11/30/solr-analyzer/index.html</link>
            <guid>http://demi-panda.com/2012/11/30/solr-analyzer/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[SEO 只是方案，与技术无关 ]]></title>
            <pubDate>Fri, 30 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;&amp;nbsp;&amp;nbsp;经过很久的思想斗争才确定下这个很有争议的标题，接触SEO也有两年多了。在开始的时候笔者也曾认为SEO是一门很高深的技术，毕竟在外人看来这是很牛X的。实际上外人看到的只是网站的排名效果和流量效果，却没有看到SEO人员的付出，没有看到SEOER在半夜苦苦奋斗以及和相关性比较高的论坛管理员交锋的场面。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/media/pub/google/seo.jpg&quot; width=&quot;580px&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h3&gt;为什么说“SEO只是方案与技术无关”？笔者总结了以下几个观点：&lt;/h3&gt;

&lt;h4&gt;网站的基础架构是技术员的事&lt;/h4&gt;

&lt;p&gt;对于大部分SEOER来说对技术这一块只是略懂，能够很直白的支出技术员在网站构架这一块的SEO表现的不足，自己却写不出像样的代码和架构。SEOER在网站的基础构架这一块只能给出相应的构架方案，余下的事情便是技术员的问题了。&lt;/p&gt;

&lt;h4&gt;关键词的选择和提取&lt;/h4&gt;

&lt;p&gt;在提权关键词的时候我们更多的是借用一些关键词分析工具来选择关键词，然后再根据自己的经验来判断这些关键词的竞争度，有的关键词工具甚至给出了关键词竞争大小的参考数据。&lt;/p&gt;

&lt;h4&gt;关键词的布局&lt;/h4&gt;

&lt;p&gt;当我们选择好关键词后，接下来的就是关键词的布局工作了。关键词如何布局我们就要结合关键词分析这一块的相关数据然后结合网站的基本构架来布局，只要我们在方案中明确指出这一点后，网站开发人员就能够按照我们的方案来布了。&lt;/p&gt;

&lt;h4&gt;网站内容建设&lt;/h4&gt;

&lt;p&gt;网站的内容更多的是为用户去建设的，做为SEOER我们只能为编辑人员提供一些吸引用户的标题书写建议。文章内容更多的是为用户创造价值，如果内容是为了SEO而建那就失去了网站内容的价值了。&lt;/p&gt;

&lt;h4&gt;内链建设&lt;/h4&gt;

&lt;p&gt;好的内链建设能够很好的稳定网站的排名，内链建设更多的是需要我们在方案中体现出的关键词和内链相关性的布局。编辑人员按照我们的方案来进行内部锚文本以及内容标签和相关内容的聚合，然后达到内链建设的效果。&lt;/p&gt;

&lt;h4&gt;外链的建设&lt;/h4&gt;

&lt;p&gt;很多网站优化团队都会有外链建设专员，企业也会有相关的外推专员。只要我们在SEO方案中量化这些外链建设的数量，外推人员的方向，然后结合一系列的绩效考核就能够很好的达到外链的效果。&lt;/p&gt;

&lt;h4&gt;日志分析&lt;/h4&gt;

&lt;p&gt;目前还是有很多SEOER只会去关注关键词的排名和外链的数量以及收录量，却很少去关注网站的收录率、搜索引擎的抓取量、搜索引擎的抓取难易度、搜索引擎的抓取时段以及收录率相关的问题。这些问题在网站日志里都可以分析出来的，日志分析这一块更多的是和数据相关的东西，数据分析人员就可以很好的分析出这些相关的数据，然后数据分析人员和技术人员进行相关的沟通和调整就能够让这些数据趋向于好的方向发展。&lt;/p&gt;

&lt;h4&gt;数据分析&lt;/h4&gt;

&lt;p&gt;数据分析这一块设计的数据太多，对于一般的SEOER是比较头疼的问题。这一块涉及到的数据太多，分析起来相对比较麻烦。流量大的网站都会设有数据分析这个职位，大部分网站数据分析这个职位的人员都是一些企业核心人员。数据分析方面SEOER会接触却很少去更深入的研究数据这一块，另一个原因就是数据这一块算的上是比较核心的东西了，一般的SEOER还真是是挺难够得着这一块的。&lt;/p&gt;

&lt;p&gt;作为一个SEOER，笔者能做的基本上就是完善SEO方案。至于其他的东西SEOER完全可以不参与，只要按照这个方案走就能够达到方案预期的效果。然后就是沟通和验收了，当然这方面的问题完全可以由绩效考核这一块来做。写到这里作为一个SEOER是不是也该想一下自己以后的出路了？&lt;/p&gt;

&lt;p&gt;本文转载自沈彦清腾讯博客，&lt;a href=&quot;http://user.qzone.qq.com/2014425/blog/1353992070&quot;&gt;原文链接&lt;/a&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/11/30/seo/index.html</link>
            <guid>http://demi-panda.com/2012/11/30/seo/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Java内存泄露监控工具：jconsole, jstack ]]></title>
            <pubDate>Fri, 30 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;本文将对JVM监控工具jstack, jconsole, jinfo, jmap, jdb, jstat进行详细的介绍，具体内容请看下文。&lt;/p&gt;

&lt;h3&gt;jconsole&lt;/h3&gt;

&lt;p&gt;jconsole是基于Java Management Extensions (JMX)的实时图形化监测工具，这个工具利用了内建到JVM里面的JMX指令来提供实时的性能和资源的监控，包括了Java 程序的内存使用，Heap size, 线程的状态，类的分配状态和空间使用等等。&lt;/p&gt;

&lt;h4&gt;配置&lt;/h4&gt;

&lt;p&gt;在tomcat bin/catalina.sh或者catalina.bat脚本中JAVA_OPTS参数配置如下:&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
JAVA_OPTS=&quot;$JAVA_OPTS -Djava.rmi.server.hostname=192.168.10.14&quot;
JAVA_OPTS=&quot;$JAVA_OPTS -Dcom.sun.management.jmxremote.authenticate=false&quot;
JAVA_OPTS=&quot;$JAVA_OPTS -Dcom.sun.management.jmxremote.ssl=false&quot;
JAVA_OPTS=&quot;$JAVA_OPTS -Dcom.sun.management.jmxremote.port=5679&quot;
&lt;/pre&gt;


&lt;h4&gt;启动jconsole&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ $JAVA_HOME/bin/jconsole
&lt;/pre&gt;


&lt;p&gt;&lt;img src=&quot;http://demi-panda.com/media/pub/java/jconsole-index.jpg&quot; width=&quot;580px&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h4&gt;监控视图&lt;/h4&gt;

&lt;p&gt;jconsole监控视图还是做的很不错的
&lt;img src=&quot;http://demi-panda.com/media/pub/java/jconsole.png&quot; width=&quot;580px&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h3&gt;jstack&lt;/h3&gt;

&lt;p&gt;如果java程序崩溃生成core文件，jstack工具可以用来获得core文件的java stack和native stack的信息，从而可以轻松地知道java程序是如何崩溃和在程序何处发生问题。另外，jstack工具还可以附属到正在运行的java程序中，看到 当时运行的java程序的java stack和native stack的信息, 如果现在运行的java程序呈现hung的状态，jstack是非常有用的。目前只有在Solaris和Linux的JDK版本里面才有。&lt;/p&gt;

&lt;h3&gt;jinfo&lt;/h3&gt;

&lt;p&gt;jinfo可以从core文件里面知道崩溃的Java应用程序的配置信息，目前只有在Solaris和Linux的JDK版本里面才有。&lt;/p&gt;

&lt;h3&gt;jmap&lt;/h3&gt;

&lt;p&gt;jmap 可以从core文件或进程中获得内存的具体匹配情况，包括Heap size, Perm size等等，目前只有在Solaris和Linux的JDK版本里面才有。&lt;/p&gt;

&lt;h3&gt;jdb&lt;/h3&gt;

&lt;p&gt;jdb 用来对core文件和正在运行的Java进程进行实时地调试，里面包含了丰富的命令帮助您进行调试，它的功能和Sun studio里面所带的dbx非常相似，但 jdb是专门用来针对Java应用程序的。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/11/30/jvm-jconsole/index.html</link>
            <guid>http://demi-panda.com/2012/11/30/jvm-jconsole/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[CentOS Make Command not Found ]]></title>
            <pubDate>Fri, 30 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;make命令的关键是找出上一次各个文件的修改时间，利用此修改时间来比较相依 赖文件最后一次修改的时间。若目标文件的修改时间早于其相依文件的修 改时间，则必须先对相依文件进行处理（编译），进而来更新目标文件，若目标文件的修改时间迟于其相依文件的修改时间，则不对该相依文件进行处理（编译）。 利用它可以每次只编译自上次编译后发生变化的文件，从而可以减少一些不必要的编译工作，提高效率。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;执行make命令所需要的信息：&lt;/em&gt;
1、用户定义的描述文件，一般为makefile
2、文件系统有关的数据和与时间有关的信息
3、一组后缀规则&lt;/p&gt;

&lt;h3&gt;make命令&lt;/h3&gt;

&lt;p&gt;make命令的一般格式：
make【选项】【make描述文件】【宏定义】【目的文件】
make首先分析所有的宏定义参数（带嵌入等号的参数）并进行赋值，宏命令行覆盖在makefile中进行的定义，然后检验选项标志，最后递归的对每一个目的依赖文件进行检查。&lt;/p&gt;

&lt;h3&gt;Make Command not Found&lt;/h3&gt;

&lt;p&gt;在centos 5下安装软件遇到的问题，google了一圈，是因为系统没有安装编译器，那安装就是了，嘿嘿。
解决办法，在SSH下输入下面的命令&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ yum -y install gcc automake autoconf libtool make
&lt;/pre&gt;



 ]]></description>
            <link>http://demi-panda.com/2012/11/30/centos-make-command/index.html</link>
            <guid>http://demi-panda.com/2012/11/30/centos-make-command/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Solr Dismax查询解析器 ]]></title>
            <pubDate>Thu, 29 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;Solr 支持多种查询解析，给搜索引擎开发人员提供灵活的查询解析。Solr 中主要包含这几个查询解析器：标准查询解析器、DisMax 查询解析器，扩展 DisMax 查询解析器（eDisMax）&lt;/p&gt;

&lt;h3&gt;Dismax&lt;/h3&gt;

&lt;p&gt;Dismax handler比standard handler多如下功能：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;以不同的权值来搜索多个field。 &lt;/li&gt;
&lt;li&gt;限制查询语法为一个小的集合并且用无语法错误。该特性是强制的并是不可配置的 &lt;/li&gt;
&lt;li&gt;整个搜索查询的自动的短语boosting &lt;/li&gt;
&lt;li&gt;便利的查询boosting参数，通常同函数查询一块使用 &lt;/li&gt;
&lt;li&gt;能指定单词匹配的最少个数，这取决于查询串中的单词数.&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;Dismax query parser&lt;/h3&gt;

&lt;p&gt;这里提到的所有应用于dismax的也都适用于edismax，除非明确说明不适用。其实edismax就是打算在未来的发布版本中替代dismax的。&lt;/p&gt;

&lt;h3&gt;Lucene DisjunctionMaxQuery&lt;/h3&gt;

&lt;p&gt;dismax可以查询多个field，并且每个field使用不同的boost。这个功能是由lucene的DisjunctionMaxQuery查询类型来支持。以下的讨论都是高级内容，不用刻意理解。只是记住dismax针对多个字段的查询会设置tie参数为0.1，这也是合理的选择。&lt;/p&gt;

&lt;p&gt;举个例子。如果有一个简单查询rock。dismax可能会将它配置为DisjunctionMaxQuery为fieldA:rock&lt;sup&gt;2&lt;/sup&gt; fieldB:rock&lt;sup&gt;1.2&lt;/sup&gt; fieldC:rock&lt;sup&gt;0.5,如果是boolean查询的话会跟这个查询有些不同，不同的地方也就是得分。类似的boolean查询的得分会基于这三个条文的总和，也就是DisjunctionMaxQuery会使用每一个的最大值。针对多个字段查询同一个term的情况，并且有些字段相对于另一些字段更重要，那么dismax应该更好的处理得分。API文档中的一个例子对这个特征的解释是，如果用户查询albino&lt;/sup&gt; elephant，那么假如有一种情况是albino匹配一个字段，elephant匹配另一个字段，另一种情况是albino匹配两个字段，但是elephant没有一个匹配，那么dismax保证第一种情况的得分高于第二种情况。
另一个dismax得分的难题就是tie参数，tie的取值是0-1，默认是0，在实践中设置为0.1效果最好。&lt;/p&gt;

&lt;h3&gt;Boosting:Automatic phrase boosting&lt;/h3&gt;

&lt;p&gt;dismax会把phrase查询也就是引号引起来的查询进行转换，来改进得分。例如查询billy joel 会转换为+(billy joel) &quot;billy joel&quot;也就是说，如果一个文档包含billy joel，那么它不仅匹配原始term而且还匹配billy和joel，也就是匹配三个term，如果另一个文档不匹配短语billy joel，只是含有两个单词，那么lucene的得分算法会给第一个文档更高的得分。&lt;/p&gt;

&lt;h3&gt;Configuring automatic phrase boosting&lt;/h3&gt;

&lt;p&gt;automatic phrase boosting默认是不启用的。要使用的话可以使用pf参数，就是phrase fields的缩写。语法与qf相同。用相同的值作为开始并做相应的调整，从qf到pf变化通常的原因有以下几点：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;使用不同的boost因素让短语增强的影响没有压倒性。一些经验可以来引导你做这些调整。&lt;/li&gt;
&lt;li&gt;忽略那些只有一个term的字段。比如唯一标识字段。&lt;/li&gt;
&lt;li&gt;忽略那些含有太大的文本值的字段，因为它可能全使查询效率大大降低。&lt;/li&gt;
&lt;li&gt;使用一个具体相同值，但是使用不同analyzed的字段来替换这个字段&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;同样的强烈推荐使用common-grams和shingling来提高执行效率。&lt;/p&gt;

&lt;h3&gt;Phrase slop configuration&lt;/h3&gt;

&lt;p&gt;phrase slop就是短语后跟一个波浪线和一个数字，就像这样&quot;billy joel&quot;~1
对于所有明确指定的短语查询dismax会自动添加两个参数来设置slop：qs和phrase boosting：ps，如果slop没有指定那么就相当于是0。
&lt;str name=&quot;qs&quot;&gt;1&lt;/str&gt;&lt;str name=&quot;ps&quot;&gt;0&lt;/str&gt;&lt;/p&gt;

&lt;h3&gt;Partial phrase boosting&lt;/h3&gt;

&lt;p&gt;如果查询的是两个单词，那么edismax支持增强为连续的单词对，如果是三个单词，那么可以增强三倍。例如查询how now brown cow
会变为：
+(how now brown cow) &quot;how now brown cow&quot; &quot;how now&quot; &quot;now brown&quot; &quot;brown cow&quot; &quot;how now brown&quot; &quot;now brown cow&quot;
这个特征不会被ps参数影响，ps只应用于entire phrase boost。&lt;/p&gt;

&lt;h3&gt;Boosting：boost queries&lt;/h3&gt;

&lt;p&gt;dismax的bq参数可以用来指定多个查询，类似于automatic phrase boost。以类似的方式被添加到用户的查询中。记住一点，boosting只是用来影响q参数指定的用户查询所匹配到的那些文档的scoring。如果匹配的结果还匹配bq查询，那么这个文档的得分会更高。
(&lt;em&gt;:&lt;/em&gt; -r_type:aaa)&lt;sup&gt;2增强所有文档得分，但是除了aaa。&lt;/sup&gt;
boost queries不如boost functions有用。&lt;/p&gt;

&lt;h3&gt;Boosting：boost functions&lt;/h3&gt;

&lt;p&gt;boost functions提供一个强大的功能就是使用用户设置的公式来对文档的score进行计算。这里所说的公式也就是solr的function queries，使用bf参数来操作score。edismax支持boost参数来进行function query。可以使用bf或boost多次。&lt;/p&gt;

&lt;pre id=&quot;wiki&quot;&gt;
&amp;lt;str name=&quot;boost&quot;&amp;gt;recip(map(rord(r_event_date),0,0,99000),1,95000,95000)&amp;lt;/str&amp;gt;
&lt;/pre&gt;


&lt;p&gt;函数中不能有空格。bf和boost两个参数其实并没有以相同的方式解析。bf参数允许多种boost functions使用相同的参数，以空格分开，二者选一的话还是使用bf参数。还可以在bf参数中乘以因子在函数的结尾。比如&lt;sup&gt;100&lt;/sup&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/11/29/solr-dismax/index.html</link>
            <guid>http://demi-panda.com/2012/11/29/solr-dismax/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Solr 4.0 缓存配置 ]]></title>
            <pubDate>Thu, 29 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;Solr配置文件[solrconfig.xml]有三种缓存分别是 filterCache，queryResultCache，documentCache但Solr是在什么时候，什么情况下会用到这些缓存呢，通过看Solr的源码，下面对Solr三种缓存做说明:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Filter cache（过滤器缓存），用于保存过滤器（fq 参数）和层面搜索的结果&lt;/li&gt;
&lt;li&gt;Document cache（文档缓存），用于保存 lucene 文档存储的字段&lt;/li&gt;
&lt;li&gt;Query result（查询缓存），用于保存查询的结果&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;通过这3种缓存，可以对solr的搜索实例进行调优。调整这些缓存，需要根据索引库中文档的数量，每次查询结果的条数等。
在调整参数前，需要事先得到 solr 示例中的以下信息：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;索引中文档的数量&lt;/li&gt;
&lt;li&gt;每秒钟搜索的次数&lt;/li&gt;
&lt;li&gt;过滤器的数量&lt;/li&gt;
&lt;li&gt;一次查询返回最大的文档数量&lt;/li&gt;
&lt;li&gt;不同查询和不同排序的个数&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;solr中主要是LRUCache,主要使用的是LRU是Least Recently Used最近最少使用算法。先给大家普及下LRU算法：&lt;/p&gt;

&lt;h3&gt;LRU&lt;/h3&gt;

&lt;p&gt;内存管理的一种算法，对于在内存中但最近又不用的数据块（内存块）叫做LRU，Oracle会根据那些数据属于LRU而将其移出内存而腾出空间来加载另外的数据。&lt;/p&gt;

&lt;p&gt;什么是LRU算法? LRU是Least Recently Used的缩写，即最近最少使用页面置换算法，是为虚拟页式存储管理服务的。&lt;/p&gt;

&lt;p&gt;　　关于操作系统的内存管理，如何节省利用容量不大的内存为最多的进程提供资源，一直是研究的重要方向。而内存的虚拟存储管理，是现在最通用，最成功的方式—— 在内存有限的情况下，扩展一部分外存作为虚拟内存，真正的内存只存储当前运行时所用得到信息。这无疑极大地扩充了内存的功能，极大地提高了计算机的并发度。虚拟页式存储管理，则是将进程所需空间划分为多个页面，内存中只存放当前所需页面，其余页面放入外存的管理方式。&lt;/p&gt;

&lt;p&gt;　　然而，有利就有弊，虚拟页式存储管理减少了进程所需的内存空间，却也带来了运行时间变长这一缺点：进程运行过程中，不可避免地要把在外存中存放的一些信息和内存中已有的进行交换，由于外存的低速，这一步骤所花费的时间不可忽略。因而，采取尽量好的算法以减少读取外存的次数，也是相当有意义的事情。&lt;/p&gt;

&lt;p&gt;我们可以通过solr管理界面查看缓存的状态，也可以通过日志进行查看。下图是我进行的参数设置后的状态：&lt;/p&gt;

&lt;h3&gt;Plugins / status&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/media/pub/solr/solr-cache.jpg&quot; width=&quot;580px&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;参数说明:&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;lookups: 查询次数&lt;/li&gt;
&lt;li&gt;hits: 命中次数&lt;/li&gt;
&lt;li&gt;hitratio:命中率&lt;/li&gt;
&lt;li&gt;inserts: 插入数量&lt;/li&gt;
&lt;li&gt;evictions:剔除数量&lt;/li&gt;
&lt;/ol&gt;


&lt;h2&gt;缓存配置solrconfig.xml&lt;/h2&gt;

&lt;h3&gt;filterCache 缓存&lt;/h3&gt;

&lt;p&gt;filterCache：当搜索请求参数中带有参数&quot;ids&quot;时，Solr会去filterCache里查，filterCache里Key是query,值是DocSet，，也就是无序的Document id，如果有多个ids里包含多个id，则用分隔符“,”分开。如果filterCache中没有对应的值，则通过reader都查找对应的DocSet，并添加到filterCache缓存中。&lt;/p&gt;

&lt;pre id=&quot;wiki&quot;&gt;
 &amp;lt;filterCache class=&quot;solr.FastLRUCache&quot;
      size=&quot;10240&quot;
      initialSize=&quot;8092&quot;
      autowarmCount=&quot;4096&quot;/&amp;gt;
&lt;/pre&gt;


&lt;h3&gt;queryResultCache 缓存&lt;/h3&gt;

&lt;p&gt;如果搜索请求参数没有ids参数时，则会不去filterCache缓存里找，而且没有Filter时，才是去queryResultCache里查找，queryResultCache里保存的是有序的DocList。在查到docList后，回去取docSet，即会在filterCache中查，没有的话会加到filterCache中，如果queryResultCache缓存中没有值，也先去取docSet，即通过filterCache，没有对应的值的话，则重新构建，添加到缓存中，则通过一般的查找方式找到。然后添加到queryResultCache缓存中。&lt;/p&gt;

&lt;pre id=&quot;wiki&quot;&gt;
&amp;lt;queryResultCache class=&quot;solr.LRUCache&quot;
      size=&quot;1024&quot;
      initialSize=&quot;1024&quot;
      autowarmCount=&quot;512&quot;/&amp;gt;
&lt;/pre&gt;


&lt;h3&gt;documentCache 缓存&lt;/h3&gt;

&lt;p&gt;documentCache 是在通过doc（int i） 方法取document时，用到的。
documentCache 不存在的话，这通过reader去取，取到document后，添加到documentCache 缓存。&lt;/p&gt;

&lt;pre id=&quot;wiki&quot;&gt;
&amp;lt;documentCache class=&quot;solr.LRUCache&quot;
      size=&quot;10240&quot;
      initialSize=&quot;8092&quot;
      autowarmCount=&quot;4096&quot;/&amp;gt;
&lt;/pre&gt;


&lt;h3&gt;fieldValueCache 缓存&lt;/h3&gt;

&lt;p&gt;fieldValueCache 缓存是在solr组件FacetComponent组件里发货作用的。条件是如果要统计的Field是multiValued，也就是有多个值的情况，solr 会根据field创建一个field反正类UnInvertedField，通过注解大概了解是节约内存和加速facet统计。&lt;/p&gt;

&lt;pre id=&quot;wiki&quot;&gt;
&amp;lt;fieldValueCache class=&quot;solr.FastLRUCache&quot;
      size=&quot;512&quot;
      autowarmCount=&quot;128&quot;
      showItems=&quot;32&quot; /&amp;gt;
&lt;/pre&gt;


&lt;h3&gt;httpCache  缓存&lt;/h3&gt;

&lt;p&gt;Solr httpCache 主要是用来判断当前的搜索请求request的请求头header的If-Modified-Since和If-None-Match的两个值。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/11/29/solr-cache/index.html</link>
            <guid>http://demi-panda.com/2012/11/29/solr-cache/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[取消 Google 搜索结果链接重定向 ]]></title>
            <pubDate>Thu, 29 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;Google 是个我用得最多的搜索引擎, 非常好用, 但因为某些原因, 在中国大陆地区表现很差. 我相信经常用谷歌搜索的人会遇到过这样的问题: 在 Google 搜索结果页面点击一些链接后出现网络错误.&lt;/p&gt;

&lt;p&gt;这里要介绍一下 Google 重定向的作用, 带来的问题, 以及消除的方法.&lt;/p&gt;

&lt;h3&gt;搜索结果链接重定向&lt;/h3&gt;

&lt;p&gt;几乎所有的搜索引擎, 包括百度都对搜索结果中的链接进行了重定向. 比如 WordPress 的网站链接是 http://wordpress.org, 但在 Google 页面搜索点进网站时其实进入的链接如下:&lt;/p&gt;

&lt;p&gt;http://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=1&amp;amp;ved=0CDQQFjAA&amp;amp;url=http%3A%2F%2Fwordpress.com%2F&amp;amp;ei=H0ay&lt;/p&gt;

&lt;p&gt;搜索结果的链接会变成 Google 重定向链接, 这个链接最后也会转跳到原网站链接 http://wordpress.org, 如下图.
&lt;img src=&quot;/media/pub/google/google-redirects.png&quot; width=&quot;580px&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h3&gt;重定向带来的问题&lt;/h3&gt;

&lt;p&gt;但因为网络问题和其他一些原因, Google 的服务器在国内访问其实会遇到很多麻烦, 搜索结果经常打不开. 就算你用了某些代理来解决这些问题, 也避免不了网速变慢带来的不愉悦感.&lt;/p&gt;

&lt;p&gt;依我的观察, Google 重定向经历了几个阶段, 最开始的时候是将重定向链接输出到页面上的 (百度和 360 现在就这么干), 如果这样的话我们没有任何办法. 幸好 Google 现在选择用 JavaScript 脚本来处理, 点用户按下鼠标时才跟换 URL 地址, 所以只要我们禁止这个 JavaScript 操作, 就可以避免出现错误页面, 也减免了代理出国再过来的网络开销, 就会变成下图所示.
&lt;img src=&quot;/media/pub/google/direct-links.png&quot; width=&quot;580px&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;p&gt;Google 通过重定向统计搜索结果的点击次数和记录用户的搜索历史, 取消掉重定向将导致用户看不到搜索历史记录.&lt;/p&gt;

&lt;h3&gt;浏览器扩展和插件&lt;/h3&gt;

&lt;p&gt;看了前两段, 也许你觉得这里会有一大段代码, 然后告诉你按某些步骤添加到哪里哪里... 其实没那么复杂, 我也懒得弄. 很多浏览器有类似插件:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Firefox: &lt;a href=&quot;https://addons.mozilla.org/en-us/firefox/addon/google-no-tracking-url/&quot; rel=&quot;external&quot;&gt;Remove google search redirects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chrome: &lt;a href=&quot;https://chrome.google.com/webstore/detail/remove-google-redirects/ccenmflbeofaceccfhhggbagkblihpoh&quot; rel=&quot;external&quot;&gt;Remove Google Redirects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Opera: &lt;a href=&quot;https://addons.opera.com/zh-cn/extensions/details/remove-google-redirects/&quot; rel=&quot;external&quot;&gt;Remove Google Redirects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/11/29/google-redirect/index.html</link>
            <guid>http://demi-panda.com/2012/11/29/google-redirect/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Git常用命令 ]]></title>
            <pubDate>Tue, 27 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;git是一款分布式的版本控制软件，相比SVN，功能更强大，自然而然操作更复杂一些。git在本地也是以git版本库的形式管理，而SVN在本地管理的仅是一个版本库的副本。很明显的一个不同点：git你可以在本地做一些修改，然后commit到本地的版本库，最后push到服务器，而SVN只要一commit，更改就已经提交到服务器。&lt;/p&gt;

&lt;h3&gt;git clone&lt;/h3&gt;

&lt;p&gt;这是较为简单的一种初始化方式，当你已经有一个远程的Git版本库，只需要在本地克隆一份&lt;/p&gt;

&lt;pre&gt;
$ git clone git://github.com/someone/some_project.git some_project
&lt;/pre&gt;


&lt;p&gt;命令就是将&lt;/p&gt;

&lt;pre&gt;
$ git://github.com/someone/some_project.git
&lt;/pre&gt;


&lt;p&gt;这个URL地址的远程版 本库完全克隆到本地some_project目录下面&lt;/p&gt;

&lt;h3&gt;git init和git remote&lt;/h3&gt;

&lt;p&gt;这种方式稍微复杂一些，当你本地创建了一个工作目录，你可以进入这个目录，使用’git init’命令进行初始化，Git以后就会对该目录下的文件进行版本控制，这时候如果你需要将它放到远程服务器上，可以在远程服务器上创建一个目录，并把 可访问的URL记录下来，此时你就可以利用’git remote add’命令来增加一个远程服务器端。&lt;/p&gt;

&lt;pre&gt;
$ git remote add origin git://github.com/someone/another_project.git
#这条命令就会增加URL地址为
git: //github.com/someone/another_project.git
&lt;/pre&gt;


&lt;p&gt;称为origin的远程服务器，以后提交代码的时候只需要使用 origin别名即可.&lt;/p&gt;

&lt;p&gt;现在我们有了本地和远程的版本库，让我们来试着用用Git的基本命令吧：&lt;/p&gt;

&lt;h3&gt;git pull&lt;/h3&gt;

&lt;p&gt;从其他的版本库（既可以是远程的也可以是本地的）将代码更新到本地，例如：&lt;/p&gt;

&lt;pre&gt;
$ git pull origin master
&lt;/pre&gt;


&lt;p&gt;就是将origin这个版本库的代码更新到本地的master主枝，该功能类似于SVN的update&lt;/p&gt;

&lt;h3&gt;git add&lt;/h3&gt;

&lt;p&gt;是将当前更改或者新增的文件加入到Git的索引中，加入到Git的索引中就表示记入了版本历史中，这也是提交之前所需要执行的一步.&lt;/p&gt;

&lt;pre&gt;
$ git add app/model/user.rb
&lt;/pre&gt;


&lt;p&gt;就会增加app/model/user.rb文件到Git的索引中&lt;/p&gt;

&lt;h3&gt;git rm&lt;/h3&gt;

&lt;p&gt;从当前的工作空间中和索引中删除文件&lt;/p&gt;

&lt;pre &gt;
$ git rm app/model/user.rb
&lt;/pre&gt;


&lt;h3&gt;git commit&lt;/h3&gt;

&lt;p&gt;提交当前工作空间的修改内容，类似于SVN的commit命令&lt;/p&gt;

&lt;pre&gt;
$ git commit -m “story #3, add user model”
&lt;/pre&gt;


&lt;p&gt;提交的时候必须用-m来输入一条提交信息&lt;/p&gt;

&lt;h3&gt;git push&lt;/h3&gt;

&lt;p&gt;将本地commit的代码更新到远程版本库中&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$git push origin
&lt;/pre&gt;


&lt;p&gt;将本地的代码更新到名为orgin的远程版本库中&lt;/p&gt;

&lt;h3&gt;git log&lt;/h3&gt;

&lt;p&gt;查看历史日志&lt;/p&gt;

&lt;h3&gt;git revert&lt;/h3&gt;

&lt;p&gt;还原一个版本的修改，必须提供一个具体的Git版本号&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ git revert bbaf6fb5060b4875b18ff9ff637ce118256d6f20
&lt;/pre&gt;


&lt;p&gt;Git的版本号都是生成的一个哈希值&lt;/p&gt;

&lt;p&gt;上面的命令几乎都是每个版本控制工具所公有的，下面就开始尝试一下Git独有的一些命令：&lt;/p&gt;

&lt;h3&gt;git branch&lt;/h3&gt;

&lt;p&gt;对分支的增、删、查等操作&lt;/p&gt;

&lt;pre&gt;
$ git branch new_branch
&lt;/pre&gt;


&lt;p&gt;会从当前的工作版本创建一个叫做new_branch的新分支&lt;/p&gt;

&lt;pre&gt;
$ git branch -D new_branch
&lt;/pre&gt;


&lt;p&gt;就会强制删除叫做new_branch的分支&lt;/p&gt;

&lt;pre&gt;
$ git branch
&lt;/pre&gt;


&lt;p&gt;就会列出本地所有的分支&lt;/p&gt;

&lt;pre&gt;
$ git branch -r 
&lt;/pre&gt;


&lt;p&gt;就会列出远程所有的分支&lt;/p&gt;

&lt;h3&gt;git checkout&lt;/h3&gt;

&lt;p&gt;Git的checkout有两个作用，其一是在不同的branch之间进行切换&lt;/p&gt;

&lt;pre&gt;
$ git checkout new_branch
&lt;/pre&gt;


&lt;p&gt;就会切换到new_branch的分支上去；另一个功能是还原代码的作用&lt;/p&gt;

&lt;pre&gt;
$ git checkout app/model/user.rb
&lt;/pre&gt;


&lt;p&gt;就会将user.rb文件从上一个已提交的版本中更新回来，未提交的内容全部会回滚&lt;/p&gt;

&lt;h3&gt;git rebase&lt;/h3&gt;

&lt;p&gt;用下面两幅图解释会比较清楚一些，rebase命令执行后，实际上是将分支点从C移到了G，这样分支也就具有了从C到G的功能.
&lt;img src=&quot;/media/pub/github/git.jpg&quot; width=&quot;580px&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;h3&gt;git reset&lt;/h3&gt;

&lt;p&gt;将当前的工作目录完全回滚到指定的版本号，假设如下图，我们有A-G五次提交的版本，其中C的版本号是 bbaf6fb5060b4875b18ff9ff637ce118256d6f20，我们执行了’git reset bbaf6fb5060b4875b18ff9ff637ce118256d6f20’那么结果就只剩下了A-C三个提交的版本
&lt;img src=&quot;/media/pub/github/git-reset.jpg&quot; width=&quot;580px&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;h3&gt;git stash&lt;/h3&gt;

&lt;p&gt;将当前未提交的工作存入Git工作栈中，时机成熟的时候再应用回来，这里暂时提一下这个命令的用法，后面在技巧篇会重点讲解&lt;/p&gt;

&lt;h3&gt;git config&lt;/h3&gt;

&lt;p&gt;利用这个命令可以新增、更改Git的各种设置&lt;/p&gt;

&lt;pre&gt;
$ git config branch.master.remote origin
&lt;/pre&gt;


&lt;p&gt;就将master的远程版本库设置为别名叫做origin版本库，后面在技巧篇会利用这个命令个性化设置你的Git，为你打造独一无二的 Git&lt;/p&gt;

&lt;h3&gt;git tag&lt;/h3&gt;

&lt;p&gt;可以将某个具体的版本打上一个标签，这样你就不需要记忆复杂的版本号哈希值&lt;/p&gt;

&lt;pre&gt;
$ git tag revert_version bbaf6fb5060b4875b18ff9ff637ce118256d6f20
&lt;/pre&gt;


&lt;p&gt;来标记这个被你还原的版本，那么以后你想查看该版本时，就可以使用 revert_version标签名，而不是哈希值了&lt;/p&gt;

&lt;p&gt;将tag push到远程&lt;/p&gt;

&lt;pre&gt;
$ git push --tags
&lt;/pre&gt;


&lt;p&gt;删除远程tag&lt;/p&gt;

&lt;pre&gt;
$ git tag -d tagname
#删除本地tag
$ git push origin :refs/tags/tagname
#删除远程tag
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/11/27/git-command/index.html</link>
            <guid>http://demi-panda.com/2012/11/27/git-command/index.html</guid>
            <author>demi-panda</author>
        </item>

        
        <item>
            <title><![CDATA[岳阳楼 ]]></title>
            <pubDate>Mon, 26 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;江南三大名楼之一，北视长江、南望三湘，范仲淹那篇名满天下的《岳阳楼记》着实为岳阳楼做足了广告。
&lt;a href=&quot;http://demi-panda.com/media/pub/life/yueyanglou/yueyanglou.jpg&quot; alt=&quot;岳阳楼&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/yueyanglou/yueyanglou.jpg&quot; width=&quot;580px&quot;/&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;岳阳楼简介&lt;/h3&gt;

&lt;p&gt;岳阳楼耸立在湖南省岳阳市西门城头、紧靠洞庭湖畔。自古有“洞庭天下水，岳阳天下楼”之誉，与江西南昌的滕王阁、湖北武汉的黄鹤楼并称为江南三大名楼。北宋范仲淹脍炙人口的《岳阳楼记》更使岳阳楼著称于世。&lt;/p&gt;

&lt;p&gt;岳阳楼的建筑构制独特，风格奇异。气势之壮阔，构制之雄伟，堪称江南三大名楼之首。岳阳楼为四柱三层，飞檐、盔顶、纯木结构，楼中四柱高耸，楼顶檐牙啄，金碧辉煌．远远而了，恰似一只凌空欲飞的鲲鹏。全楼高达25.35米，平面呈长方形，宽17.2米，进深15.6米，占地251平方米。 　　&lt;/p&gt;

&lt;p&gt;中部以四根直径50厘米的楠木大柱直贯楼顶，承载楼体的大部分重量。再用12根圆木柱子支撑2楼，外以12根梓木檐柱，顶起飞檐。彼此牵制，结为整体，全楼梁、柱、檩、椽全靠榫头衔接，相互咬合，稳如磐石。 　　&lt;/p&gt;

&lt;p&gt;岳阳楼的楼顶为层叠相衬的“如意斗拱”托举而成的盔顶式，这种拱而复翘的古代将军头盔式的顶式结构在我国古代建筑史上是独一无二的。&lt;/p&gt;

&lt;h3&gt;交通&lt;/h3&gt;

&lt;p&gt;公交车:
岳阳市内乘坐1、2、3、4、5、6、7、8、9、15等路公交车均可到达，交通十分便利。&lt;/p&gt;

&lt;p&gt;出租车:
岳阳楼离火车站很近，打车费用在十元钱左右。&lt;/p&gt;

&lt;h3&gt;文化地理&lt;/h3&gt;

&lt;p&gt;岳阳楼屹立于湖南省岳阳市西北的巴丘山下，地面海拔54.3米。景区内陆地东西长约130米，南北长约300米，陆地投影总面积3.9万平方米。前瞰洞庭，背枕金鹗，遥对君山，南望湖南四水，北眈万里长江。它虽在湖南省的北端，但正当中国中部，挨长江、伴洞庭，于洞庭湖居其口，于长江居其中。以水路言，从岳阳出发，上溯长江，经三峡，可通巴蜀；顺长江东下，可达武汉、南京、上海等地，乃至远涉重洋；沿洞庭湖及湘、资、沅、澧四水上溯，可与湖南76个县市相连。以陆路言，紧靠京广铁路、京珠高速公路和107国道，在南北交通干线上亦处中端，极易转入与之相连的其他铁路、公路，通达各省。&lt;/p&gt;

&lt;h3&gt;岳阳楼记&lt;/h3&gt;

&lt;p&gt;岳阳楼真正名闻天下，是在北宋滕子京重修、范仲淹作记之后。庆历四年（1044年），环庆路都部署兼知庆州滕子京因被诬告滥用公使钱被贬知岳州。滕上任后第二年便重修岳阳楼，《涑水纪闻》记载滕宗谅向民间欠钱不还者讨债，讨来的钱有一万缗，就用于修建岳阳楼。并邀请范仲淹作《岳阳楼记》。县志记载，新修的楼台规模宏大，极为壮丽。宋史专家李伟国认为：滕子京“非法集资，私设小金库，还有贪污的嫌疑”。《岳阳楼记》只有360余字，而内容博大，气势磅礴，借景议人，堪称绝响。“先天下之忧而忧，后天下之乐而乐”即出此中。名楼得名记，名声益彰。此后，历宋元明清，代有游人吟咏，不乏佳作。&lt;/p&gt;

&lt;h3&gt;建筑特色&lt;/h3&gt;

&lt;p&gt;岳阳楼的建筑构制独特，风格奇异。气势之壮阔，构制之雄伟，堪称江南三大名楼之首。岳阳楼为四柱三层，飞檐、盔顶、纯木结构，楼中四柱高耸，楼顶檐牙啄，金碧辉煌．远远而了，恰似一只凌空欲飞的鲲鹏。全楼高达25.35米，平面呈长方形，宽17.2米，进深15.6米，占地251平方米。 　&lt;/p&gt;

&lt;p&gt;中部以四根直径50厘米的楠木大柱直贯楼顶，承载楼体的大部分重量。再用12根圆木柱子支撑2楼，外以12根梓木檐柱，顶起飞檐。彼此牵制，结为整体，全楼梁、柱、檩、椽全靠榫头衔接，相互咬合，稳如磐石。 　　
&lt;a href=&quot;http://demi-panda.com/media/pub/life/yueyanglou/yueyanglou-tf.jpg&quot; alt=&quot;岳阳楼&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/yueyanglou/yueyanglou-tf.jpg&quot; width=&quot;580px&quot;/&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;岳阳楼的楼顶为层叠相衬的“如意斗拱”托举而成的盔顶式，这种拱而复翘的古代将军头盔式的顶式结构在我国古代建筑史上是独一无二的。&lt;/p&gt;

&lt;h3&gt;历史介绍&lt;/h3&gt;

&lt;p&gt;东汉末年，孙权的手下大将鲁肃奉命镇守巴丘，操练水军，在洞庭湖接长江的险要地段建筑了巴丘古城。建安二十年（公元215年），鲁肃在巴陵山上修筑了阅军楼，用以 训练和指挥水师。阅军楼临岸而立，登临可观望洞庭全景，湖中一帆一波皆可尽收眼底，气势非同凡响，这座阅军楼就是岳阳楼的前身。　&lt;/p&gt;

&lt;p&gt;阅军楼在两晋、南北朝时被称为巴陵城楼，到唐朝时期方始称岳阳楼&lt;/p&gt;

&lt;p&gt;宋庆历四年（公元1044年），滕子京被贬至岳州，当时的岳阳楼已坍塌，滕子京于庆历五年在广大民众的支持下重建了岳阳楼。 　　&lt;/p&gt;

&lt;p&gt;滕子京重修的岳阳楼，在明崇祯十一年(1639年4月)毁于战火，翌年重修。清代多次进行修缮。清光绪六年(1880年)，知府张德容对岳阳楼进行了一次大规模的整修，将楼址内迁6丈有余。 　　&lt;/p&gt;

&lt;p&gt;岳阳楼在1700余年的历史中屡修屡毁又屡毁屡修。几经风雨沧桑，屡毁屡建，有史可查的修葺共30余次．每次重修后，“则层檐冰阁，岌颂于其上，文人才士登眺而徘徊”；;圮毁之时，“则波巨浪，冲击于其下，迁客骚人矫首而太息”（清朝张德容《重修岳阳楼记》）。 　　&lt;/p&gt;

&lt;p&gt;至民国末年，楼身已经破旧不堪。 　　&lt;/p&gt;

&lt;p&gt;新中国成立后，党和政府对岳阳楼极为珍视，人民政府多次拨款对岳阳楼进行了维修，还修建了怀甫亭、碑廊，重建了三醉亭和仙梅亭等古迹。 　　&lt;/p&gt;

&lt;p&gt;1983年，国务院拨专款对岳阳楼进行了为期一年半的以“整旧如旧”为宗旨的落架大修，把已腐朽的构件按原件复制更新。 　　&lt;/p&gt;

&lt;p&gt;1984年5月1日，岳阳楼大修竣工并对外开放，修复后的岳阳楼保存了清朝的规模、式样和大部分的建筑构件。&lt;/p&gt;

&lt;h3&gt;小贴士&lt;/h3&gt;

&lt;p&gt;去长江三峡游览的游客可以在客轮停泊岳阳城陵矶码头时（会停半天时间），乘当地的旅游客车前往岳阳楼和洞庭湖游览，还有时间可以逛逛当地的庙前街，之后再乘旅游车赶回船上，时间是足够的。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/11/26/yueyangloug/index.html</link>
            <guid>http://demi-panda.com/2012/11/26/yueyangloug/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[SVN merge branche into trunk [分支与合并] ]]></title>
            <pubDate>Mon, 26 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;h3&gt;创建分支的意义&lt;/h3&gt;

&lt;p&gt;创建分支的意义，比如我们在一个基础平台上进行开发，每个技术小组负责一个子项目，而基础平台也是有可能会继续更改的，这个时候，如果不创建分支，子项目之间会相互影响，影响最大的就是后期的测试和版本发布，子项目A已经结束，但测试却受到正在进行的子项目B的影响，测试通不过，就别说版本发布了。所以，我们需要从目前的项目（主干trunk）中创建分支（branch），隔离子项目间的相互影响。&lt;/p&gt;

&lt;h3&gt;创建分支原理&lt;/h3&gt;

&lt;p&gt;在svn中,创建分支，实际上就是一个版本拷贝(对应copy to...注意：绝不是简单在客户端上copy一个目录，而是svn仓库中copy，文件版本号会增加。），两边做任何修改发生的版本变化，是一套机制。举例：目前主干版本是100，分支版本是101，主干中增加一个文件，版本为102，分支中再增加一个文件，版本就为103了。两边的版本号是一套，不会重复。&lt;/p&gt;

&lt;h3&gt;创建分支的方法&lt;/h3&gt;

&lt;pre&gt;
$ svn copy http://svn.example.com/repos/calc/trunk \
           http://svn.example.com/repos/calc/branches/my-calc-branch \
                 -m &quot;Creating a private branch of /calc/trunk.&quot;
&lt;/pre&gt;


&lt;p&gt;从版本库的视点来看，其实这两种方法没有什么区别，两个过程都在版本341建立了一个新目录作为/calc/trunk的一个备份，这些可以在图 4.3 “版本库与复制”看到，注意第二种方法，只是执行了一个立即提交。 [20]这是一个简单的过程，因为你不需要取出版本库一个庞大的镜像，事实上，这个技术不需要你有工作拷贝，这是大多数用户创建分支的方式。&lt;/p&gt;

&lt;h3&gt;图 4.3. 版本库与复制&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/media/pub/svn-branch.png&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;将trunk合并到当前分支&lt;/h3&gt;

&lt;p&gt;前面的78是开分支之前trunk的版本号，后面的83是merge时trunk的版本号&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ cd branches/mybranche
$ svn merge -r 78:83 ../../trunk/
&lt;/pre&gt;


&lt;h3&gt;查看冲突文件&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ svn st|grep ^C
&lt;/pre&gt;


&lt;p&gt;解决冲突后提交&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ svn commit -m &quot;merge trunk in branch&quot;
&lt;/pre&gt;


&lt;h3&gt;从分支merge到trunk&lt;/h3&gt;

&lt;p&gt;先从trunk checkout一份新鲜的代码，然后cd到该版本目录下&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ svn co svn://localhost/www/trunk
#78是分支开始的版本号，226是分支结束的版本号svn merge -r78:226 ../branches/my-calc-branch
$ svn ci -m &quot;MERGE branch my-calc-branch [r78]:[229] into trunk&quot;
&lt;/pre&gt;


&lt;p&gt;SVN
获取某个版本的代码
svn up -r r26&lt;/p&gt;

&lt;h3&gt;创建tags&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ svn mkdir tags
#将备份的版本copy到tags
$ svn copy trunk/ tags/project_0.5
$ svn commit -m &quot;add project_0.5 to tags&quot;
&lt;/pre&gt;



 ]]></description>
            <link>http://demi-panda.com/2012/11/26/subversion-merge/index.html</link>
            <guid>http://demi-panda.com/2012/11/26/subversion-merge/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Linux命令 date详解 ]]></title>
            <pubDate>Mon, 26 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;date命令可以用来显示和修改系统日期时间，注意不是time命令。&lt;/p&gt;

&lt;h3&gt;语法&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
Usage: date [OPTION]... [+FORMAT]
  or:  date [-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]]
&lt;/pre&gt;


&lt;h3&gt;常用参数&lt;/h3&gt;

&lt;p&gt;格式：date 显示当前日期时间&lt;/br&gt;
格式：date mmddHHMM   # 简而言之，就是“月日时分”&lt;/br&gt;
格式：date mmddHHMMYYYY&lt;/br&gt;
格式：date mmddHHMM.SS&lt;/br&gt;
格式：date mmddHHMMYYYY.SS&lt;/br&gt;
设置当前日期时间，只有root用户才能执行，执行完之后还要执行 clock -w 来同步到硬件时钟。
mm为月份，dd为日期，HH为小时数，MM为分钟数，YYYY为年份，SS为秒数。&lt;/p&gt;

&lt;p&gt;格式：date +FORMAT&lt;/br&gt;
根据指定格式显示当前时间。比如 date +%Y-%m-%d 就是以 YYYY-mm-dd 的形式显示当前日期，其中YYYY是年份，mm为月份，dd为日期。&lt;/p&gt;

&lt;h3&gt;常用FORMAT&lt;/h3&gt;

&lt;pre id=&quot;wiki&quot;&gt;
%Y  YYYY 格式的年份（Year）
%m  mm   格式的月份（），01-12
%d  dd   格式的日期（day of month），01-31
%H  HH   格式的小时数（），00-23
%M  MM   格式的分钟数（），00-59
%S  SS   格式的秒数（），00-59
%F  YYYY-mm-dd 格式的完整日期（Full date），同%Y-%m-%d
%T  HH-MM-SS 格式的时间（Time），同%H:%M:%S
%s  自1970年以来的秒数。C函数time(&amp;t) 或者Java中 System.currentTimeMillis()/1000, new Date().getTime()/1000
%w  星期几，0-6，0表示星期天
%u  星期几，1-7，7表示星期天
&lt;/pre&gt;


&lt;p&gt;注意以上格式是可以任意组合的，还可以包括非格式串，比如 date &quot;+今天是%Y-%d-%m，现在是$H:%M:%S&quot;
更多格式 man date 或 info date&lt;/p&gt;

&lt;p&gt;格式：date -d STRING&lt;/br&gt;
格式：date --date=STRING&lt;/br&gt;
格式：date -d STRING +FORMAT&lt;/br&gt;
显示用STRING指定的日期时间（display time described by STRING, not ‘now’）。&lt;/p&gt;

&lt;p&gt;格式：date -s STRING&lt;/br&gt;
格式：date --set=STRING&lt;/br&gt;
设置当前时间为STRING指定的日期时间&lt;/p&gt;

&lt;h3&gt;示例&lt;/h3&gt;

&lt;p&gt;指定日期：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
date -d YYYY-mm-dd
&lt;/pre&gt;


&lt;p&gt;指定时间，日期是今天：&lt;/p&gt;

&lt;pre&gt;
date -d HH:MM:SS
&lt;/pre&gt;


&lt;p&gt;指定日期时间：&lt;/p&gt;

&lt;pre&gt;
date -d &quot;YYYY-mm-dd HH:MM:SS&quot;
&lt;/pre&gt;


&lt;p&gt;指定1970年以来的秒数：&lt;/p&gt;

&lt;pre&gt;
date -d '1970-01-01 1251734400 sec utc'      （2009年 09月 01日 星期二 00:00:00 CST）
date -d '1970-01-01 1314177812 sec utc'      （2011年 08月 24日 星期三 17:23:32 CST）
&lt;/pre&gt;


&lt;p&gt;今天：&lt;/p&gt;

&lt;pre&gt;
date
date -d today
date -d now
&lt;/pre&gt;


&lt;p&gt;明天：&lt;/p&gt;

&lt;pre&gt;
date -d tomorrow
date -d next-day
date -d next-days
date -d &quot;next day&quot;
date -d &quot;next days&quot;
date -d &quot;+1 day&quot;
date -d &quot;+1 days&quot;
date -d &quot;1 day&quot;
date -d &quot;1 days&quot;
date -d &quot;-1 day ago&quot;
date -d &quot;-1 days ago&quot;
&lt;/pre&gt;


&lt;p&gt;昨天：&lt;/p&gt;

&lt;pre&gt;
date -d yesterday
date -d last-day
date -d last-days
date -d &quot;last day&quot;
date -d &quot;last days&quot;
date -d &quot;-1 day&quot;
date -d &quot;-1 days&quot;
date -d &quot;1 day ago&quot;
date -d &quot;1 days ago&quot;
&lt;/pre&gt;


&lt;p&gt;前天：&lt;/p&gt;

&lt;pre&gt;
date -d &quot;2 day ago&quot;
date -d &quot;2 days ago&quot;
date -d &quot;-2 day&quot;
date -d &quot;-2 days&quot;
&lt;/pre&gt;


&lt;p&gt;大前天：&lt;/p&gt;

&lt;pre&gt;
date -d &quot;3 day ago&quot;
date -d &quot;3 days ago&quot;
date -d &quot;-3 day&quot;
date -d &quot;-3 days&quot;
&lt;/pre&gt;


&lt;p&gt;上周，一周前：&lt;/p&gt;

&lt;pre&gt;
date -d &quot;1 week ago&quot;
date -d &quot;1 weeks ago&quot;
&lt;/pre&gt;


&lt;p&gt;上个星期五（不是上周五）：&lt;/p&gt;

&lt;pre&gt;
date -d &quot;last-friday&quot;
date -d &quot;last friday&quot;
&lt;/pre&gt;


&lt;p&gt;上月，一月前：&lt;/p&gt;

&lt;pre&gt;
date -d last-month
date -d last-months
date -d &quot;-1 month&quot;
date -d &quot;-1 months&quot;
&lt;/pre&gt;


&lt;p&gt;下月，一月后：&lt;/p&gt;

&lt;pre&gt;
date -d next-month
date -d next-months
date -d &quot;+1 month&quot;
date -d &quot;+1 months&quot;
&lt;/pre&gt;


&lt;p&gt;去年，一年前：&lt;/p&gt;

&lt;pre&gt;
date -d last-year
date -d last-years
date -d &quot;-1 year&quot;
date -d &quot;-1 years&quot;
&lt;/pre&gt;


&lt;p&gt;明年，一年后：&lt;/p&gt;

&lt;pre&gt;
date -d next-year
date -d next-years
date -d &quot;+1 year&quot;
date -d &quot;+1 years&quot;
&lt;/pre&gt;


&lt;p&gt;一小时前：&lt;/p&gt;

&lt;pre&gt;
date -d &quot;last-hour&quot;
date -d &quot;last-hours&quot;
date -d &quot;1 hour ago&quot;
date -d &quot;1 hours ago&quot;
&lt;/pre&gt;


&lt;h3&gt;监控进程使用server负载&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
#记录server load-avg(1m,5m,10m),cpu (user,system),mem (total,used)
echo &quot;current_time : `date '+%F %T'` this crawler rounds $total_rounds pid is $crawl_pid,do runing&quot;
echo &quot;current_time : `date '+%F %T'` this crawler rounds $total_rounds pid is $crawl_pid,do runing&quot; &gt;&gt; $console_log
cpu_info=`top -b  -n 1 | grep  &quot;Cpu(s)&quot; | awk '{print $2 $3}'`
mem_info=`top -b  -n 1 | grep  &quot;Mem&quot; | awk '{print $2,$3,$4,$5}'`
top_info=`top -b  -n 1 | grep  &quot;top -&quot; | awk '{print $8 $9,$10,$11,$12}'`
process_mem=`top -p $crawl_pid -d 1 -b -c  -n 1 | grep $crawl_pid | awk '{print $6}'`
echo &quot;Load-avg : $top_info &quot; &gt;&gt; $console_log
echo &quot;Cpu_info : $cpu_info &quot; &gt;&gt; $console_log
echo &quot;Mem_info : $mem_info &quot; &gt;&gt; $console_log
echo &quot;Pro_use_mem : $process_mem &quot; &gt;&gt; $console_log
echo &quot;Load-avg : $top_info &quot;
echo &quot;Cpu_info : $cpu_info &quot;
echo &quot;Mem_info : $mem_info &quot;
echo &quot;Pro_use_mem  : $process_mem &quot;
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/11/26/linux-date/index.html</link>
            <guid>http://demi-panda.com/2012/11/26/linux-date/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[舜皇岩 ]]></title>
            <pubDate>Mon, 26 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;舜皇岩相传是舜皇的地下别宫，人称神秘之境。它位于东安县舜皇山东麓，大庙口八旗田洞中的一座独立的大石山内，相传舜帝晚年南巡至东安，见该地重变叠嶂，青秀挺拔，流水明净，田园如画，被吸引进山巡视和狩猎，便在此最高的山峰定居下来。&lt;/p&gt;

&lt;h3&gt;舜皇岩 - 简介&lt;/h3&gt;

&lt;p&gt;舜皇岩位于湖南省东安县大庙口乡，在一座独立的石山内，是一个大溶洞，长900m，宽数十米，总面积1.2万m2，上下五层。洞内钟乳石千姿百态，雄奇瑰丽，有啸岩、幽岩、九龙岩、峨嵋岩、兵书峡等洞中胜景，全由方解石、白云石和石英岩组成，自、黄、蓝、紫、红五色俱全。洞内有四宫十八殿，在椭圆形大厅内，有玉石塔，塔高约20m，有小道可上塔顶，厅前有一宽敞的舞台，殿内玉桂林立，有石荷、玉床，人称“后宫”。岩周围有可供游览的大小溶洞30个，现在保护状况良好，已经开发且对外开放。&lt;/p&gt;

&lt;h3&gt;舜皇岩 - 历史典故&lt;/h3&gt;

&lt;p&gt;相传舜帝晚年南巡至东安，见该地重变叠嶂，青秀挺拔，流水明净，田园如画，被吸引进山巡视和狩猎，便在此最高的山峰定居下来，因而该山得名曰舜皇山。《史记五帝本》记：“江南有十峰，而舜峰高矣”。湖南省《一统志》永州府《文艺志》载：“永之东安有舜峰、玉陛源、皆祀有虞氏，东安近九嶷，因舜南巡狩所经也”。舜旅居舜皇山期间，经常下山视察民情，为方便起见，特修建了这座地下别宫。&lt;/p&gt;

&lt;h3&gt;舜皇岩 - 景观介绍&lt;/h3&gt;

&lt;p&gt;舜皇岩位于东安县舜皇山东麓，离湘桂铁路紫溪市站10公里，距县城30公里。
&lt;a href=&quot;http://demi-panda.com/media/pub/life/dongan/shunhuangyan-min.jpg&quot; alt=&quot;舜皇岩&quot; rel=&quot;prettyPhoto[201211262030]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/dongan/shunhuangyan-min.jpg&quot; alt=&quot;舜皇岩&quot; class=&quot;img-right&quot; width=&quot;330px&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;洞长760米左右，总面积1万多平方米。有四宫十八殿，每宫周围都有许多小洞，形成洞中有洞。整个岩洞无论是远看近看，所有石柱、石笋、石幔和钟乳石怪异多姿。中宫有个顶天立地的大石柱，高14米，围44米，雄姿巍巍；前宫有块石幔，自顶穹直泻而下，如万丈瀑布，奔腾不息。大岩洞之内，充满了自然美景，形象逼真，变幻无穷。这里既有平坦宽阔的大厅，又有蜿蜒曲折的小径；既有绿树成荫的“山林”，又有清澈见底的水潭；既有步步登高的“神梯”，又有横跨云端的“天桥”，还有“瑞狮朝阳”、“玉纱琼阁”等景。上上下下，千回百转，游人如临仙境一般。&lt;/p&gt;

&lt;p&gt;在舜皇山的苍松翠柏之间，掩映着大大小小为数众多的舜庙。山麓和玉陛沅的舜庙，原有大型尧、舜塑像，据碑文推算，已有一千六百多年历史。扬江河口的舜庙最大。庙中有游亭、屋宇，庙前有戏台，并有两具石狮；古碑较多；可惜现已全毁，唯余两块面古碑文，记载着舜庙的来历及当年的盛况。
相传舜皇晚年南巡至东安西北边境，见这里重峦叠嶂、山青水秀、风景如画,便驻跸于此，白天在山上狩猎，晚上在山脚溶洞歇息。舜帝狩猎的地方，就是今天的舜皇山；舜帝歇息的地方，就是这座瑶池别宫——舜皇岩——“老百姓最喜欢的湖南百景”之一。&lt;/p&gt;

&lt;p&gt;舜皇岩是一座神秘瑰奇的喀斯特溶洞，具有很高的科研和观赏价值。它位于舜皇山东麓，距大庙口镇不到一公里，现在我们所看到的这座相对独立的石岭腹内，为楼厅式溶岩，有四宫十八殿景观。溶洞全长700多米，总面积约18000平方米。1984年2月当地百姓偶然发现，才让这沉睡地下千万年的“瑶池别宫”重见天日。&lt;/p&gt;

&lt;p&gt;洞口上方“舜皇岩”三个大字，是由已故中国佛教协会主席、著名书法家赵朴初先生的亲笔题写，笔墨饱满，遒劲有力，增添了岩洞的人文之美。现在，进洞，从前宫、中宫、后宫、西宫，依次品读舜皇岩瑰奇绚丽的无言大美!&lt;/p&gt;

&lt;h3&gt;前 宫&lt;/h3&gt;

&lt;p&gt;舜皇岩是一座古老的溶岩，已发育上亿年之久。洞内遍布由石灰质溶液凝结而成的石钟乳，色彩绚丽，姿态万千。石柱、石笋、石花、石幔、石兽等象形景观，栉比鳞次，令人目不暇接，让你不能不为大自然的鬼斧神工而叹为观止。据地质学家考证，这里曾经历过一系列的地质构造运动，在沉积了大量可熔性强的石灰岩和白云岩地层后，经过漫长的地质年代孕育，并受地下岩溶水的作用，各类钟乳石开始生长，便形成了千姿百态的溶洞奇观。　
&lt;a href=&quot;http://demi-panda.com/media/pub/life/dongan/qiangong.jpg&quot; alt=&quot;舜皇岩&quot; rel=&quot;prettyPhoto[201211262030]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/dongan/qiangong.jpg&quot; alt=&quot;舜皇岩&quot; class=&quot;img-right&quot; width=&quot;330px&quot; /&gt;
&lt;/a&gt;
沿着石阶蜿蜒而下约30米，呈现在大家眼前的便是前宫了，又叫迎宾殿。大家看头顶上，岩洞的穹顶上描绘着五彩缤纷的石乳、石幔，好似朵朵彩云，道道霞光。而“云霞”之下，那高高低低的钟乳石，活像一支浩浩荡荡的迎宾队伍，这是舜帝的礼乐队在迎接各位的到来。各位可是受到了很高的礼遇哦！&lt;/p&gt;

&lt;p&gt;大家看这里，还有一只半卧着的雄师，它昂首张口，仰视朝阳，威风凛然，在它的后面是两棵形似古柏的石树，亭亭挺立，分居两旁，犹如两位迎宾丽人恭候各位到来，我们称它为“古柏迎宾”。古柏的下面，便是各路仙家聚会的地方。瞧！一泻千里的庐山瀑布也被搬到了这里，悬挂在客厅的玉壁上，使整个迎宾殿显得金碧辉煌，光彩夺目。
再看瀑布下面，有一个深洞和一条银河。深洞旁竖立着一根石棒，据说是美猴王从东海借来的“定海神针”收藏在此呢!左岸便是银河，美猴王留下一只猴孙，日夜守护着“神针”。看！此刻它正忘情的在银河中戏水游玩，所以又叫做“神猴戏水”。&lt;/p&gt;

&lt;p&gt;穿过大殿中央来到舜山殿。进口处竖立着一面旌旗，前部的顶上悬挂着一盏宫灯，光芒四射，照着双龙戏珠。无数的游仙站在仙人掌上观看龙灯。对面就是浓缩在别宫里的舜皇山，它古木苍天，神秘莫测。对面是金鸡岭，那里土地肥沃，物产丰富。当然，现实中的舜皇山更是雄伟壮观，主峰高达1882.4米，有“天设湖南第一峰”之誉。顶峰的石壁上刻有“舜峰绝顶”四个大字。舜皇山现已开辟为国家级森林公园，大家一定要抽时间去身临其境一回，那里的山水美景一定会让你留连忘返的。&lt;/p&gt;

&lt;p&gt;这里还有一座宝塔。它有什么作用?对了,压邪镇妖!请看，有只癞蛤蟆被舜皇压在这座宝塔下了,它究竟犯了什么罪呢?大家应该听说过癞蛤蟆想吃天鹅肉的故事吧!肯定是癞蛤蟆偷吃了天鹅肉，才被舜帝压在这里的。我们再看殿顶上，那里有无数的奇花异卉，争妍斗艳。看！无数仙女都被吸引过来观花了呢！请看那一对装满了鲜花的花瓶，那可是当年舜皇在河滨作陶器时所做的，手艺还不错吧，看来我们永州被称作“中华陶文化发源地”是名副其实的了。&lt;/p&gt;

&lt;h3&gt;中 宫&lt;/h3&gt;

&lt;p&gt;绕过“水帘洞”，穿过“独木桥”，进到了中宫。
这里是舜皇岩的主宫，更是舜皇岩的精品。它把龙虎堂、御膳厅、瑶池洞，千佛洞、舜乐厅、御花园、珍珠库和舜皇殿等八大殿，合并在一个底面积约为4000多平方米的空间里，组成一个雄浑、壮观而又气派的整体。在宫中的中堂有一根高14米、围径4.4米的擎天玉柱，大家可以试试，看需要几个人才能抱住？它可是国内溶洞所罕见的景象。玉柱赫然矗立着，似乎在告诉世人舜帝的一生，就是这样顶天立地的。
&lt;a href=&quot;http://demi-panda.com/media/pub/life/dongan/zhonggong.jpg&quot; alt=&quot;舜皇岩&quot; rel=&quot;prettyPhoto[201211262030]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/dongan/zhonggong.jpg&quot; alt=&quot;舜皇岩&quot; class=&quot;img-right&quot; width=&quot;330px&quot; /&gt;
&lt;/a&gt;
这里有一只下山猛虎，西方有一条白龙。这标志着舜皇岩的中宫，是龙盘虎踞之地。请大家再仔细看看，猛虎上方还有千年古化石恐龙的遗迹，不难看出它的悠久历史了。在入口处有“银花”和“金果”两棵石树，分立两旁。银花，形似珊瑚，吸引着仙蜂采蜜。金果树，现在是硕果累累，相传它八千年开花，八千年结果。再看北面，石台上有一个千佛洞。据说舜庙被毁后，庙里的伏羲氏、神农氏、遂神氏神佛全部来此洞修身养性。&lt;/p&gt;

&lt;p&gt;在千佛洞门口的平台上，还站着两个身着银白色的衣裙仙妇，她们手挽手并肩站立似乎在啼哭，各自神情充满了无限的惆怅。这两位便是舜皇的妻子——尧帝的两个女儿——娥皇和女英。传说舜皇晚年南巡来到舜皇山，见这里风景幽美，民风淳朴，布施了十件宝物，惠泽地方，准备在此坐地成仙，安享晚年。于是传讯娥皇、女英前来团聚。后来，在夜梦中受到盘古大帝的启示，放弃了在舜皇山成仙的打算，到九疑山去斩杀孽龙，以致劳累而死。当娥皇、女英赶到舜皇山时，遍寻夫君不得。最后，听说舜帝已死在了九疑山，不禁悲痛欲绝，流泪不止，于是在舜皇山中留下了斑竹和娥皇女英二溪，又到九疑山去寻夫。现在我们看到的这幅图画，就是娥皇、女英二妃——“帝子乘风下翠微”的肖像。&lt;/p&gt;

&lt;p&gt;千佛洞内还有御膳厅，陈列着金盆银碗、玉磨铜锅和天工配造的瑶池。每年农历八月十二日是舜皇的生日，人间百姓，舞龙耍狮，进行纪念。这一天，太空的仙家和人间百姓纷纷前来朝拜。您看，楼阁内外，群仙挤挤，众仙簇簇，他们谈天说地，道古话今，好不热闹！再看，那张石凳上坐满了游客来宾，从那一张张欢畅的神情中，不难看出大家都沉浸在寿宴的喜气中。据说历代先朝，每到这一天，都派钦差大臣亲临祭典。每年的农历八月十二日开放。&lt;/p&gt;

&lt;p&gt;中宫右侧的上方，这里有一个天文台，它是舜皇预测天气的“地动仪”，也是供禹皇治水多用之物，上面有金蟾、龙蛇……等动物。中宫的南方是“舜乐厅”。舜帝一生喜爱音乐，在工作生活烦闷无聊之余，借以消愁。尧帝得知他这一爱好，在两个女儿出嫁时，特赐给舜帝一张古琴。舜帝做了天子后，叫乐师整理琴曲，创作出《九韶》，又名《萧韶》，这种乐曲演奏起来，悠扬婉转，扣人心弦，好似鹦鹉在歌唱，相传连天上的凤凰也都被吸引来朝见舜皇呢！在萧韶厅的门口，有两根玉烛，昼夜长明，永不熄灭。
萧韶厅门前的石壁上，有一幅花果山的版画。无数奇花异果，都在这里聚集媲美。在版画的西北方，有一石滩。石滩下，有一只龙虾正预备上滩。石滩上方，有一只白鹤，正在展翅振翼，在此祝福各位身体健康，鹏程万里。&lt;/p&gt;

&lt;h3&gt;后 宫&lt;/h3&gt;

&lt;p&gt;从中宫攀金藤、扶玉笋，绕过崎岖的山岗，登上“五尺神梯”，到了后宫。
&lt;a href=&quot;http://demi-panda.com/media/pub/life/dongan/IMG_1659.JPG&quot; alt=&quot;舜皇岩&quot; rel=&quot;prettyPhoto[201211262030]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/dongan/IMG_1659.JPG&quot; alt=&quot;舜皇岩&quot; class=&quot;img-right&quot; width=&quot;330px&quot; /&gt;
&lt;/a&gt;
后宫面积5000多平方米，有御花园、玉石走廊、舜皇殿、珍珠洞、天宁寺等景观。我们现在走进的是御花园。御花园里古木苍天，花卉奇异，有桂花、杜鹃花、山茶花，其中山茶花最多最美。太空中的游仙，人间的众神，每次来朝拜舜皇时，无不来此观花。因这些花实在太美太奇太珍贵了，所以舜帝特意派了一只小神猴在此看管着御花园。看来齐天大圣的子孙后代们日子过的挺滋润的啊！&lt;/p&gt;

&lt;p&gt;御花园侧有一条御河，清澈的河水自西向东长流入珍珠洞。珍珠洞周围的建筑特别牢固，胜过铜墙铁壁，只有进出两个口子。洞内珍珠成堆，闪闪发光，可惜我们没法进去。接下来我们来到的是舜皇殿，它庄严幽深，四壁琳琅满目，处处五彩缤纷，这座神龛上坐着的人就是威严慈祥的舜皇，旁边是舜皇的妻子，她那天然的卷发和得体的纱裙，真是漂亮极了。她的怀里还抱着刚满月的太子，后面站立的是文武百官。舜皇是我国古代五帝之一，三十岁就开始治理国政，他曾经推举高阳士的八位才子去当了地方官员，又推举高辛士的八位才子主管政务。五十岁开始代行天子执政，设法典、惩五刑，除四凶。六十一步蹬天子位。舜皇重礼守信，非常重视农业生产和体恤民情，对自己和其他官员都要求非常严格，为当地百姓做了许许多多好事实事，深受人们敬仰！这里有烧香用的香炉，如果哪位朋友也对舜皇怀有崇敬之情，可以在这里烧香拜祭，为我们道德文化的鼻祖敬上一柱心香！&lt;/p&gt;

&lt;p&gt;舜皇殿前有两根巨大的顶宫玉柱，左右两边有数对盘龙玉柱。殿的顶篷上雕刻着龙盘凤舞的各种花纹，顶部嵌着一快大青石，上面记述了舜皇南巡时的一些事迹，由于年深月久，笔画模糊，字迹难辨，但仍然隐约可见。我们看左侧，那里是玉石走廊，栏杆由翠绿、天兰等五颜六色的玉柱组成，其中最美的是御花园出口处的白玉栏杆，光滑透明，洁白可爱。游廊两边松柏树，枝叶交接，覆盖上空，避日遮霜。所以，舜皇岩内，盛夏无溽暑之苦，严冬无寒冷之虞&lt;/p&gt;

&lt;p&gt;看过舜皇殿后，来到了天宁寺。这里地势险要，石塔林立，相传唐武宗时，尊道贬佛，南北少林寺均被毁，僧人被逐，其中一位老和尚同几位师弟逃到东安，传艺为生，见舜皇岩内幽雅清净，便借居于此，练功养性，最后相继坐化于此地，造此塔陵。至今，在塔陵周围还有许多梅花桩，那是他们当年练武的古迹。所以东安武术乃是渊源于少林武功，至今东安仍有“武术之乡”的美称。&lt;/p&gt;

&lt;h3&gt;西 宫&lt;/h3&gt;

&lt;p&gt;从天宁寺盘旋而下，进入到西宫。
&lt;a href=&quot;http://demi-panda.com/media/pub/life/dongan/hougong.jpg&quot; alt=&quot;舜皇岩&quot; rel=&quot;prettyPhoto[201211262030]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/dongan/hougong.jpg&quot; alt=&quot;舜皇岩&quot; class=&quot;img-right&quot; width=&quot;330px&quot; /&gt;
&lt;/a&gt;
首先看到的就是观景厅。厅内高高低低，大大小小，远远近近的石乳，参差不齐的石柱、石笋、石林，疏疏密密，粗粗细细，苍苍莽莽。粗一看，山连山，峰连峰，重峦叠嶂，云雾缭绕；细一瞧，几道似玉带般洁白的石幔从山谷中蜿蜒铺下，宛若山溪淙淙流水。再看山溪两旁，下面往上长的叫石笋，上面倒挂往下长的叫石钟乳。乍看它们的表层之处是灰色，因为长期裸露，被空气氧化，使它们失去了原来的光泽；细看它们内部的颜色是乳白色，因为它的主要成分是碳酸钙。&lt;/p&gt;

&lt;p&gt;这是一块会发出声音的钟乳石，只要用手轻轻一敲，高低不同的声音就会发出来，很像钟声。那么，有朋友肯定会疑惑为什么它会发出这种像钟一样的声音呢？如果大家仔细观察，就会发现这些钟乳石实际上都有小孔，岩溶水就是顺着这个小孔渗透下来，钟乳石才会往下生长。根据地质学家的考证，钟乳石的生长速度非常非常地缓慢，要100年左右才会长一厘米。那么大家现在看到的这石钟乳已有好几厘米了，所以也不难推算出它的“年龄”来。
接下来，前往深山老林。穿过深山老林，就是舜皇的寝宫了。这里群阁耸立，垂帘犹如玉纱，形若缧帐，十分美观吧，这就是“玉纱琼阁”。
走出“玉纱琼阁”，穿过峡谷，便来到了仙人桥。这座桥是青石结构，长10米，宽3米。离仙人桥，过长道，便进入了仙人洞。仙人洞内有寿星老仙为大家祈福。再往前行数步，便可见八仙过海，各显神通。&lt;/p&gt;

&lt;h3&gt;舜皇岩 - 旅游线路&lt;/h3&gt;

&lt;p&gt;舜皇山二日精华游
第一天：中餐后（下午）爬“湖南第一峰舜皇山主峰”，体会原生态精品路线。观女英浴池、宫娥瀑布、双龙潭、女英织锦瀑、进入古林世界、赏奇珍异兽、五针松林、及藤树难分景观、尽情享受天然氧吧！
第二天：早餐后（上午）游“蝴蝶王国”蝴蝶谷，漫步溪涧泉边，可见成群的蝴蝶，上下翻飞，翩跹起舞。那斑斓的色彩，那优雅的舞姿，令人沉醉东风，忘却归路。中餐后（下午）前往盘古庙叩拜盘古大帝。进入舜皇岩洞穴觅幽，然后返回，结束愉快旅程。&lt;/p&gt;

&lt;h3&gt;舜皇岩 - 旅游信息&lt;/h3&gt;

&lt;h4&gt;费用&lt;/h4&gt;

&lt;p&gt;舜皇岩门票：40元/人&lt;br&gt;
客房价格： &lt;br&gt;
豪华单人间298元/间 &lt;br&gt;
豪华情侣楼（吊楼单间）208元/间 &lt;br&gt;
标准双人间198元/间 &lt;br&gt;
标准单人间198元/间 &lt;br&gt;&lt;/p&gt;

&lt;h4&gt;注意事项&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;舜皇山旅游景区未开发在段海拔较高,最高峰1882.4米，禁止旅客私自进入；&lt;/li&gt;
&lt;li&gt;景区海拔较高，每年3-7月是雨季，应带好雨具和常用药品,昼夜温差大,需备御寒衣物。&lt;/li&gt;
&lt;li&gt;在高海拔地区,宜少饮酒,多食蔬菜、水果。 &lt;/li&gt;
&lt;li&gt;请尊重当地居民的生活和信仰,避免与当地居民发生冲突；购物时最好能听从导游人员的建议,以免发生不必要的纠纷。&lt;/li&gt;
&lt;/ol&gt;



 ]]></description>
            <link>http://demi-panda.com/2012/11/26/dongan-shunhuangyan/index.html</link>
            <guid>http://demi-panda.com/2012/11/26/dongan-shunhuangyan/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Solr 伸缩性和分布式介绍 ]]></title>
            <pubDate>Sun, 25 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;h3&gt;分布式解决的问题：&lt;/h3&gt;

&lt;p&gt;当搜索执行的时间太长，或者索引太大，此时要考虑使用 solr 的分布式了。solr 分布式中，将一个大的索引分成几个小的索引（shards，分片），放在不同的机器上。当执行搜索时，将查询划分成多个子查询，在不同机器的索引库中执行搜索，然后将查询结果合并。这个拆分查询和合并结果的过程对用户是透明了。&lt;/p&gt;

&lt;h3&gt;索引复制解决的问题：&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;当单机的查询性能不济时，可以考虑复制出多台索引来分别承担压力，如做一个全国性的搜索，可以将索引库复制30来个，每个省分一个，每个省请求过来时，分别在自己省所分配的索引库中进行搜索
&lt;/li&gt;
&lt;li&gt;
将索引的读写分离，也可以很好的提供性能。由一个负责写索引，然后同步到其他索引，其他索引只读，仅提供搜索。
&lt;/li&gt;
&lt;li&gt;备份索引，详见利用 Replication Handler 备份索引&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;参考：http://wiki.apache.org/solr/DistributedSearch&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/11/25/solr-shards/index.html</link>
            <guid>http://demi-panda.com/2012/11/25/solr-shards/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Solr集群Replication配置与实践 ]]></title>
            <pubDate>Sun, 25 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;Solr作为一个搜索服务器，在并发搜索请求的场景下，可能一台服务器很容易就垮掉，这是我们可以通过使用集群技术，设置多台Solr搜索服务器同时对外提供搜索服务，在前端使用类似Nginx的负载均衡软件，可以通过配置使得并发到达的搜索请求均匀地反向代理到Solr集群中的每一台服务器上，这样每台Solr搜索服务器搜索请求的压力可以大大减小，增强了每台服务器能够持续提供服务器的能力。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;然而，这时我们面临的问题有：&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;集群中的每台服务器在线上要保证索引数据都能很好地的同步，使得每台搜索服务器的索引数据在一定可以承受的程度上保持一致性；
&lt;/li&gt;
&lt;li&gt;集群中某台服务器宕机离线，人工干预重启后继续与集群中其它服务器索引数据保持一致，继续提供搜索服务；
&lt;/li&gt;
&lt;li&gt;集群中某台服务器的索引数据，由于硬盘故障或人为原因无法提供搜索服务，需要一种数据恢复机制；
&lt;/li&gt;
&lt;li&gt;集群中最先接受数据更新的Master服务器，在将索引更新传播到Slave服务器上时，避免多台Slave服务器同一时间占用大量网络带宽，从而影响了Master提供搜索服务。
&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;事实上，Solr框架在上面的几个方面都能做到不错的支持，具有很大的灵活性。基于上述的几个问题，我们来配置Solr集群的Replication，并实践集群复制的功能。&lt;/p&gt;

&lt;h3&gt;结构图&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/media/pub/solr/solr-replication.png&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h3&gt;配置&lt;/h3&gt;

&lt;p&gt;ReplicationHandler是个RequestHandler，如果需要使用它，也就是在solrconfig.xml中配置它，下面介绍ReplicationHandler的配置参数。&lt;/p&gt;

&lt;h4&gt;master&lt;/h4&gt;

&lt;p&gt;master的配置示例如下：&lt;/p&gt;

&lt;pre id=&quot;wiki&quot;&gt;
&amp;lt;requestHandler name=&quot;/replication&quot; class=&quot;solr.ReplicationHandler&quot; &amp;gt;
  &amp;lt;lst name=&quot;master&quot;&amp;gt;
    &amp;lt;str name=&quot;replicateAfter&quot;&amp;gt;startup&amp;lt;/str&amp;gt;
    &amp;lt;str name=&quot;replicateAfter&quot;&amp;gt;commit&amp;lt;/str&amp;gt;
    &amp;lt;str name=&quot;confFiles&quot;&amp;gt;schema.xml,stopwords.txt&amp;lt;/str&amp;gt;
  &amp;lt;/lst&amp;gt;
&amp;lt;/requestHandler&amp;gt;
&lt;/pre&gt;


&lt;p&gt;&lt;em&gt;说明：&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;replicateAfter可取startup、commit、optimize，表示触发复制的时机。使用中，这三个值都可以配上。&lt;/li&gt;
&lt;li&gt;confFiles表示在复制时需要将配置文件复制到slave的文件列表。&lt;/li&gt;
&lt;/ol&gt;


&lt;h4&gt;slave&lt;/h4&gt;

&lt;p&gt;Slave的配置示例如下：&lt;/p&gt;

&lt;pre id=&quot;wiki&quot;&gt;
&amp;lt;requestHandler name=&quot;/replication&quot; class=&quot;solr.ReplicationHandler&quot; &amp;gt;
  &amp;lt;lst name=&quot;slave&quot;&amp;gt;
     &amp;lt;str name=&quot;masterUrl&quot;&amp;gt;http://master_host:port/solr/corename/replication&amp;lt;/str&amp;gt;
     &amp;lt;str name=&quot;pollInterval&quot;&amp;gt;00:30:00&amp;lt;/str&amp;gt;
     &amp;lt;str name=&quot;httpConnTimeout&quot;&amp;gt;5000&amp;lt;/str&amp;gt;
     &amp;lt;str name=&quot;httpReadTimeout&quot;&amp;gt;10000&amp;lt;/str&amp;gt;
  &amp;lt;/lst&amp;gt;
&amp;lt;/requestHandler&amp;gt;
&lt;/pre&gt;


&lt;p&gt;&lt;em&gt;说明：&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;上面的参数也不需要太多解释，其中pollInterval参数表明slave从master复制数据的频率。如果对实时性要求不高，通常5-10分钟即可，也避免slave的indexsearcher频繁的切换，同时，master的commit频率也可相对保持一致。&lt;/p&gt;

&lt;h3&gt;ReplicationHandler 的 HTTP API&lt;/h3&gt;

&lt;p&gt;可以通过以下 HTTP 命令来控制 ReplicationHandler 的操作&lt;/p&gt;

&lt;pre&gt;
http://master_host:port/solr/replication?command=enablereplication
&lt;/pre&gt;


&lt;p&gt;使主服务器的复制可用&lt;/p&gt;

&lt;pre&gt;
http://master_host:port/solr/replication?command=disablereplication
&lt;/pre&gt;


&lt;p&gt;使主服务器的复制不可用&lt;/p&gt;

&lt;pre&gt;
http://host:port/solr/replication?command=indexversion
&lt;/pre&gt;


&lt;p&gt;获得主服务器或从服务器最新的索引版本&lt;/p&gt;

&lt;pre&gt;
http://slave_host:port/solr/replication?command=fetchindex
&lt;/pre&gt;


&lt;p&gt;强制从服务器从主服务器拉取索引，该过程可以传递 &amp;lt;lst name=”slave”&amp;gt; 下的参数，如主服务的url、压缩参数等&lt;/p&gt;

&lt;pre&gt;
http://slave_host:port/solr/replication?command=abortfetch
&lt;/pre&gt;


&lt;p&gt;让某从服务器不再从主服务器拉取索引&lt;/p&gt;

&lt;pre&gt;
http://slave_host:port/solr/replication?command=enablepoll
&lt;/pre&gt;


&lt;p&gt;使某从服务器可以从主服务器拉取修改的索引&lt;/p&gt;

&lt;pre&gt;
http://slave_host:port/solr/replication?command=details
&lt;/pre&gt;


&lt;p&gt;返回配置和当前状态&lt;/p&gt;

&lt;pre&gt;
http://host:port/solr/replication?command=filelist&amp;indexversion=&amp;lt;index-version-number&amp;gt;
&lt;/pre&gt;


&lt;p&gt;返回指定主机的索引文件列表，可以指定版本号&lt;/p&gt;

&lt;pre&gt;
http://master_host:port/solr/replication?command=backup
&lt;/pre&gt;


&lt;p&gt;如果有新的commit，将备份索引库，该命令在阶段备份索引时很有用&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/11/25/solr-replication/index.html</link>
            <guid>http://demi-panda.com/2012/11/25/solr-replication/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[版本管理策略 ]]></title>
            <pubDate>Thu, 22 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;h2&gt;GNU 风格的版本号命名格式&lt;/h2&gt;

&lt;p&gt;主版本号 . 子版本号 [. 修正版本号 [. 编译版本号 ]]&lt;/p&gt;

&lt;p&gt;英文对照 : Major_Version_Number.Minor_Version_Number[.Revision_Number[.Build_Number]]&lt;/p&gt;

&lt;p&gt;示例 : 1.2.1,2.0,5.0.0 build-13124&lt;/p&gt;

&lt;p&gt;二、 Windows 风格的版本号命名格式
主版本号 . 子版本号 [ 修正版本号 [. 编译版本号 ]]&lt;/p&gt;

&lt;p&gt;英文对照 : Major_Version_Number.Minor_Version_Number[Revision_Number[.Build_Number]]&lt;/p&gt;

&lt;p&gt;示例： 1.21,2.0&lt;/p&gt;

&lt;h2&gt;版本号管理策略&lt;/h2&gt;

&lt;h3&gt;GNU 风格的版本号管理策略&lt;/h3&gt;

&lt;p&gt;1．项目初版本时，版本号可以为 0.1 或 0.1.0，也可以为 1.0 或 1.0.0，如果你为人很低调，我想你会选择那个主版本号为 0 的方式 ;&lt;/p&gt;

&lt;p&gt;2．当项目在进行了局部修改或 bug 修正时，主版本号和子版本号都不变，修正版本号加 1;&lt;/p&gt;

&lt;p&gt;3．当项目在原有的基础上增加了部分功能时，主版本号不变，子版本号加 1，修正版本号复位为 0，因而可以被忽略掉 ;&lt;/p&gt;

&lt;p&gt;4．当项目在进行了重大修改或局部修正累积较多，而导致项目整体发生全局变化时，主版本号加 1;&lt;/p&gt;

&lt;p&gt;5．另外，编译版本号一般是编译器在编译过程中自动生成的，我们只定义其格式，并不进行人为控制 .&lt;/p&gt;

&lt;h3&gt;Window 下的版本号管理策略&lt;/h3&gt;

&lt;p&gt;1．顶目初版，版本号为 1.0 或 1.00;&lt;/p&gt;

&lt;p&gt;2．当项目在进行了局部修改或 bug 修正时，主版本号和子版本号都不变，修正版本号加 1;&lt;/p&gt;

&lt;p&gt;3．当项目在原有的基础上增加了部分功能时，主版本号不变，子版本号加 1，修正版本号复位为 0，因而可以被忽略掉 ;&lt;/p&gt;

&lt;p&gt;4．当项目在进行了重大修改或局部修正累积较多，而导致项目整体发生全局变化时，主版本号加 1;&lt;/p&gt;

&lt;p&gt;5．另外，编译版本号一般是编译器在编译过程中自动生成的，我们只定义其格式，并不进行人为控制 .&lt;/p&gt;

&lt;p&gt;另外，还可以在版本号后面加入 Alpha,Beta,Gamma,Current,RC (Release Candidate),Release,Stable 等后缀，在这些后缀后面还可以加入 1 位数字的版本号 .&lt;/p&gt;

&lt;p&gt;对于用户来说，如果某个软件的主版本号进行了升级，用户还想继续那个软件，则发行软件的公司一般要对用户收取升级费用 ; 而如果子版本号或修正版本号发生了升级，一般来说是免费的 .&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/11/22/version-manager/index.html</link>
            <guid>http://demi-panda.com/2012/11/22/version-manager/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Linux find命令实践 ]]></title>
            <pubDate>Thu, 22 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;Linux中查找文件的命令通常为“find”命令，“find”命令能帮助我们在使用,管理Linux的日常事务中方便的查找出我们需要的文件。find是个很强大的命令，能够匹配正则，查找对应权限，能够帮你精确的定位你的系统中的任何地方任何目录下的文件。&lt;/p&gt;

&lt;h3&gt;语法&lt;/h3&gt;

&lt;pre id=&quot;bash&quot; &gt;
Usage: find [-H] [-L] [-P] [-Olevel] [-D help|tree|search|stat|rates|opt|exec] [path...] [expression]
&lt;/pre&gt;


&lt;h3&gt;find 命令选项&lt;/h3&gt;

&lt;pre id=&quot;wiki&quot; style=&quot;width:580px&quot;&gt;
-name filename      #查找名为filename的文件
-perm               #按执行权限来查找
-user username      #按文件属主来查找
-group groupname    #按组来查找
-mtime -n +n        #按文件更改时间来查找文件，-n指n天以内，+n指n天以前
-atime -n +n        #按文件访问时间来查
-perm               #按执行权限来查找
-user  username     #按文件属主来查找
-group groupname    #按组来查找
-mtime -n +n     #按文件更改时间来查找文件，-n指n天以内，+n指n天以前
-atime -n +n     #按文件访问时间来查找文件，-n指n天以内，+n指n天以前 
-ctime -n +n     #按文件创建时间来查找文件，-n指n天以内，+n指n天以前 
-nogroup         #查无有效属组的文件，即文件的属组在/etc/groups中不存在
-nouser          #查无有效属主的文件，即文件的属主在/etc/passwd中不存
-newer f1 !f2    #找文件，-n指n天以内，+n指n天以前 
-ctime -n +n     #按文件创建时间来查找文件，-n指n天以内，+n指n天以前 
-nogroup         #查无有效属组的文件，即文件的属组在/etc/groups中不存在
-nouser          #查无有效属主的文件，即文件的属主在/etc/passwd中不存
-newer f1 !f2    #查更改时间比f1新但比f2旧的文件
-type  b/d/c/p/l/f  #查是块设备、目录、字符设备、管道、符号链接、普通文件
-size  n[c]         #查长度为n块[或n字节]的文件
-depth              #使查找在进入子目录前先行查找完本目录
-fstype             #查更改时间比f1新但比f2旧的文件
-type b/d/c/p/l/f   #查是块设备、目录、字符设备、管道、符号链接、普通文件
-size n[c]          #查长度为n块[或n字节]的文件
-depth              #使查找在进入子目录前先行查找完本目录
-mount              #查文件时不跨越文件系统mount点
-follow             #如果遇到符号链接文件，就跟踪链接所指的文件
-mount              #查文件时不跨越文件系统mount点
-follow             #如果遇到符号链接文件，就跟踪链接所指的文件
-cpio               #对匹配的文件使用cpio命令，将他们备份到磁带设备中
-prune              #忽略某个目录
&lt;/pre&gt;


&lt;h3&gt;find命令示例&lt;/h3&gt;

&lt;pre id=&quot;bash&quot; style=&quot;width:580px&quot;&gt;
$find ~ -name &quot;*.txt&quot; -print    #在$HOME中查.txt文件并显示
$find . -name &quot;*.txt&quot; -print
$find . -name &quot;[A-Z]*&quot; -pri26nbsp; 
#对匹配的文件使用cpio命令，将他们备份到磁带设备中
$find ~ -name &quot;*.txt&quot; -print    #在$HOME中查.txt文件并显示
$find . -name &quot;*.txt&quot; -print
$find . -name &quot;[A-Z]*&quot; -print #查以大写字母开头的文件
$find /etc -name &quot;host*&quot; -print #查以host开头的文件
$find . -name &quot;[a-z][a-z][0--9].txt&quot; -print 
#查以两个小写字母和两个数字开头的txt文件
$find . -perm 755 -print
$find . -perm -007 -exec ls -l {} /; #查所有用户都可读写执行的文件同-perm 777
$find . -type d -print
$find . ! -type d -print 
$find . -type l -print
$find . -size +1000000c -print #查长度大于1Mb的文件
$find . -size 100c -print      #查长度为100c的文件
$find . -size +10 -print       #查长度超过期作废10块的文件（1块=512字节）
$find etc home apps -depth -print | cpio -ivcdC65536 -o /dev/rmt0
$find /etc -name &quot;passwd*&quot; -exec grep &quot;cnscn&quot; {} /; #看是否存在cnscn用户
$find . -name &quot;yao*&quot; | xargs file
$find . -name &quot;yao*&quot; | xargs echo   &quot;&quot; &lt; /tmp/core.log
$find . -name &quot;yao*&quot; | xargs chmod o-w
&lt;/pre&gt;




&lt;pre id=&quot;bash&quot; style=&quot;width:580px&quot;&gt;
$find -name april*              #在当前目录下查找以april开始的文件
$find -name april* fprint file  
#在当前目录下查找以april开始的文件，并把结果输出到file中
$find -name ap* -o -name may*   #查找以ap或may开头的文件
$find /mnt -name tom.txt -ftype vfat  
#在/mnt下查找名称为tom.txt且文件系统类型为vfat的文件
$find /mnt -name t.txt ! -ftype vfat  
#在/mnt下查找名称为tom.txt且文件系统类型不为vfat的文件
$find /tmp -name wa* -type l    #在/tmp下查找名为wa开头且类型为符号链接的文件
$find /home -mtime -2           #在/home下查最近两天内改动过的文件
$find /home   -atime -1         #查1天之内被存取过的文件
$find /home -mmin   +60         #在/home下查60分钟前改动过的文件
$find /home -amin +30           #查最近30分钟前被存取过的文件
$find /home -newer tmp.txt      #在/home下查更新时间比tmp.txt近的文件或目录
$find /home -anewer tmp.txt     #在/home下查存取时间比tmp.txt近的文件或目录
$find /home -used -2            #列出文件或目录被改动过之后，在2日内被存取过的文件或目录
$find /home -user cnscn         #列出/home目录内属于用户cnscn的文件或目录
$find /home -uid +501           #列出/home目录内用户的识别码大于501的文件或目录
$find /home -group cnscn        #列出/home内组为cnscn的文件或目录
$find /home -gid 501            #列出/home内组id为501的文件或目录
$find /home -nouser             #列出/home内不属于本地用户的文件或目录
$find /home -nogroup            #列出/home内不属于本地组的文件或目录
$find /home -name tmp.txt -maxdepth 4 #列出/home内的tmp.txt 查时深度最多为3层
$find /home -name tmp.txt -mindepth 3 #从第2层开始查
$find /home -empty              #查找大小为0的文件或空目录
$find /home -size +512k         #查大于512k的文件
$find /home -size -512k         #查小于512k的文件
$find /home -links +2           #查硬连接数大于2的文件或目录
$find /home -perm 0700          #查权限为700的文件或目录
$find /tmp -name tmp.txt -exec cat {} /;
$find /tmp -name tmp.txt -ok rm {} /;
$find / -amin -10       #查找在系统中最后10分钟访问的文件
$find / -atime -2       #查找在系统中最后48小时访问的文件
$find / -empty          #查找在系统中为空的文件或者文件夹
$find / -group cat      #查找在系统中属于 groupcat的文件
$find / -mmin -5        #查找在系统中最后5分钟里修改过的文件
$find / -mtime -1       #查找在系统中最后24小时里修改过的文件
$find / -nouser         #查找在系统中属于作废用户的文件
$find / -user fred      #查找在系统中属于FRED这个用户的文件
&lt;/pre&gt;


&lt;h3&gt;查当前目录下的所有普通文件&lt;/h3&gt;

&lt;p&gt;查当前目录下的所有普通文件，并在-exec选项中使用ls -l命令将它们列出&lt;/p&gt;

&lt;pre id=&quot;bash&quot; style=&quot;width:580px&quot;&gt;
$find . -type f | xargs ls -lt {}\;
-rw-rw-r-- 1 root root  2245 Nov 19 09:40 ./2008-09-23-java-annotation.md
-rw-rw-r-- 1 root root  1094 Nov 19 09:40 ./2009-04-27-a-python-program.md
-rw-rw-r-- 1 root root  1239 Nov 19 09:40 ./2009-09-09-about-form-get-post.md
-rw-rw-r-- 1 root root  7078 Nov 19 09:40 ./2010-07-21-hash-table.md
&lt;/pre&gt;


&lt;p&gt;在/logs目录中查找更改时间在5日以前的文件并删除它们：&lt;/p&gt;

&lt;pre id=&quot;bash&quot; style=&quot;width:580px&quot;&gt;
$ find logs -type f -mtime +5 | xargs -ok rm {}\;
&lt;/pre&gt;


&lt;p&gt;查询当天修改过的文件&lt;/p&gt;

&lt;pre id=&quot;bash&quot; style=&quot;width:580px&quot;&gt;
$find ./ -mtime -1 -type f | xargs ls -l {}\;
&lt;/pre&gt;


&lt;p&gt;查询并交给awk去处理&lt;/p&gt;

&lt;pre id=&quot;bash&quot; style=&quot;width:580px&quot;&gt;
$ who | awk '{print $1&quot;/t&quot;$2}'
&lt;/pre&gt;


&lt;p&gt;Linux字符编码转换&lt;/p&gt;

&lt;pre id=&quot;bash&quot; style=&quot;width:580px&quot;&gt;
find default -type d -exec mkdir -p utf/{} \;
find default -type f -exec iconv -f GBK -t UTF-8 {} -o utf/{} \;
&lt;/pre&gt;


&lt;p&gt;这两行命令将default目录下的文件由GBK编码转换为UTF-8编码，目录结构不变，转码后的文件保存在utf/default目录下。&lt;/p&gt;

&lt;p&gt;从M个文件中查找包含某个字符的文件并移动到另一个目录&lt;/p&gt;

&lt;pre id=&quot;bash&quot; style=&quot;widht:580px&quot;&gt;
grep -l &quot;data-thread-key&quot; ./* | xargs -i -i mv {} test/
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/11/22/linux-find-practice/index.html</link>
            <guid>http://demi-panda.com/2012/11/22/linux-find-practice/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[.bash_profile .bashrc profile 文件的作用的执行顺序 ]]></title>
            <pubDate>Thu, 22 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;h2&gt;登陆shell与交互式非登陆shell的区别&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://demi-panda.com/media/pub/linux/bash-profile.jpg&quot; alt=&quot;bashrc profile&quot; width=&quot;560px&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;登录shell&lt;/h3&gt;

&lt;p&gt;所谓登录shell,指的是当用户登录系统时所取的那个   shell。登录shell属于交互式shell。
登录shell将查找4个不同的启动文件来处理其中的命令。 bash shell处理文件的顺序如下：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
1: /etc/profile
2: /etc/profile.d等待配置文件
3: $HOME/.bash_profile
4: $HOME/.bash_login
5: $HOME/.profile
&lt;/pre&gt;


&lt;p&gt;/etc /profile是bash shell在系统上的主默认启动文 件，系统上 每一个用户在登陆时都将执行此文件。&lt;/p&gt;

&lt;p&gt;通过设置这个文件，超级用户可以为全系统内的所有bash用户建立默认特征。不同 Linux版本在此文件放置的命令不尽相同，&lt;/p&gt;

&lt;p&gt;在redflag中，该文件设置了几个重要的变量，如：PATH USER LOGNAME MAIL HOSTNAME HISTSIZE  INPUTRC，详情可以查看具体的文件。&lt;/p&gt;

&lt;p&gt;其余3个文件具备相同的功能——提供特定于用户的启动文件。大多 数Linux版本只使用其中之一。如：RedFlag使用.bash_profile   ubuntu使用.profile .&lt;/p&gt;

&lt;pre&gt;
shell依次查找~/.bash_profile、
~/.bash_login、
~/.profile(~是用户主目录的速记符)，
&lt;/pre&gt;


&lt;p&gt;并执行它找到的首个文件中的命令。
可以将命令放置在这些文件中以覆盖掉/etc/profile文件中的默认设置。
也就是后面的文件可以覆盖或者修改前面的设置 。&lt;/p&gt;

&lt;h3&gt;交互式非登录shell&lt;/h3&gt;

&lt;p&gt;如果启动了一个bash shell而没有等录系统（如在CLI提示符中键入bash）,则启动了一个交互式非登录shell.&lt;/p&gt;

&lt;p&gt;而登录shell的初始化文件(比如.bash_profile)通常会运行这个文件。这样，登录shell和非登录shell都可以使用.bashrc中的命令。&lt;/p&gt;

&lt;p&gt;如以X Window环境登录Linux时，在X环境所起动的终端，那些shell都是非登录shell.&lt;/p&gt;

&lt;p&gt;在交互式非登录shell中并不执行前面提到的初始化文件中的命令。然而，交互式非登录shell从登录shell继承了由这些初始化文件设置的 shell变量。&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$HOME/.bashrc
&lt;/pre&gt;


&lt;p&gt;交互式非登录shell执行~/.bashrc文件中的命令.在每次执行shell脚本时，都会重新读取这个文件，所以是最完整的。&lt;/p&gt;

&lt;p&gt;但是万事都不是一样的，debain系列的是不同的，如ubuntu&lt;/p&gt;

&lt;p&gt;/etc/profile--&amp;lt;/etc/environment--&amp;lt;$HOME/.profile&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/11/22/bash-profile/index.html</link>
            <guid>http://demi-panda.com/2012/11/22/bash-profile/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[SSH登陆响应慢的问题 ]]></title>
            <pubDate>Wed, 21 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;h3&gt;常见问题&lt;/h3&gt;

&lt;p&gt;第一种情况比较常见，也有很多资料提及到，就是在SSH登陆时服务器端会对客户端的IP进行反解析造成登陆响应慢的问题，通常改sshd_config的“UseDNS no”即可以。&lt;/p&gt;

&lt;p&gt;第二种情况，服务器端启用了GSSAPI[1]。登陆的时候客户端需要对服务器端的IP地址进行反解析，如果服务器的IP地址没有配置PTR记录，那么就容易在这里卡住了。&lt;/p&gt;

&lt;p&gt;对于这种情况，就有必要禁用GSSAPI认证以加速SSH登陆。&lt;/p&gt;

&lt;h3&gt;解决方案&lt;/h3&gt;

&lt;p&gt;解法一：sh命令时使用附加的参数：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
ssh -o GSSAPIAuthentication=no server_address
&lt;/pre&gt;


&lt;p&gt;解法二：修改客户端 ssh_config&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ vi /etc/ssh/ssh_config | vi ~/.ssh/config
GSSAPIAuthentication no
&lt;/pre&gt;


&lt;p&gt;解法三：修改服务器端的sshd_config&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ vi /etc/ssh/ssd_config
GSSAPIAuthentication no
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/11/21/ssh-remote/index.html</link>
            <guid>http://demi-panda.com/2012/11/21/ssh-remote/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[HTTP状态码 ]]></title>
            <pubDate>Wed, 21 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;HTTP状态码（HTTP Status Code）是用以表示網頁伺服器HTTP响应状态的3位数字代码。&lt;/p&gt;

&lt;h2&gt;1xx消息&lt;/h2&gt;

&lt;p&gt;这一类型的状态码，代表请求已被接受，需要继续处理。这类响应是临时响应，只包含状态行和某些可选的响应头信息，并以空行结束。由于HTTP/1.0协议中没有定义任何1xx状态码，所以除非在某些试验条件下，服务器禁止向此类客户端发送1xx响应。 这些状态码代表的响应都是信息性的，标示客户应该采取的其他行动。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;状态代码:&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;100 Continue&lt;/hd&gt;
      &lt;td&gt;
      服务器收到的请求不完整，但服务器没有拒绝请求，客户端应重新发送一个完整的请求。
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;101 Switching Protocols&lt;/hd&gt;
      &lt;td&gt; 
      服务器改用别的协议了 
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;102 Processing&lt;/hd&gt;
      &lt;td&gt; 
      代表处理将被继续执行。
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;


&lt;h2&gt;2xx成功&lt;/h2&gt;

&lt;p&gt;这一类型的状态码，代表请求已成功被服务器接收、理解、并接受。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;状态代码:&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;200 OK&lt;/hd&gt;
      &lt;td&gt;
      请求已成功，请求所希望的响应头或数据体将随此响应返回。
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      201 Created
      &lt;/hd&gt;
      &lt;td&gt; 
      请求成功，并完成了新资源的创建
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      202 Accepted 
      &lt;/hd&gt;
      &lt;td&gt; 
      请求正在处理中，尚未结束
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      203 Non-authoritative Information 
      &lt;/hd&gt;
      &lt;td&gt; 
      服务器已成功处理了请求，但返回的实体头部元信息不是在原始服务器上有效的确定集合，而是来自本地或者第三方的拷贝。
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      204 No Content
      &lt;/hd&gt;
      &lt;td&gt; 
      服务器成功处理了请求，但不需要返回任何实体内容，并且希望返回更新了的元信息。
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      205 Reset Content
      &lt;/hd&gt;
      &lt;td&gt; 
      服务器成功处理了请求，且没有返回任何内容。但是与204响应不同，返回此状态码的响应要求请求者重置文档视图。
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td&gt;
      206 Partial Content
      &lt;/hd&gt;
      &lt;td&gt; 
      服务器已经成功处理了部分GET请求。
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;tr&gt;
      &lt;td&gt;
      207 Multi-Status
      &lt;/hd&gt;
      &lt;td&gt; 
      代表之后的消息体将是一个XML消息，并且可能依照之前子请求数量的不同，包含一系列独立的响应代码。
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;


&lt;h2&gt;3xx重定向&lt;/h2&gt;

&lt;p&gt;这类状态码代表需要客户端采取进一步的操作才能完成请求。通常，这些状态码用来重定向，后续的请求地址（重定向目标）在本次响应的Location域中指明。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;状态代码:&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
      300 Multiple Choices 
      &lt;/hd&gt;
      &lt;td&gt;
      一个链接列表。用户可以选择并转向一个链接。最多五个地址
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      301 Moved Permanently
      &lt;/hd&gt;
      &lt;td&gt; 
      所请求页面已转移至新地址
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      302 Found
      &lt;/hd&gt;
      &lt;td&gt; 
      所请求页面临时转到了新的地址
      &lt;/td&gt;
    &lt;/tr&gt;
&lt;tr&gt;
      &lt;td&gt;
      303 See Other
      &lt;/hd&gt;
      &lt;td&gt; 
      所请求页面还有其他地址
      &lt;/td&gt;
    &lt;/tr&gt;
&lt;tr&gt;
      &lt;td&gt;
      304 Not Modified
      &lt;/hd&gt;
      &lt;td&gt; 
      如果客户端发送了一个带条件的GET请求且该请求已被允许，而文档的内容（自上次访问以来或者根据请求的条件）并没有改变，则服务器应当返回这个状态码。304响应禁止包含消息体，因此始终以消息头后的第一个空行结尾。
      &lt;/td&gt;
    &lt;/tr&gt;
&lt;tr&gt;
      &lt;td&gt;
      305 Use Proxy
      &lt;/hd&gt;
      &lt;td&gt; 
      被请求的资源必须通过指定的代理才能被访问。
      &lt;/td&gt;
    &lt;/tr&gt;
&lt;tr&gt;
      &lt;td&gt;
      306 Switch Proxy
      &lt;/hd&gt;
      &lt;td&gt; 
       在最新版的规范中，306状态码已经不再被使用
      &lt;/td&gt;
      &lt;tr&gt;
      &lt;td&gt;
      307 Temporary Redirect
      &lt;/hd&gt;
      &lt;/td&gt;
      &lt;td&gt;
      所请求页面已临时转移至新地址
      &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tr&gt;
&lt;/table&gt;


&lt;h2&gt;4xx请求错误&lt;/h2&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;状态代码:&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
      400 Bad Request
      &lt;/hd&gt;
      &lt;td&gt;
      由于包含语法错误，当前请求无法被服务器理解。
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      401 Unauthorized
      &lt;/hd&gt;
      &lt;td&gt; 
      所请求页面需要用户名和密码
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      402 Payment Required
      &lt;/hd&gt;
      &lt;td&gt; 
      该状态代码目前没有用
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      403 Forbidden
      &lt;/hd&gt;
      &lt;td&gt; 
      页面禁止访问
      &lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;
      404 Not Found
      &lt;/hd&gt;
      &lt;td&gt; 
      服务器找不到所请求的页面
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      405 Method Not Allowed
      &lt;/hd&gt;
      &lt;td&gt; 
      不支持请求中指定的HTTP方法
      &lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;
      406 Not Acceptable
      &lt;/hd&gt;
      &lt;td&gt; 
      服务器无法提供满足客户端要求的响应
      &lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;
      407 Proxy Authentication Required
      &lt;/hd&gt;
      &lt;td&gt; 
      代理服务器要求进行身份验证
      &lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;
      408 Request Timeout
      &lt;/hd&gt;
      &lt;td&gt; 
      请求所用时间超出服务器打算等待的时间
      &lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;
      409 Conflict
      &lt;/hd&gt;
      &lt;td&gt; 
      请求因冲突没有完成
      &lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;
      410 Gone
      &lt;/hd&gt;
      &lt;td&gt; 
      所请求页面已不复存在
      &lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;
      411 Length Required
      &lt;/hd&gt;
      &lt;td&gt; 
      请求没有定义报头“Content-Length”。服务器无法接受没有Content-Length的请求
      &lt;/td&gt;
    &lt;/tr&gt;
      &lt;tr&gt;
      &lt;td&gt;
      412 Precondition Failed
      &lt;/hd&gt;
      &lt;td&gt; 
      请求里指定的前提条件不满足
      &lt;/td&gt;
    &lt;/tr&gt;
      &lt;tr&gt;
      &lt;td&gt;
      413 Request Entity Too Large
      &lt;/hd&gt;
      &lt;td&gt; 
      因请求实体太大，服务器无法接受请求
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      414 Request-url Too Long
      &lt;/hd&gt;
      &lt;td&gt; 
      因URL太长，服务器无法接受请求。当你用GET请求来代替POST请求发送过长的查询信息时会发生这种情况
      &lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;
      415 Unsupported Media Type
      &lt;/hd&gt;
      &lt;td&gt; 
      请求所采用的媒体类型不被支持，服务器无法接受请求
      &lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;
      416 Requested Range Not Satisfiable
      &lt;/hd&gt;
      &lt;td&gt; 
      如果请求中包含了Range请求头，并且Range中指定的任何数据范围都与当前资源的可用范围不重合，同时请求中又没有定义If-Range请求头，那么服务器就应当返回416状态码。
      &lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;
      417 Expectation Failed
      &lt;/hd&gt;
      &lt;td&gt; 
      在请求头Expect中指定的预期内容无法被服务器满足，或者这个服务器是一个代理服务器，它有明显的证据证明在当前路由的下一个节点上，Expect的内容无法被满足。
      &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;


&lt;h2&gt;5xx服务器错误&lt;/h2&gt;

&lt;p&gt;这类状态码代表了服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;状态代码:&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
      500 Internal Server Error
      &lt;/hd&gt;
      &lt;td&gt;
      请求不成功。服务器遇到异常情况
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      501 Not Implemented
      &lt;/hd&gt;
      &lt;td&gt; 
      请求不成功。服务器不支持所要求的特性
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      502 Bad Gateway
      &lt;/hd&gt;
      &lt;td&gt; 
      请求不成功。服务器从上行服务器接收到了无效的响应
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      503 Service Unavailable
      &lt;/hd&gt;
      &lt;td&gt; 
      请求不成功。服务器临时过载或停机
      &lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;
      504 Gateway Timeout
      &lt;/hd&gt;
      &lt;td&gt; 
      网关超时
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      505 HTTP Version Not Supported
      &lt;/hd&gt;
      &lt;td&gt; 
      服务器不支持所要求的“HTTP协议”版本
      &lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;
      506 Variant Also Negotiates
      &lt;/hd&gt;
      &lt;td&gt; 
      代表服务器存在内部配置错误：被请求的协商变元资源被配置为在透明内容协商中使用自己，因此在一个协商处理中不是一个合适的重点。
      &lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;
      507 Insufficient Storage
      &lt;/hd&gt;
      &lt;td&gt; 
      服务器无法存储完成请求所必须的内容。这个状况被认为是临时的。wwwDAV（RFC 4918）
      &lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;
      509 Bandwidth Limit Exceeded
      &lt;/hd&gt;
      &lt;td&gt; 
      服务器达到带宽限制。这不是一个官方的状态码，但是仍被广泛使用。
      &lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;
      510 Not Extended
      &lt;/hd&gt;
      &lt;td&gt; 
      获取资源所需要的策略并没有没满足。
      &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/11/21/http-status/index.html</link>
            <guid>http://demi-panda.com/2012/11/21/http-status/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Ubuntu 中VirtualBox 使用U盾 ]]></title>
            <pubDate>Tue, 20 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;运行环境：
操作系统：Ubuntu11.4 Desktop
虚拟机：Virtual Box4.0
Virtual Box操作系统：XP SP3
移动证书：工行U盾&lt;/p&gt;

&lt;h3&gt;VirtualBox使用U盾&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;下载安装VirtualBox。注意去官网上下载最新版的，Ubuntu自带的OSE不支持USB的。&lt;/li&gt;
&lt;li&gt;在虚拟机上安装WindowsXP。&lt;/li&gt;
&lt;li&gt;配置Ubuntu，注意细节。&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;a. 新建一个usbfs组：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo groupadd usbfs
&lt;/pre&gt;


&lt;p&gt;b.将当前用户加入这个用户组：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo adduser $USER usbfs
&lt;/pre&gt;


&lt;p&gt;c. 打开/etc/group文件&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ gedit /etc/group
&lt;/pre&gt;


&lt;p&gt;找到usbfs，记下ID
例如，我（cdt）的是：
usbfs:x:1001:cdt
上面1001就是ID。&lt;/p&gt;

&lt;p&gt;d.打开/etc/fstab文件：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo gedit /etc/fstab
&lt;/pre&gt;


&lt;p&gt;在后面加一行：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
none /proc/bus/usb usbfs devmode=0664,devgid=1001, 0 0
&lt;/pre&gt;


&lt;p&gt;注意devgid=1001中的1001要改成你刚在group中查到的usbfs组的ID。保存文件。
完成以上后重新启动会提示：&lt;/p&gt;

&lt;pre&gt;
An error occurred while mounting /proc/bus/usb
Press S to skip mounting or M for manual recovery 
&lt;/pre&gt;


&lt;p&gt;按S进入Ubuntu，运行VirtualBox U盾使用正常。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;注：解决报错提示：&lt;/em&gt;&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
1.sudo gedit /etc/fstab  注释
＃none /proc/bus/usb usbfs devmode=0664,devgid=1001 0 0
2.sudo gedit /etc/rc.local  
在exit 0上一行加入 
hald --daemon=no 
exit 0
&lt;/pre&gt;


&lt;p&gt;重启电脑后不会再有报错，另U盾也可正常使用。&lt;/p&gt;

&lt;h3&gt;配置VirtualBox, 使VirtualBox支持USB设备&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;关闭xp状态下，在virtualbox上点设置－USB设备，在窗口右边 点那个带+号的u盘图标，确定。&lt;/li&gt;
&lt;li&gt;ubuntu下选系统－系统管理－用户和组－管理组－vboxusers-属性－在自已的用户名前打勾－ 确定－输入密码。&lt;/li&gt;
&lt;li&gt;如果第二步查看用户和组-管理组 无法看到vboxusers，则需要自己手动添加用户组&lt;/li&gt;
&lt;/ol&gt;


&lt;pre id=&quot;bash&quot;&gt;
$ sudo adduser $USERNAME vboxusers
&lt;/pre&gt;


&lt;p&gt;注销或重启ubuntu,打开xp就能用你的u盘了&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/11/20/ubunut-virtualbox/index.html</link>
            <guid>http://demi-panda.com/2012/11/20/ubunut-virtualbox/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Solr 同义词搜索 synonyms ]]></title>
            <pubDate>Tue, 20 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;Solr同义词搜索是一个很好的功能实现，解决了产品需求中很大的问题，如：搜索用户搜索&quot;刮胡刀&quot; 更好的展示结果是把 &quot;刮胡刀&quot;跟&quot;剃须刀&quot;都显示给用户，这样就可以达到更好的效果。下面讲下具体实现:
solr.SynonymFilterFactory&lt;/p&gt;

&lt;h3&gt;Creates SynonymFilter&lt;/h3&gt;

&lt;p&gt;Matches strings of tokens and replaces them with other strings of tokens.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The synonyms parameter names an external file defining the synonyms.&lt;/li&gt;
&lt;li&gt;If ignoreCase is true, matching will lowercase before checking equality.&lt;/li&gt;
&lt;li&gt;If expand is true, a synonym will be expanded to all equivalent synonyms. If it is false, all equivalent synonyms will be reduced to the first in the list.&lt;/li&gt;
&lt;li&gt;The optional tokenizerFactory parameter names a tokenizer factory class to analyze synonyms (see https://issues.apache.org/jira/browse/SOLR-319 ), which can help with the synonym+stemming problem described in http://search-lucene.com/m/hg9ri2mDvGk1 .&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;schema.xml配置&lt;/h3&gt;

&lt;pre id=&quot;xml&quot;&gt;
&amp;lt;fieldType name=&quot;text&quot; class=&quot;solr.TextField&quot; positionIncrementGap=&quot;100&quot;&amp;gt;  
    &amp;lt;analyzer type=&quot;index&quot;&amp;gt;  
        &amp;lt;tokenizer class=&quot;solr.ChineseTokenizerFactory&quot;/&amp;gt;  
        &amp;lt;filter class=&quot;solr.SynonymFilterFactory&quot; 
            synonyms=&quot;synonyms.txt&quot; 
            ignoreCase=&quot;true&quot; 
            expand=&quot;true&quot; 
            tokenizerFactory=&quot;solr.ChineseTokenizerFactory&quot;/&amp;gt; 
        &amp;lt;filter class=&quot;solr.StopFilterFactory&quot; ignoreCase=&quot;true&quot; words=&quot;stopwords.txt&quot; enablePositionIncrements=&quot;true&quot; /&amp;gt;  
        &amp;lt;filter class=&quot;solr.WordDelimiterFilterFactory&quot; 
            generateWordParts=&quot;1&quot; 
            generateNumberParts=&quot;1&quot;   
            catenateWords=&quot;1&quot; 
            catenateNumbers=&quot;1&quot; 
            catenateAll=&quot;0&quot; splitOnCaseChange=&quot;0&quot;/&amp;gt;  
        &amp;lt;filter class=&quot;solr.LowerCaseFilterFactory&quot;/&amp;gt;  
        &amp;lt;filter class=&quot;solr.RemoveDuplicatesTokenFilterFactory&quot;/&amp;gt;
    &amp;lt;/analyzer&amp;gt;  
    &amp;lt;analyzer type=&quot;query&quot;&amp;gt;  
        &amp;lt;tokenizer class=&quot;solr.ChineseTokenizerFactory&quot;/&amp;gt;  
        &amp;lt;filter class=&quot;solr.SynonymFilterFactory&quot;
            synonyms=&quot;synonyms.txt&quot; 
            ignoreCase=&quot;true&quot;   
            expand=&quot;true&quot; 
            tokenizerFactory=&quot;solr.ChineseTokenizerFactory&quot;/&amp;gt;  
        &amp;lt;filter class=&quot;solr.StopFilterFactory&quot; 
            ignoreCase=&quot;true&quot; 
            words=&quot;stopwords.txt&quot; 
            enablePositionIncrements=&quot;true&quot;/&amp;gt;  
        &amp;lt;filter class=&quot;solr.WordDelimiterFilterFactory&quot; 
            generateWordParts=&quot;1&quot; 
            generateNumberParts=&quot;1&quot;  
            catenateWords=&quot;0&quot; 
            catenateNumbers=&quot;0&quot; 
            catenateAll=&quot;0&quot; 
            splitOnCaseChange=&quot;1&quot;/&amp;gt;  
        &amp;lt;filter class=&quot;solr.LowerCaseFilterFactory&quot;/&amp;gt;  
        &amp;lt;filter class=&quot;solr.RemoveDuplicatesTokenFilterFactory&quot;/&amp;gt;  
    &amp;lt;/analyzer&amp;gt;  
&amp;lt;/fieldType&amp;gt;
&lt;/pre&gt;


&lt;h3&gt;synonyms.txt配置&lt;/h3&gt;

&lt;pre&gt;
# blank lines and lines starting with pound are comments.  
#Explicit mappings match any token sequence on the LHS of &quot;=&gt;&quot;
#and replace with all alternatives on the RHS.  These types of mappings  
#ignore the expand parameter in the schema.  
#Examples:  
#-----------------------------------------------------------------------  
#some test synonym mappings unlikely to appear in real input text  
aaafoo =&gt; aaabar  
bbbfoo =&gt; bbbfoo bbbbar  
cccfoo =&gt; cccbar cccbaz  
fooaaa,baraaa,bazaaa  

# Some synonym groups specific to this example  
GB,gib,gigabyte,gigabytes  
MB,mib,megabyte,megabytes  
Television, Televisions, TV, TVs   
#notice we use &quot;gib&quot; instead of &quot;GiB&quot; so any WordDelimiterFilter coming  
#after us won't split it into two words.  
飞利浦刮胡刀,飞利浦剃须刀  

# Synonym mappings can be used for spelling correction too  
pixima =&gt; pixma  

a\,a =&gt; b\,b  
&lt;/pre&gt;



 ]]></description>
            <link>http://demi-panda.com/2012/11/20/solr-synonyms/index.html</link>
            <guid>http://demi-panda.com/2012/11/20/solr-synonyms/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Linux下的命令行下转换媒体格式工具FFMPEG详解 ]]></title>
            <pubDate>Tue, 20 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;在windows下有格式工厂之类的软件可以转换媒体格式，在linux 下 呢？又没有这样的软件呢？既然linux喜欢命令行式操作，那linux迷就将命令行进行到底。今天介绍怎么在linux命令行下转换媒体格式，要用到的 工具就是ffmpeg。ffmpeg是一个Linux下音频视频格式转换的通用工具. 下面几条我觉得还不错，常用，就分享给linux迷爱好者了。&lt;/p&gt;

&lt;h3&gt;avi电影音频提取&lt;/h3&gt;

&lt;p&gt;用下面这个命令行能够把电影里的音频提取出来, 成为一个独立的mp3文件, 这样可以听电影:&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ ffmpeg -i input.avi -ab 128k output.mp3
&lt;/pre&gt;


&lt;p&gt;其中指定了mp3压缩码率为128k, 我想应能满足大多数人的要求了.&lt;/p&gt;

&lt;h3&gt;ac3音频提取&lt;/h3&gt;

&lt;p&gt;这个例子和上一个例子类似, 不过由于音频是ac3编码的, 因此参数稍有不同:&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ ffmpeg -i The.Devil.Wears.Prada.AC3.x264.mkv -acodec libmp3lame -ab 128 -ac 2 The.Devil.Wears.Prada.mp3
&lt;/pre&gt;


&lt;h3&gt;无损音频转换&lt;/h3&gt;

&lt;p&gt;我有一个ipod, 为了把网上下到的ape/flac格式的文件转成苹果的无损格式, 我使用的是下面的命令:&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ ffmpeg -i input.ape -acodec alac output.m4a
&lt;/pre&gt;


&lt;p&gt;一般来说, 一个专辑里面有多个文件, 下面的循环能够做批量转换, 这个例子里面是对当前目录下所有的flac音乐进行转换.&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
for i in *.flac
do
    ffmpeg -i &quot;$i&quot; -acodec alac &quot;`basename &quot;$i&quot; .flac`.m4a&quot;
done
&lt;/pre&gt;


&lt;h3&gt;视频转换成flash视频&lt;/h3&gt;

&lt;p&gt;我的手机能够播放flv这种flash视频文件, 有时候我会把喜欢的电视剧转成flv文件放在手机上播放, 下面是批量转换的例子:&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
for file in *
do
    bsnm=`basename $file .avi`
    ffmpeg -i $file -s qvga -ar 44100 &quot;$bsnm&quot;.flv
done
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/11/20/linux-ffmpeg/index.html</link>
            <guid>http://demi-panda.com/2012/11/20/linux-ffmpeg/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[程序员的利器-Linux常用命令 ]]></title>
            <pubDate>Mon, 19 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;每个程序员，在职业生涯的某个时刻，总会发现自己需要知道一些Linux方面的知识。我并不是说你应该成为一个Linux专家，我的意思是，当面对Linux命令行任务时，你应该能很熟练的完成。事实上，学会了下面8个命令，我基本上能完成任何需要完成的任务。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;注意:&lt;/em&gt;
下面的每个命令都有十分丰富的文档说明。这篇文章并不是来详尽的展示每个命令的各种功用的。我在这里要讲的是这几个最常用的命令的最常见用法。如果你对linux命令并不是很了解，你想找一些这方面的资料学习，那这篇文章将会给你一个基本的指导。&lt;/p&gt;

&lt;p&gt;在这里我拿一个search.log日志文件来说明：&lt;/p&gt;

&lt;pre style=&quot;font-size:10px; width:560px&quot;&gt;
Nov 15, 2012 12:00:00 AM org.apache.solr.core.SolrCore execute
INFO: [deal] webapp=/solr-web-deal path=/analysis/field params={analysis.showmatch=false&amp;analysis.query=泡芙&amp;analysis.fieldname=title&amp;analysis.fieldvalue=text} QTime=0 
Nov 15, 2012 12:00:01 AM org.apache.solr.core.SolrCore execute
INFO: [deal] webapp=/solr-web-deal path=/select params={fl=id,score,price&amp;start=65&amp;q=(city_id:2+OR+city_id:0)+AND+(title:(火锅)^7.0)}&amp;rows=5&amp;version=2} hits=2527 QTime=1 
Nov 15, 2012 12:00:01 AM org.apache.solr.core.SolrCore execute
INFO: [deal] webapp=/solr-web-deal path=/select params={fl=id,score,price&amp;start=75&amp;q=(city_id:1+OR+city_id:0)+AND+(title:(男装)^7.0)}&amp;rows=15} hits=673 QTime=25
&lt;/pre&gt;


&lt;h3&gt;cat&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;语法&lt;/em&gt;&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
cat [OPTION]... [FILE]...
&lt;/pre&gt;


&lt;p&gt;cat – 连接文件，并输出结果&lt;/p&gt;

&lt;p&gt;cat 命令非常的简单，你从下面的例子可以看到。&lt;/p&gt;

&lt;pre id=&quot;bash&quot; style=&quot;font-size:10px; width:560px&quot;&gt;
$ cat search.log
Nov 15, 2012 12:00:00 AM org.apache.solr.core.SolrCore execute
INFO: [deal] webapp=/solr-web-deal path=/analysis/field params={analysis.showmatch=false&amp;analysis.query=泡芙&amp;analysis.fieldname=title&amp;analysis.fieldvalue=text} QTime=0 
Nov 15, 2012 12:00:01 AM org.apache.solr.core.SolrCore execute
INFO: [deal] webapp=/solr-web-deal path=/select params={fl=id,score,price&amp;start=65&amp;q=(city_id:2+OR+city_id:0)+AND+(title:(火锅)^7.0)}&amp;rows=5&amp;version=2} hits=2527 QTime=1 
Nov 15, 2012 12:00:01 AM org.apache.solr.core.SolrCore execute
INFO: [deal] webapp=/solr-web-deal path=/select params={fl=id,score,price&amp;start=75&amp;q=(city_id:1+OR+city_id:0)+AND+(title:(男装)^7.0)}&amp;rows=15} hits=673 QTime=25
&lt;/pre&gt;


&lt;p&gt;就像它的说明描述的，你可以用它来连接多个文件。&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ cat search.*
#或者
$ cat search.log search.log-20121123
&lt;/pre&gt;


&lt;h3&gt;sort&lt;/h3&gt;

&lt;pre&gt;
sort – 文件里的文字按行排序
&lt;/pre&gt;


&lt;p&gt;此时sort命令显然是你最佳的选择。&lt;/p&gt;

&lt;pre id=&quot;bash&quot; style=&quot;font-size:10px; width:560px&quot;&gt;
$ cat search.* | sort
INFO: [deal] webapp=/solr-web-deal path=/analysis/field params={analysis.showmatch=false&amp;analysis.query=泡芙&amp;analysis.fieldname=title&amp;analysis.fieldvalue=text} QTime=0 
INFO: [deal] webapp=/solr-web-deal path=/select params={fl=id,score,price&amp;start=65&amp;q=(city_id:2+OR+city_id:0)+AND+(title:(火锅)^7.0)}&amp;rows=5&amp;version=2} hits=2527 QTime=1 
INFO: [deal] webapp=/solr-web-deal path=/select params={fl=id,score,price&amp;start=75&amp;q=(city_id:1+OR+city_id:0)+AND+(title:(男装)^7.0)}&amp;rows=15} hits=673 QTime=25
Nov 15, 2012 12:00:00 AM org.apache.solr.core.SolrCore execute
Nov 15, 2012 12:00:01 AM org.apache.solr.core.SolrCore execute
Nov 15, 2012 12:00:01 AM org.apache.solr.core.SolrCore execute
&lt;/pre&gt;


&lt;p&gt;就像上面例子显示的，文件里的数据已经经过排序。对于一些小文件，你可以读取整个文件来处理它们，然而，真正的log文件通常有大量的内容，你不能不考虑这个情况。此时你应该考虑过滤出某些内容，把cat、sort后的内容通过管道传递给过滤工具。&lt;/p&gt;

&lt;h3&gt;grep&lt;/h3&gt;

&lt;pre&gt;
grep, egrep, fgrep – 打印出匹配条件的文字行
&lt;/pre&gt;


&lt;p&gt;假设我们只对city_id:1的搜索日志感兴趣。使用grep，我们能限制只输出含有city_id:1字符的日志。&lt;/p&gt;

&lt;pre id=&quot;bash&quot; style=&quot;font-size:10px; width:560px&quot;&gt;
$ cat order.* | sort | grep -r &quot;city_id:1&quot;
INFO: [deal] webapp=/solr-web-deal path=/select params={fl=id,score,price&amp;start=75&amp;q=(city_id:1+OR+city_id:0)+AND+(title:(男装)^7.0)}&amp;rows=15} hits=673 QTime=25
&lt;/pre&gt;


&lt;p&gt;grep 可以直接使用正则表达式&lt;/p&gt;

&lt;h3&gt;cut&lt;/h3&gt;

&lt;pre&gt;
cut – 删除文件中字符行上的某些区域
&lt;/pre&gt;


&lt;p&gt;又要使用grep，我们用grep过滤出我们想要的行。有了我们想要的行信息，我们就可以把它们切成小段，删除不需要的部分数据。&lt;/p&gt;

&lt;pre id=&quot;bash&quot; style=&quot;font-size:10px; width:560px&quot;&gt;
$ cat order.* | sort | grep -r &quot;city_id:1&quot;
INFO: [deal] webapp=/solr-web-deal path=/select params={fl=id,score,price&amp;start=75&amp;q=(city_id:1+OR+city_id:0)+AND+(title:(男装)^7.0)}&amp;rows=15} hits=673 QTime=25
$ cat order.* | sort | grep -r &quot;city_id:1&quot; |cut -d&quot;,&quot; -f6,8
hits=673 QTime=25
&lt;/pre&gt;


&lt;p&gt;现在，我们把数据缩减为我们计算想要的形式，把这些数据粘贴到Excel里立刻就能得到结果了。&lt;/p&gt;

&lt;p&gt;cut是用来消减信息、简化任务的，但对于输出内容，我们通常会有更复杂的形式。假设我们还需要知道订单的ID，这样可以用来关联相关的其他信息。我们用cut可以获得ID信息，但我们希望把ID放到行的最后，用单引号包上。&lt;/p&gt;

&lt;h3&gt;sed&lt;/h3&gt;

&lt;pre&gt;
sed – 一个流编辑器。它是用来在输入流上执行基本的文本变换。
&lt;/pre&gt;


&lt;p&gt;下面的例子展示了如何用sed命令变换我们的文件行.&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
find -name &quot;*.java&quot; | xargs sed -i &quot;s/SOAPHandler/SOAPAction/g&quot;
&lt;/pre&gt;


&lt;h3&gt;tail&lt;/h3&gt;

&lt;pre&gt;
tail [  -f ] [  -c Number |  -n Number |  -m Number |  -b Number |  -k Number ] [ File ]
&lt;/pre&gt;


&lt;p&gt;命令从指定点开始将 File 参数指定的文件写到标准输出。如果没有指定文件，则会使用标准输入。 Number 变量指定将多少单元写入标准输出。 Number 变量的值可以是正的或负的整数。如果值的前面有 +（加号），从文件开头指定的单元数开始将文件写到标准输出。如果值的前面有 -（减号），则从文件末尾指定的单元数开始将文件写到标准输出。如果值前面没有 +（加号）或 -（减号），那么从文件末尾指定的单元号开始读取文件。&lt;/p&gt;

&lt;p&gt;要显示 notes 文件的最后十行，输入：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ tail notes
&lt;/pre&gt;


&lt;p&gt;要指定从 notes 文件末尾开始读取的行数，输入：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ tail  -n 20 notes
&lt;/pre&gt;


&lt;p&gt;要从第 200 字节开始，每次显示一页 notes 文件，输入：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ tail  -c +200 notes | pg
&lt;/pre&gt;


&lt;p&gt;要跟踪文件的增长，输入：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ tail  -f accounts
&lt;/pre&gt;


&lt;h3&gt;uniq&lt;/h3&gt;

&lt;pre&gt;
uniq – 删除重复的行
&lt;/pre&gt;


&lt;h3&gt;find&lt;/h3&gt;

&lt;p&gt;find – 在文件目录中搜索文件
&lt;em&gt;语法&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;
find [-H] [-L] [-P] [-Olevel] [-D help|tree|search|stat|rates|opt|exec] [path...] [expression]
&lt;/pre&gt;


&lt;p&gt;&lt;em&gt;示例：&lt;/em&gt;
查找当前目录及子目录下的文件名,并重命名
方案1:
使用find命令查找，然后使用sed替换&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
find . -name &quot;*.java&quot; | sed -e 's/\.java/\.class/g'
&lt;/pre&gt;


&lt;p&gt;方案2：
使用find命令查找，然后使用rename重命名&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
find . -name &quot;*.class&quot; | rename 's/\.class/\.java/g'
&lt;/pre&gt;


&lt;p&gt;方案3：
使用bash，使用for循环mv重命名&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
#!/bin/bash 
dn=`dirname $0`
dn=`cd $dn;pwd`
#for fn in `find $dn -type f |grep 'java$'` 
for fn in `find $dn -name '*.java'` 
do
if [ -f $fn ]; then
newfn=${fn/%java/class}
echo $newfn
mv $fn $newfn
fi
down
&lt;/pre&gt;


&lt;h3&gt;less&lt;/h3&gt;

&lt;pre&gt;
less – 在文件里向前或向后移动
&lt;/pre&gt;


&lt;p&gt;在 less 命令，使用“/”来执行向前搜索，使用“？”命令执行向后搜索。搜索条件是一个正则表达式。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/11/19/linux-command/index.html</link>
            <guid>http://demi-panda.com/2012/11/19/linux-command/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Jenkins PermGen space 问题 ]]></title>
            <pubDate>Mon, 19 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;首先熟悉tomcat内存溢出三种情况。这里根据平时遇到的情况和相关资料进行一个总结。常见的一般会有下面三种情况：&lt;/p&gt;

&lt;p&gt;这里根据平时遇到的情况和相关资料进行一个总结。常见的一般会有下面三种情况：&lt;/p&gt;

&lt;pre&gt;
1.OutOfMemoryError: Java heap space
2.OutOfMemoryError: PermGen space
3.OutOfMemoryError: unable to create new native thread.
&lt;/pre&gt;


&lt;h3&gt;Tomcat内存溢出解决方案&lt;/h3&gt;

&lt;p&gt;对于前两种情况，在应用本身没有内存泄露的情况下可以用设置tomcat jvm参数来解决。（-Xms -Xmx -XX:PermSize  -XX:MaxPermSize）&lt;/p&gt;

&lt;p&gt;最后一种可能需要调整操作系统和tomcat jvm参数同时调整才能达到目的。&lt;/p&gt;

&lt;h3&gt;第一种：是堆溢出。&lt;/h3&gt;

&lt;p&gt;在JVM中如果98％的时间是用于GC且可用的 Heap size 不足2％的时候将抛出此异常信息。&lt;/p&gt;

&lt;p&gt;没有内存泄露的情况下，调整-Xms -Xmx参数可以解决。
-Xms:初始堆大小
-Xmx:最大堆大小&lt;/p&gt;

&lt;p&gt;&lt;em&gt;但堆的大小受下面三方面影响：&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;1.相关操作系统的数据模型（32-bt还是64-bit）限制；（32位系统下，一般限制在1.5G~2G；我在2003 server 系统下（物理内存：4G和6G，jdk：1.6）测试 1612M，64为操作系统对内存无限制。）
2.系统的可用虚拟内存限制；
3.系统的可用物理内存限制。
堆的大小可以使用 java -Xmx***M  version 命令来测试。支持的话会出现jdk的版本号，不支持会报错。
-Xms -Xmx一般配置成一样比较好比如:&lt;/p&gt;

&lt;pre&gt;
set JAVA_OPTS= -Xms1024m -Xmx1024m
&lt;/pre&gt;


&lt;h3&gt;第二种：永久保存区域溢出&lt;/h3&gt;

&lt;p&gt;PermGen space的全称是Permanent Generation space,是指内存的永久保存区域。这一部分用于存放Class和Meta的信息,Class在被 Load的时候被放入PermGen space区域，它和和存放Instance的Heap区域不同,GC(Garbage Collection)不会在主程序运行期对PermGen space进行清理，所以如果你的APP会LOAD很多CLASS的话,就很可能出现PermGen space错误。这种错误常见在web服务器对JSP进行pre compile的时候。但目前的hibernate和spring项目中也很容易出现这样的问题。可能是由于这些框架会动态class，而且jvm的gc是不会清理PemGen space的，导致内存溢出。&lt;/p&gt;

&lt;p&gt;这一个一般是加大-XX:PermSize  -XX:MaxPermSize 来解决问题。
-XX:PermSize 永久保存区域初始大小
-XX:PermSize 永久保存区域初始最大值
这一般结合第一条使用，比如:&lt;/p&gt;

&lt;pre&gt;
set JAVA_OPTS= -Xms1024m -Xmx1024m  -XX:PermSize=128M -XX:PermSize=256M
&lt;/pre&gt;


&lt;h3&gt;第三种：无法创建新的线程。&lt;/h3&gt;

&lt;p&gt;这种情况可能是JVM已经被系统分配了大量的内存(比如1.5G)，并且它至少要占用可用内存的一半。有人发现，在线程个数很多的情况下，你分配给JVM的内存越多，那么，上述错误发生的可能性就越大
那么是什么原因造成这种问题呢？&lt;/p&gt;

&lt;p&gt;每一个32位的进程最多可以使用2G的可用内存，因为另外2G被操作系统保留。这里假设使用1.5G给JVM，那么还余下500M可用内存。这500M内存中的一部分必须用于系统dll的加载，那么真正剩下的也许只有400M，现在关键的地方出现了：当你使用Java创建一个线程，在JVM的内存里也会创建一个Thread对象，但是同时也会在操作系统里创建一个真正的物理线程(参考JVM规范)，操作系统会在余下的400兆内存里创建这个物理线程，而不是在JVM的1500M的内存堆里创建。在jdk1.4里头，默认的栈大小是256KB，但是在jdk1.5里头，默认的栈大小为1M每线程，因此，在余下400M的可用内存里边我们最多也只能创建400个可用线程。&lt;/p&gt;

&lt;p&gt;这样结论就出来了，要想创建更多的线程，你必须减少分配给JVM的最大内存。还有一种做法是让JVM宿主在你的JNI代码里边。&lt;/p&gt;

&lt;p&gt;给出一个有关能够创建线程的最大个数的估算公式：&lt;/p&gt;

&lt;pre&gt;
(MaxProcessMemory - JVMMemory - ReservedOsMemory) / (ThreadStackSize) = Number of threads
#对于jdk1.5而言，假设操作系统保留120M内存：
1.5GB JVM: (2GB-1.5Gb-120MB)/(1MB) = ~380 threads
1.0GB JVM: (2GB-1.0Gb-120MB)/(1MB) = ~880 threads

#对于栈大小为256KB的jdk1.4而言，
1.5GB allocated to JVM: ~1520 threads
1.0GB allocated to JVM: ~3520 threads 
&lt;/pre&gt;


&lt;p&gt;如果我没有记错的话，在2000/XP/2003里头有一个启动选项，好像是：/PAE /3G ，可以让用户进程最大内存扩充至3G，这时操作系统只能占用最多1G的虚存。那样应该可以让JVM创建更多的线程。&lt;/p&gt;

&lt;h3&gt;解决Jekins内存溢出的方案：&lt;/h3&gt;

&lt;p&gt;经过以上的了解，咱们就能快速的定位问题的所在，如果Jekins运行在tomcat中，或者使用Java命令运行，长时间运行，就会导致有大量的class类被加载,并保存在JVM PermGen Space空间中，这样就会导致内存溢出,然后报以下异常：&lt;/p&gt;

&lt;pre id=&quot;java&quot; style=&quot;font-size:10px; width:560px&quot;&gt;
Exception in thread &quot;main&quot; java.lang.OutOfMemoryError: PermGen space
at java.lang.ClassLoader.defineClass1(Native Method)
at java.lang.ClassLoader.defineClassCond(ClassLoader.java:631)
at java.lang.ClassLoader.defineClass(ClassLoader.java:615)
at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:141)
at java.net.URLClassLoader.defineClass(URLClassLoader.java:283)
at java.net.URLClassLoader.access$000(URLClassLoader.java:58)
at java.net.URLClassLoader$1.run(URLClassLoader.java:197)
at java.security.AccessController.doPrivileged(Native Method)
at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClassFromSelf(ClassRealm.java:386)
codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:42)
at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:244)
at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:230)
at org.apache.maven.cli.MavenCli.execute(MavenCli.java:545)
at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:597)
at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
&lt;/pre&gt;


&lt;h3&gt;解决方案&lt;/h3&gt;

&lt;p&gt;我们可以通过设置MaxPermSize,和XX:PermSize来解决这个问题,一般这两个参数是结合Xmx,Xms来设置,只需要将Tomcat或者Java运行环境设置如下参数即可：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
JAVA_OPTS=&quot;-Djava.awt.headless=true -Dfile.encoding=UTF-8 
-server -Xms1536m -Xmx1536m
-XX:NewSize=256m -XX:MaxNewSize=256m -XX:PermSize=256m 
-XX:MaxPermSize=256m -XX:+DisableExplicitGC&quot; 
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/11/19/jenkins-PermGen-Space/index.html</link>
            <guid>http://demi-panda.com/2012/11/19/jenkins-PermGen-Space/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Win7 + Ubuntu12.04 + EasyBCD安装 ]]></title>
            <pubDate>Sun, 18 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;有时候为了满足不同的需求,很多用户选择安装双系统。双系统在安装的时候，两个系统是分别装在不同的分区内，后安装的系统不会覆盖前一个系统。而且每个单独的系统都有自己的分区格式，不会造成冲突的。安装了双系统后，在启动的时候，有一个多重启动的选择菜单，可以选择进入哪个操作系统。当前状态下，只有一个系统是在运行的，不能随意的切换。如果想要进入另外一个，就要重新启动，重新选择。&lt;/p&gt;

&lt;h3&gt;安装双系统 Windows7 + Ubuntu12.04&lt;/h3&gt;

&lt;p&gt;二个系统不在同一文件夹下就可以了.可以同盘的.文件夹名一定要不一样.如果装微软的，低版本先装再装高版本。如果是微软的和红旗，就要先装微软的 。&lt;/p&gt;

&lt;h3&gt;系统分区&lt;/h3&gt;

&lt;p&gt;可以使用计算机系统自带的分区工具，也可以使用DiskGenius软件。
装Ubuntu分配的硬盘大小最好是(20G以上）不要太小，这里请注意，ubuntu和windows文件系统完全不同，所以我们划好要给ubuntu的分区后，删除卷。到时候，安装好的ubuntu的分区，在windows下是看不到的，但是进入ubuntu是可以访问windows的磁盘的。这才叫双系统的吧，和wubi那种不一样哦。&lt;/p&gt;

&lt;h3&gt;软件准备&lt;/h3&gt;

&lt;p&gt;准备两个东西EasyBCD软件和iso镜像(我用的easybcd是2.0版，就下载1.7之后版就行，要那种安装版的，不要绿色版)&lt;/p&gt;

&lt;h3&gt;EasyBCD使用&lt;/h3&gt;

&lt;p&gt;选择“Add New Entry”-&gt; 选择NeoGrub&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/media/pub/os/EasyBCD-GRUB.jpg&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;p&gt;
选NeoGrub 然后点Install NeoGrub点Save ，接着是Configure
&lt;/p&gt;


&lt;p&gt;&lt;img src=&quot;/media/pub/os/easybcd-2.jpg&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;p&gt;
然后就会出现一个menu.lst文件,我们需要编辑这个文件,因为系统启动需要依靠这个文件找到我们的ubuntu的ios.
把下面的配置复制进去，把原来的全覆盖掉:
&lt;/p&gt;


&lt;pre&gt;
title Install Ubuntu
root (hd0,0)
kernel (hd0,0)/vmlinuz boot=casper iso-scan/filename=/ubuntu-12.04-amd64.iso ro quiet splash locale=zh_CN.UTF-8
initrd (hd0,0)/initrd.lz
&lt;/pre&gt;


&lt;p&gt;&lt;em&gt;特别注意:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;ubuntu-12.04-amd64.iso是你的iso的名字，别写成我的了，这个要改成你的。&lt;/p&gt;

&lt;p&gt;对于有的电脑上你的第一个盘符并不是C盘，在磁盘管理中可以看出，所以安装时需将(hd0,0)改为（hd0,1）【假设为第二个】。&lt;/p&gt;

&lt;p&gt;关闭-保存。&lt;/p&gt;

&lt;p&gt;接下来,把准备好的iso用压缩软件或者虚拟光驱打开，或者解压,然后找到casper文件夹，复制initrd.lz和vmlinuz到C盘根目录,然后在把iso也拷贝到C盘根目录。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;重启&lt;/em&gt;
你就会看到有2个启动菜单给你选择,我们选择第2个NeoGrub
默认桌面有2个文档,一个是演示的不用管,我们选择安装Ubuntu ，&lt;/p&gt;

&lt;p&gt;记得在这之前要按 &lt;code&gt;Ctrl+Alt+T&lt;/code&gt;  打开终端，取消掉对光盘所在驱动器的挂载，否则分区界面找不到分区。&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
sudo umount -l /isodevice
&lt;/pre&gt;


&lt;h3&gt;开始安装&lt;/h3&gt;

&lt;p&gt;根据自己的爱好，选择语言,选择安装类型，可以自定义.
&lt;img src=&quot;/media/pub/os/ubuntu-install.jpg&quot;&gt;&lt;/img&gt;
挂在分区的方案如下(以30G为例)：&lt;/p&gt;

&lt;pre id=&quot;wiki&quot;&gt;
/ 20G  ext4（根分区可以大点）
SWAP  2G
/home  8G ext4（剩下的给/home）
&lt;/pre&gt;


&lt;p&gt;&lt;img src=&quot;/media/pub/os/ubuntu-install-1.jpg&quot;&gt;&lt;/img&gt;
&lt;img src=&quot;/media/pub/os/ubuntu-install-2.jpg&quot;&gt;&lt;/img&gt;
&lt;img src=&quot;/media/pub/os/ubuntu-install-3.jpg&quot;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;注意:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;
(1)在选择安装启动引导器的设备时，可以选择我们分好的 / 区，也可以新建一个/boot区。
&lt;/p&gt;


&lt;p&gt;
(2)若重启就会发现原来 windows进不去了。
&lt;p&gt;

打开终端输入命令
&lt;pre id=&quot;bash&quot;&gt;
$ sudo vi /etc/default/grub
#修改GRUB_TIMEOUT=&quot;10&quot;
&lt;/pre&gt;
然后在终端中输入
&lt;pre id=&quot;bash&quot;&gt;
$ sudo update-grub
&lt;/pre&gt;
update 命令会自动找到 windows 7 启动项。并且自动更新 /boot/grub/grub.cfg 文件。这样重启就能进windows了。
&lt;p&gt;
(3)最后进入Window7，打开EasyBCD删除安装时改的menu.lst文件，按Remove即可。
然后去我们的c盘 删除vmlinuz，initrd.lz和系统的iso文件。
利用EasyBCD可以更改启动项菜单按Edit Boot Menu按钮，可以选择将Windows7设为默认开机选项。
&lt;p&gt;

###filesystem type is ntfs partition type 0x7 异常&lt;br&gt;
####描述
boot引导成功&lt;br&gt;
选择安装界面成功&lt;br&gt;
到filesystem type is ntfs, partition type 0x7&lt;br&gt;

####原因分析
1、文件系统为ntfs,linux的文件系统不是ntfs&lt;br&gt;
2、安装的分区不对

####解决方案
1、对于有的电脑上你的第一个盘符并不是C盘，在磁盘管理中可以看出，所以安装时需将(hd0,0)改为（hd0,1）
2、网上还有一种写法，没经过检验：
&lt;pre&gt;
loopback loop (hd0,N)/maverick-desktop-i386.iso
linux (loop)/vmlinuz boot=capser iso-scan/filename=/ubuntu-12.04-amd64.iso noprompt
initrd (loop)/casper/initrd.lz
boot
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/11/18/easybcd-win7-ubuntu/index.html</link>
            <guid>http://demi-panda.com/2012/11/18/easybcd-win7-ubuntu/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[markdown 语法学习 ]]></title>
            <pubDate>Sat, 17 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;h3&gt;概述&lt;/h3&gt;

&lt;p&gt;Markdown 的目标是实现「易读易写」。&lt;/p&gt;

&lt;p&gt;可读性，无论如何，都是最重要的。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，包括 Setext、atx、Textile、reStructuredText、Grutatext 和 EtText，而最大灵感来源其实是纯文本电子邮件的格式。&lt;/p&gt;

&lt;p&gt;总之， Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像&lt;em&gt;强调&lt;/em&gt;。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。&lt;/p&gt;

&lt;h3&gt;特殊字符自动转换&lt;/h3&gt;

&lt;p&gt;在 HTML 文件中，有两个字符需要特殊处理： &lt;code&gt;&amp;amp;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;&lt;/code&gt; 。 &lt;code&gt;&amp;amp;&lt;/code&gt; 符号用于起始标签，&lt;code&gt;&amp;lt;&lt;/code&gt; 符号则用于标记 HTML 实体，如果你只是想要显示这些字符的原型，你必须要使用实体的形式，像是&lt;code&gt; &amp;lt;&lt;/code&gt; 和 &lt;code&gt;&amp;amp;&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;amp;&lt;/code&gt; 字符尤其让网络文档编写者受折磨，如果你要打「&lt;code&gt;AT&amp;amp;T&lt;/code&gt;」 ，你必须要写成「&lt;code&gt;AT&amp;amp;amp;T&lt;/code&gt;」。而网址中的 &lt;code&gt;&amp;amp;&lt;/code&gt; 字符也要转换。比如你要链接到：&lt;/p&gt;

&lt;pre&gt;
http://images.google.com/images?num=30&amp;amp;q=larry+bird
&lt;/pre&gt;


&lt;p&gt;你必须要把网址转换写为：&lt;/p&gt;

&lt;pre&gt;
http://images.google.com/images?num=30&amp;amp;amp;q=larry+bird
&lt;/pre&gt;


&lt;p&gt;才能放到链接标签的 href 属性里。不用说也知道这很容易忽略，这也可能是 HTML 标准检验所检查到的错误中，数量最多的。&lt;/p&gt;

&lt;p&gt;Markdown 让你可以自然地书写字符，需要转换的由它来处理好了。如果你使用的 &lt;code&gt;&amp;amp;&lt;/code&gt; 字符是 HTML 字符实体的一部分，它会保留原状，否则它会被转换成 &lt;code&gt;&amp;amp;amp&lt;/code&gt;;。&lt;/p&gt;

&lt;p&gt;所以你如果要在文档中插入一个版权符号 ©，你可以这样写:&lt;/p&gt;

&lt;pre&gt;
&amp;amp;copy;
&lt;/pre&gt;


&lt;p&gt;Markdown 就会将它转为：&lt;/p&gt;

&lt;pre&gt;
AT&amp;amp;T
&lt;/pre&gt;


&lt;h3&gt;h 标题&lt;/h3&gt;

&lt;p&gt;类 Atx 形式则是在行首插入 1 到 6 个 # ，对应到标题 1 到 6 阶，例如：&lt;/p&gt;

&lt;pre id=&quot;html&quot;&gt;
# 这是 H1
## 这是 H2
###### 这是 H6
&lt;/pre&gt;


&lt;p&gt;你可以选择性地「闭合」类 atx 样式的标题，这纯粹只是美观用的，若是觉得这样看起来比较舒适，你就可以在行尾加上 #，而行尾的 # 数量也不用和开头一样（行首的井字符数量决定标题的阶数）：&lt;/p&gt;

&lt;pre &gt;
# 这是 H1 #
## 这是 H2 ##
### 这是 H3 ######
&lt;/pre&gt;


&lt;h3&gt;列表 ul 和 li&lt;/h3&gt;

&lt;p&gt;无序列表使用星号、加号或是减号作为列表标记：&lt;/p&gt;

&lt;pre&gt;
*   Red
*   Green
*   Blue
&lt;/pre&gt;


&lt;p&gt;等同于：&lt;/p&gt;

&lt;pre&gt;
+   Red
+   Green
+   Blue
&lt;/pre&gt;


&lt;p&gt;也等同于：&lt;/p&gt;

&lt;pre&gt;
-   Red
-   Green
-   Blue
&lt;/pre&gt;


&lt;p&gt;有序列表则使用数字接着一个英文句点：&lt;/p&gt;

&lt;pre&gt;
1.  Bird
2.  McHale
3.  Parish
&lt;/pre&gt;


&lt;p&gt;很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果，上面的列表所产生的 HTML 标记为:&lt;/p&gt;

&lt;pre&gt;
&amp;lt;ol&amp;gt;
&amp;lt;li&amp;gt;Bird&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;McHale&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;Parish&amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/pre&gt;


&lt;p&gt;如果你的列表标记写成：&lt;/p&gt;

&lt;pre&gt;
1.  Bird
1.  McHale
1.  Parish
&lt;/pre&gt;


&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;格式&lt;/th&gt;
      &lt;th&gt;用法&lt;/th&gt;
      &lt;th&gt;示例&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;h1标签&lt;/hd&gt;
      &lt;td&gt;    #标签&lt;/td&gt;
      &lt;td&gt;#我是h1
          =========
          ## h2
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ul标签&lt;/hd&gt;
      &lt;td&gt;    * 标签&lt;/td&gt;
      &lt;td&gt;  &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;


&lt;p&gt;你都会得到完全相同的 HTML 输出。重点在于，你可以让 Markdown 文件的列表数字和输出的结果相同，或是你懒一点，你可以完全不用在意数字的正确性。
如果列表项目间用空行分开，在输出 HTML 时 Markdown 就会将项目内容用 标签包起来，举例来说：&lt;/p&gt;

&lt;pre&gt;
*   Bird
*   Magic
&lt;/pre&gt;


&lt;p&gt;会被转换为：&lt;/p&gt;

&lt;pre&gt;
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;Bird&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;Magic&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/pre&gt;


&lt;p&gt;但是这个：&lt;/p&gt;

&lt;pre&gt;
*   Bird
*   Magic
&lt;/pre&gt;


&lt;p&gt;会被转换为：&lt;/p&gt;

&lt;pre&gt;
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Bird&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;p&amp;gt;Magic&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/pre&gt;


&lt;p&gt;换句话说，也就是在行首出现数字-句点-空白，要避免这样的状况，你可以在句点前面加上反斜杠。&lt;/p&gt;

&lt;pre&gt;
1986\. What a great season.
&lt;/pre&gt;


&lt;h3&gt;链接&lt;/h3&gt;

&lt;p&gt;Markdown 支持两种形式的链接语法： 行内式和参考式两种形式。
不管是哪一种，链接文字都是用 [方括号] 来标记。&lt;/p&gt;

&lt;p&gt;要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：&lt;/p&gt;

&lt;pre&gt;
This is [an example](http://example.com/ &quot;Title&quot;) inline link.
[This link](http://example.net/) has no title attribute.
&lt;/pre&gt;


&lt;p&gt;会产生：&lt;/p&gt;

&lt;pre&gt;
&amp;lt;p&amp;gt;This is &amp;lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&amp;gt;
an example&amp;lt;/a&amp;gt; inline link.&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;a href=&quot;http://example.net/&quot;&amp;gt;This link&amp;lt;/a&amp;gt; has no
title attribute.&amp;lt;/p&amp;gt;
&lt;/pre&gt;


&lt;p&gt;如果你是要链接到同样主机的资源，你可以使用相对路径：&lt;/p&gt;

&lt;pre&gt;
See my [About](/about/) page for details.
&lt;/pre&gt;


&lt;p&gt;参考式的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：&lt;/p&gt;

&lt;pre&gt;
This is [an example][id] reference-style link.
&lt;/pre&gt;


&lt;p&gt;你也可以选择性地在两个方括号中间加上一个空格：
&lt;per&gt;
This is [an example] [id] reference-style link.
&lt;/pre&gt;
接着，在文件的任意处，你可以把这个标记的链接内容定义出来：&lt;/p&gt;

&lt;pre&gt;
[id]: http://example.com/  &quot;Optional Title Here&quot;
&lt;/pre&gt;


&lt;p&gt;链接内容定义的形式为：&lt;/p&gt;

&lt;p&gt;方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字
接着一个冒号
接着一个以上的空格或制表符
接着链接的网址
选择性地接着 title 内容，可以用单引号、双引号或是括弧包着
下面这三种链接的定义都是相同：&lt;/p&gt;

&lt;pre&gt;
[foo]: http://example.com/  &quot;Optional Title Here&quot;
[foo]: http://example.com/  'Optional Title Here'
[foo]: http://example.com/  (Optional Title Here)
&lt;/pre&gt;


&lt;p&gt;请注意：有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的链接 title。&lt;/p&gt;

&lt;p&gt;链接网址也可以用方括号包起来：&lt;/p&gt;

&lt;pre&gt;
[id]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;
&lt;/pre&gt;


&lt;p&gt;你也可以把 title 属性放到下一行，也可以加一些缩进，若网址太长的话，这样会比较好看：&lt;/p&gt;

&lt;pre&gt;
[id]: http://example.com/longish/path/to/resource/here
    &quot;Optional Title Here&quot;
&lt;/pre&gt;


&lt;h3&gt;强调&lt;/h3&gt;

&lt;p&gt;Markdown 使用星号（&lt;code&gt;&lt;em&gt;&lt;/code&gt;）和底线（&lt;code&gt;_&lt;/code&gt;）作为标记强调字词的符号，被 &lt;code&gt;&lt;/em&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;em&gt;&lt;/code&gt; 包围的字词会被转成用 &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; 标签包围，用两个 &lt;code&gt;*&lt;/code&gt; 或 &lt;code&gt;&lt;/em&gt;&lt;/code&gt; 包起来的话，则会被转成 &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;，例如：&lt;/p&gt;

&lt;pre&gt;
*single asterisks*
_single underscores_
**double asterisks**
__double underscores__
&lt;/pre&gt;


&lt;p&gt;会转成:&lt;/p&gt;

&lt;pre&gt;
&amp;lt;em&amp;gt;single asterisks&amp;lt;/em&amp;gt;
&amp;lt;em&amp;gt;single underscores&amp;lt;/em&amp;gt;
&amp;lt;strong&amp;gt;double asterisks&amp;lt;/strong&amp;gt;
&amp;lt;strong&amp;gt;double underscores&amp;lt;/strong&amp;gt;
&lt;/pre&gt;


&lt;p&gt;你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。&lt;/p&gt;

&lt;p&gt;强调也可以直接插在文字中间：&lt;/p&gt;

&lt;pre&gt;
un*frigging*believable
&lt;/pre&gt;


&lt;p&gt;但是&lt;strong&gt;如果你的 &lt;code&gt;*&lt;/code&gt; 和 &lt;code&gt;_&lt;/code&gt; 两边都有空白的话，它们就只会被当成普通的符号&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;如果要在文字前后直接插入普通的星号或底线，你可以用反斜线：&lt;/p&gt;

&lt;pre&gt;
\*this text is surrounded by literal asterisks\*
&lt;/pre&gt;


&lt;h3&gt;代码&lt;/h3&gt;

&lt;p&gt;如果要标记一小段行内代码，你可以用反引号把它包起来（&lt;code&gt;`&lt;/code&gt;），例如：&lt;/p&gt;

&lt;pre&gt;
Use the `printf()` function.
&lt;/pre&gt;


&lt;p&gt;如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段：&lt;/p&gt;

&lt;pre&gt;
``There is a literal backtick (`) here.``
&lt;/pre&gt;


&lt;p&gt;这段语法会产生：&lt;/p&gt;

&lt;pre&gt;
&amp;lt;p&amp;gt;&amp;lt;code&amp;gt;There is a literal backtick (`) here.&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;
&lt;/pre&gt;


&lt;p&gt;代码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样你就可以在区段的一开始就插入反引号：&lt;/p&gt;

&lt;pre&gt;
A single backtick in a code span: `` ` ``

A backtick-delimited string in a code span: `` `foo` ``
&lt;/pre&gt;


&lt;p&gt;会产生：&lt;/p&gt;

&lt;pre&gt;
&amp;lt;p&amp;gt;A single backtick in a code span: &amp;lt;code&amp;gt;`&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;A backtick-delimited string in a code span: &amp;lt;code&amp;gt;`foo`&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;
&lt;/pre&gt;


&lt;h3&gt;图片&lt;/h3&gt;

&lt;p&gt;很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。&lt;/p&gt;


&lt;p&gt;Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： &lt;em&gt;行内式&lt;/em&gt;和&lt;em&gt;参考式&lt;/em&gt;。&lt;/p&gt;


&lt;p&gt;行内式的图片语法看起来像是：&lt;/p&gt;


&lt;pre&gt;
![Alt text](/path/to/img.jpg)
![Alt text](/path/to/img.jpg &quot;Optional title&quot;)
&lt;/pre&gt;


&lt;p&gt;详细叙述如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;一个惊叹号 &lt;code&gt;!&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;接着一个方括号，里面放上图片的替代文字&lt;/li&gt;
&lt;li&gt;接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上
选择性的 'title' 文字。&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;参考式的图片语法则长得像这样：&lt;/p&gt;

&lt;pre&gt;
![Alt text][id]
&lt;/pre&gt;


&lt;p&gt;「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：&lt;/p&gt;

&lt;pre&gt;
[id]: url/to/image  &quot;Optional title attribute&quot;
&lt;/pre&gt;


&lt;p&gt;到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 标签&lt;/p&gt;

&lt;h3&gt;反斜杠&lt;/h3&gt;

&lt;p&gt;Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; 标签），你可以在星号的前面加上反斜杠：i&lt;/p&gt;

&lt;pre&gt;
\*literal asterisks\*
&lt;/pre&gt;


&lt;p&gt;Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：&lt;/p&gt;

&lt;pre&gt;
\   反斜线
`   反引号
*   星号
_   底线
{}  花括号
[]  方括号
()  括弧
#   井字号
+   加号
-   减号
.   英文句点
!   惊叹号
&lt;/pre&gt;



 ]]></description>
            <link>http://demi-panda.com/2012/11/17/markdown/index.html</link>
            <guid>http://demi-panda.com/2012/11/17/markdown/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Linux ulimit 设置 ]]></title>
            <pubDate>Fri, 16 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;大家都知道Linux系统默认打开文件数是1024，而实际的生产环境中，这个值总是显得太小，而太小的后果就是你的系统会报：too many open files 等这样的错误导致你系统死掉，所以我们总是要修改这个值，虽然表面上看来，Linux提供了ulimit这样的命令让你修改这个文件打开数，但不幸的是，过程远远没有看到的那么简单，下面子猴就谈谈这方面的问题。&lt;/p&gt;

&lt;h3&gt;语法&lt;/h3&gt;

&lt;p&gt;ulimit 命令的格式为：ulimit [options] [limit]
具体的 options 含义以及简单示例可以参考以下表格。&lt;/p&gt;

&lt;h4&gt;ulimit 参数说明&lt;/h4&gt;

&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;ibm-data-table&quot;&gt;&lt;tr&gt;&lt;td style=&quot;text-align:left; vertical-align:top&quot;&gt;
&lt;strong&gt;选项 [options]&lt;/strong&gt;
&lt;/td&gt;&lt;td style=&quot;text-align:left; vertical-align:top&quot;&gt;
&lt;strong&gt;含义&lt;/strong&gt;
&lt;/td&gt;&lt;td style=&quot;text-align:left; vertical-align:top&quot;&gt;
&lt;strong&gt;例子&lt;/strong&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
-H 
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
设置硬资源限制，一旦设置不能增加。
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
ulimit – Hs 64；限制硬资源，线程栈大小为 64K。
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
-S 
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
设置软资源限制，设置后可以增加，但是不能超过硬资源设置。
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
ulimit – Sn 32；限制软资源，32 个文件描述符。
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
-a 
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
显示当前所有的 limit 信息。
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
ulimit – a；显示当前所有的 limit 信息。
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
-c 
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
最大的 core 文件的大小， 以 blocks 为单位。
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
ulimit – c unlimited； 对生成的 core 文件的大小不进行限制。
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
-d 
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
进程最大的数据段的大小，以 Kbytes 为单位。
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
ulimit -d unlimited；对进程的数据段大小不进行限制。
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
-f 
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
进程可以创建文件的最大值，以 blocks 为单位。
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
ulimit – f 2048；限制进程可以创建的最大文件大小为 2048 blocks。
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
-l 
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
最大可加锁内存大小，以 Kbytes 为单位。
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
ulimit – l 32；限制最大可加锁内存大小为 32 Kbytes。
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
-m 
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
最大内存大小，以 Kbytes 为单位。
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
ulimit – m unlimited；对最大内存不进行限制。
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
-n 
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
可以打开最大文件描述符的数量。
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
ulimit – n 128；限制最大可以使用 128 个文件描述符。
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
-p 
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
管道缓冲区的大小，以 Kbytes 为单位。
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
ulimit – p 512；限制管道缓冲区的大小为 512 Kbytes。
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
-s 
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
线程栈大小，以 Kbytes 为单位。
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
ulimit – s 512；限制线程栈的大小为 512 Kbytes。
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
-t 
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
最大的 CPU 占用时间，以秒为单位。
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
ulimit – t unlimited；对最大的 CPU 占用时间不进行限制。
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
-u 
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
用户最大可用的进程数。
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
ulimit – u 64；限制用户最多可以使用 64 个进程。
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
-v 
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
进程最大可用的虚拟内存，以 Kbytes 为单位。
&lt;/td&gt;&lt;td style=&quot;vertical-align:top&quot;&gt;
ulimit – v 200000；限制最大可用的虚拟内存为 200000 Kbytes。
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;


&lt;h3&gt;查看ulimit 参数 ulimit -a&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
core file size          (blocks, -c) 0
data seg size           (kbytes, -d) unlimited
scheduling priority             (-e) 0
file size               (blocks, -f) unlimited
pending signals                 (-i) 15951
max locked memory       (kbytes, -l) 64
max memory size         (kbytes, -m) unlimited
open files                      (-n) 1024
pipe size            (512 bytes, -p) 8
POSIX message queues     (bytes, -q) 819200
real-time priority              (-r) 0
stack size              (kbytes, -s) 8192
cpu time               (seconds, -t) unlimited
max user processes              (-u) 15951
virtual memory          (kbytes, -v) unlimited
file locks                      (-x) unlimited
&lt;/pre&gt;


&lt;p&gt;open files 系统默认下是1024, 程序中如果有大量的IO文件操作，很可能出现too many open files.&lt;/p&gt;

&lt;h3&gt;修改目标&lt;/h3&gt;

&lt;p&gt;我们的目标是：让每一个用户登录系统后系统打开的最大文件数都是我们设定好的。
但我这里不得不说的是：非常遗憾，网上很多这方面关于ulimit设置修改资源限制的文章，但没一篇文章管用。
把这个目标分解为两个目标：&lt;/p&gt;

&lt;h4&gt;设置对root用户登录系统生效&lt;/h4&gt;

&lt;p&gt;这个目标可以实现起来不难&lt;/p&gt;

&lt;h4&gt;设置对所有用户生效&lt;/h4&gt;

&lt;p&gt;这个就非常麻烦了，弄不好还会把你的系统给整坏，因为要重编译Linux的内核才行！
所以权衡之下，我只实现了第一个目标，因为第二个目标的风险太大，我想如果我之前知道这点，那么我在装系统的时候我会先做这个处理，但现在我觉得已经晚了。&lt;/p&gt;

&lt;h3&gt;修改的地方&lt;/h3&gt;

&lt;h4&gt;修改/etc/security/limits.conf&lt;/h4&gt;

&lt;p&gt;通过 vi /etc/security/limits.conf修改其内容，在文件最后加入（数值也可以自己定义）：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
* soft  nofile = 32768
* hard  nofile = 65536
&lt;/pre&gt;


&lt;h4&gt;修改/etc/profile&lt;/h4&gt;

&lt;p&gt;通过vi /etc/profile修改，在最后加入以下内容&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ ulimit -n 32768
&lt;/pre&gt;


&lt;p&gt;然后重新登录即可生效了。
说明：
其实只修改/etc/profile就可以生效了，但我还是建议把/etc/security/limits.conf也修改一下。
最后强调的是，你如果要使得修改对所有用户都生效，那么现在看来你只能重新编译Linux的内核才行&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/11/16/linux-ulimit/index.html</link>
            <guid>http://demi-panda.com/2012/11/16/linux-ulimit/index.html</guid>
            <author>demi-panda</author>
        </item>

        
        <item>
            <title><![CDATA[Linux 创建用户 ]]></title>
            <pubDate>Thu, 15 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;Linux 系统是一个多用户多任务的分时操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统。用户的账号一方面可以帮助系统管理员对使用系统的用户进行跟踪，并控制他们对系统资源的访问；另一方面也可以帮助用户组织文件，并为用户提供安全性保护。每个用户账号都拥有一个惟一的用户名和各自的口令。用户在登录时键入正确的用户名和口令后，就能够进入系统和自己的主目录。&lt;/p&gt;

&lt;p&gt;实现用户账号的管理，要完成的工作主要有如下几个方面：
· 用户账号的添加、删除与修改。
· 用户口令的管理。
· 用户组的管理。&lt;/p&gt;

&lt;h3&gt;Linux 系统账户用户管理&lt;/h3&gt;

&lt;p&gt;用户账号的管理工作主要涉及到用户账号的添加、修改和删除。
添加用户账号就是在系统中创建一个新账号，然后为新账号分配用户号、用户组、主目录和登录Shell等资源。刚添加的账号是被锁定的，无法使用。&lt;/p&gt;

&lt;h3&gt;创建用户 useradd&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$useradd testuser
#创建用户testuser
$ passwd testuser
#给已创建的用户testuser设置密码
&lt;/pre&gt;


&lt;p&gt;说明：新创建的用户会在/home下创建一个用户目录testuser
usermod --help 修改用户这个命令的相关参数
userdel testuser&lt;/p&gt;

&lt;h3&gt;常用命令&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;命令&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
  &lt;tr&gt;
    &lt;td&gt;-c, --comment COMMENT&lt;/hd&gt;
    &lt;td&gt;指定一段注释性描述。 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;-d, --home-dir HOME_DIR&lt;/hd&gt;
    &lt;td&gt;指定用户主目录,如果此目录不存在，则同时使用-m选项，可以创建主目录。&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; -m, --create-home&lt;/hd&gt;
    &lt;td&gt;创建主目录&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;-g, --gid GROUP&lt;/hd&gt;
    &lt;td&gt;指定用户所属的用户组&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;-G, --groups GROUPS&lt;/hd&gt;
    &lt;td&gt;用户组,指定用户所属的附加组。&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;-s, --shell SHELL&lt;/hd&gt;
    &lt;td&gt;指定用户的登录Shell&lt;/td&gt;
  &lt;/tr&gt;

  &lt;/tbody&gt;
&lt;/table&gt;


&lt;h4&gt;示例&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ useradd –d /usr/sam -m sam
#此命令创建了一个用户sam，
#其中-d和-m选项用来为登录名sam产生一个主目录/usr/sam（/usr为默认的用户主目录所在的父目录）。
&lt;/pre&gt;


&lt;h3&gt;删除用户&lt;/h3&gt;

&lt;p&gt;如果一个用户的账号不再使用，可以从系统中删除。删除用户账号就是要将/etc/passwd等系统文件中的该用户记录删除，必要时还删除用户的主目录。删除一个已有的用户账号使用userdel命令，其格式如下：&lt;/p&gt;

&lt;h4&gt;语法&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
userdel 选项 用户名
&lt;/pre&gt;


&lt;p&gt;常用的选项是-r，它的作用是把用户的主目录一起删除。&lt;/p&gt;

&lt;h4&gt;示例&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ usrdel -r testuser
#删除用户,并删除testuser所在目录
&lt;/pre&gt;


&lt;h3&gt;修改帐号&lt;/h3&gt;

&lt;p&gt;修改用户账号就是根据实际情况更改用户的有关属性，如用户号、主目录、用户组、登录Shell等。
修改已有用户的信息使用usermod命令，其格式如下：&lt;/p&gt;

&lt;h4&gt;语法&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ usermod 选项 用户名
&lt;/pre&gt;


&lt;p&gt;常用的选项包括-c, -d, -m, -g, -G, -s, -u以及-o等，这些选项的意义与useradd命令中的选项一样，可以为用户指定新的资源值。另外，有些系统可以使用如下选项：&lt;/p&gt;

&lt;h4&gt;示例&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ -l 新用户名
&lt;/pre&gt;


&lt;p&gt;这个选项指定一个新的账号，即将原来的用户名改为新的用户名&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ usermod -s /bin/ksh -d /home/z –g developer sam
&lt;/pre&gt;


&lt;p&gt;此命令将用户sam的登录Shell修改为ksh，主目录改为/home/z，用户组改为developer。&lt;/p&gt;

&lt;h3&gt;linux修改用户密码：&lt;/h3&gt;

&lt;pre id=&quot;wiki&quot;&gt;
如果是以root身份登录,修改root密码.只要输入
passwd
就会出现:
New password: 
Retype new password: 
按提示输入密码确认即可.
如果想更改其他用户密码,只要输入passwd username即可.
如:passwd testuser
New password: 
Retype new password:
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/11/15/linux-user-manager/index.html</link>
            <guid>http://demi-panda.com/2012/11/15/linux-user-manager/index.html</guid>
            <author>demi-panda</author>
        </item>

        
        <item>
            <title><![CDATA[Generating SSH Keys ]]></title>
            <pubDate>Wed, 14 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;如果你不使用推荐的HTTPS方法，可以使用SSH密钥建立安全连接您的计算机和GitHub。下面的步骤将引导您通过生成一个SSH密钥，然后添加到您的GitHub的帐户的公共密钥。&lt;/p&gt;

&lt;h3&gt;Step 1: Check for SSH keys&lt;/h3&gt;

&lt;p&gt;确认你本机的密钥,如果你有现有的密钥，则直接跳到step 4。&lt;/p&gt;

&lt;p&gt;首先，我们需要检查您的计算机上现有的SSH密钥。打开终端并运行：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ cd ~/.ssh
#确认&quot;.ssh&quot; 目录是否存在
&lt;/pre&gt;


&lt;p&gt;If it says &quot;No such file or directory&quot; skip to step 3. Otherwise continue to step 2.&lt;/p&gt;

&lt;h3&gt;Step 2: 备份并移除存在的SSH keys&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ ls
# Lists all the subdirectories in the current directory
 config  id_rsa  id_rsa.pub  known_hosts

$ mkdir key_backup
# Makes a subdirectory called &quot;key_backup&quot; in the current directory

cp id_rsa* key_backup
# Copies the id_rsa keypair into key_backup

rm id_rsa*
# Deletes the id_rsa keypair
&lt;/pre&gt;


&lt;h3&gt;Step 3: Generate a new SSH key&lt;/h3&gt;

&lt;p&gt;要生成新的SSH密钥，输入下面的代码。修改默认值，要求输入一个文件，保存密钥，只需按Enter键。&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot;
# Creates a new ssh key using the provided email

Generating public/private rsa key pair.
Enter file in which to save the key (/home/you/.ssh/id_rsa):
&lt;/pre&gt;


&lt;p&gt;按回车保存到默认位置，再稍等出来提示输入密码短语，输完按回车要输两遍；它用来加密私钥，也就是以后使用私钥的时候要输这个密码；&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
Enter passphrase (empty for no passphrase): [Type a passphrase]
Enter same passphrase again: [Type passphrase again]
&lt;/pre&gt;


&lt;p&gt;密钥生成成功，则会提示如下：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
Your identification has been saved in /home/you/.ssh/id_rsa.
Your public key has been saved in /home/you/.ssh/id_rsa.pub.
The key fingerprint is:
01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@youremail.com
&lt;/pre&gt;


&lt;h3&gt;Step 4: 添加SSH key to GitHub&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
sudo apt-get install xclip
#Downloads and installs xclip

xclip -sel clip &lt; ~/.ssh/id_rsa.pub
# Copies the contents of the id_rsa.pub file to your clipboard
&lt;/pre&gt;


&lt;p&gt;警告：重要的是要复制的关键，完全不添加换行符或空格。值得庆幸的是xclip的命令可以很容易地完全执行此设置。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to your &lt;a href=&quot;https://github.com/settings&quot;&gt;Account Settings&lt;/a&gt;
&lt;p&gt;
&lt;img src=&quot;/media/pub/github/userbar-account-settings.png&quot;  alt=&quot;&quot;&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Click &lt;a href=&quot;https://github.com/settings/ssh&quot;&gt;&amp;quot;SSH Keys&amp;quot;&lt;/a&gt; in the left sidebar
&lt;p&gt;&lt;img src=&quot;/media/pub/github/settings-sidebar-ssh-keys.png&quot; width=&quot;320px&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Click &amp;quot;Add SSH key&amp;quot;
&lt;p&gt;&lt;img src=&quot;/media/pub/github/ssh-add-ssh-key.png&quot; width=&quot;320px&quot; alt=&quot;&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;Paste your key into the &amp;quot;Key&amp;quot; field
&lt;p&gt;&lt;img src=&quot;/media/pub/github/ssh-key-paste.jpg&quot; width=&quot;320px&quot; alt=&quot;&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;Click &amp;quot;Add key&amp;quot;
&lt;p&gt;&lt;img src=&quot;/media/pub/github/ssh-add-key.png&quot; width=&quot;320px&quot; alt=&quot;&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;Confirm the action by entering your GitHub password&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;Step 5: 测试&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ ssh -T git@github.com
# Attempts to ssh to github
&lt;/pre&gt;


&lt;p&gt;You may see this warning:&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
The authenticity of host github.com (207.97.227.239) can't be established.
RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
Are you sure you want to continue connecting (yes/no)?
&lt;/pre&gt;


&lt;p&gt;输入&quot;yes&quot;,验证的指纹相匹配.&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
Hi username! You've successfully authenticated, but GitHub does not
provide shell access.
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/11/14/github-generating-ssh-keys/index.html</link>
            <guid>http://demi-panda.com/2012/11/14/github-generating-ssh-keys/index.html</guid>
            <author>demi-panda</author>
        </item>

        
        <item>
            <title><![CDATA[Subversion恢复到某个版本 ]]></title>
            <pubDate>Tue, 13 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;　　Subversion将文件存放在中心版本库里，这个版本库很像一个普通的文件服务器。不同的是，它可以记录每一次文件和目录的修改情况，这样就可以在需要的回滚时，将数据恢复到以前的版本，并可以查看数据的更改细节。&lt;/p&gt;

&lt;h3&gt;问题描述&lt;/h3&gt;

&lt;p&gt;假设原来的版本为 r10，我修改了工作副本，并提交，变成r11；后来又修改，提交，变成r12。&lt;/p&gt;

&lt;p&gt;最终我发现这两次提交都有问题，如何让代码仓库中的内容恢复到r10的内容呢？（最好是放弃r11和r12，或者可以使r13的内容跟r10相同）&lt;/p&gt;

&lt;h3&gt;解决方案&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ svn merge -r 12:10 http://svn.example.com/repos/myproject/trunk -m &quot;message&quot;
&lt;/pre&gt;


&lt;h3&gt;常用操作&lt;/h3&gt;

&lt;h5&gt;还原到某个版本&lt;/h5&gt;

&lt;pre id=&quot;bash&quot;&gt;
svn up -r 版本号
svn up -r 版本号 文件名称
&lt;/pre&gt;


&lt;h5&gt;还原改动&lt;/h5&gt;

&lt;p&gt;对应提交(commit)，要有类似回滚（rollback）的操作。&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ svn revert
&lt;/pre&gt;


&lt;h5&gt;还原已提交的改动&lt;/h5&gt;

&lt;p&gt;revert只适合未提交的情况。
如果已经提交，发现问题，要回退到之前的修订版。
首先需要：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ svn up
&lt;/pre&gt;


&lt;p&gt;让本地工作拷贝更新到最新状态。
然后：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ svn log your_file_path
&lt;/pre&gt;


&lt;p&gt;查看文件日志，这时候提交时填写的说明信息就派上用场了。
查看两个修订版之间的不同：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ svn diff -r 旧修订版序号:新修订版序号 your_file_path
&lt;/pre&gt;


&lt;p&gt;决定用哪个旧的修订版号后，用旧的修订版号文件覆盖新的修订版号文件。&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ svn merge -r 新修订版序号:旧修订版序号 your_file_path
&lt;/pre&gt;


&lt;p&gt;还需要：&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ svn commit -m “恢复到某修订版（某修订版作废）”
&lt;/pre&gt;


&lt;p&gt;这个还原是所谓的，不是用旧的版本号替代，而是将旧文件覆盖新文件。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/11/13/version-revert/index.html</link>
            <guid>http://demi-panda.com/2012/11/13/version-revert/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[梦想旅程 ]]></title>
            <pubDate>Tue, 13 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;麻雀低飞百座村乡，只为了觅得更好的食物，生存的信念，足以让其放弃高傲的力量；雁掠千里云层，只为了回归温暖的巢窝，活着的意念，足以让其忍受风雨穿梭的苦涩；人行万里旅程，只为了追求心中的梦想，坚守的意志，足以让其忘却漂泊流浪的无奈与痛楚！&lt;/p&gt;

&lt;p&gt;每当有人问我：“一光年的距离有多远？”我总是苦笑不已。我深深的知道那是一种梦想的距离，当机会来时，就在你的身边，你却没有发现它，甚至它还很顽皮的在你的视线徘徊、从你的指缝悄然滑过，如白驹过隙那般错过，这是一种让人含泪苦笑的距离！
&lt;a href=&quot;http://demi-panda.com/media/pub/life/pub/hope.jpg&quot; alt=&quot;生活&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/pub/hope.jpg&quot; alt=&quot;生活&quot; class=&quot;img-right&quot; width=&quot;330px&quot; /&gt;
&lt;/a&gt;
许多人为了追求心中的梦想，背井离乡、漂泊流浪，忍受风霜的漂洒、雨雪的吹冻；每当夜幕降临，月色朦胧、竹影婆娑，嫩叶载着旖旎的星光，唤着归根的影魂，露珠闪着晶莹的光束，飘着优美的音符……&lt;/p&gt;

&lt;p&gt;追求梦想的人们，或点燃一根烟，凝望着窗外的夜色，思念家乡路口的那棵古树，那乐趣无边、嬉戏纯真、牧童笛声的童年岁月；或躺在床上，任凭晚风挤过帘缝、月光舞着完美的旋律，甜甜的濡睡；梦里，与心爱的人携手漫步于山谷小径，萤火虫轻翔着，载着暖光而来，花儿的香味，弥漫着空气，舒适着美丽的心情……&lt;/p&gt;

&lt;p&gt;梦想的旅程，是一种辛酸的过程，追逐的路途上，布满太多的坎坷与挫折，充满了许许多多无奈的选择、寂寞与苦闷、忧愁与烦恼；奔跑的路上，也乐在其中，过程总是充满乐趣的，有梦想的人是幸福的，勇于追求梦想的人是快乐的，因为他们懂得生活，更懂得珍惜生活的真谛！&lt;/p&gt;

&lt;p&gt;忙碌的生活，往往会使我们迷失了方向，失去应有的理智，甚至忘却了思考，更变得肤浅起来；让我们活得休闲些吧，回归人性的本真，让生活的信念更加有品位，让生活充满诗意，像蝴蝶一样在阳光下翩然起舞，轻盈洒脱、自由闲适、平实自然！&lt;/p&gt;

&lt;p&gt;追逐梦想的路上，偶尔停一下脚步，放松紧绷着的心情，给自己多点空间去休闲，晨起看曙光饮露水、黄昏赏夕阳恋晚霞、夜里望月听弦思故乡，或依窗静听风雨、与心爱的人漫步原野、闻着花香听着鸟语、或登山望尽万紫千红、踏青田园小径绘色彩、心系海边沙滩细数海鸥……&lt;/p&gt;

&lt;p&gt;让我们的梦想旅程更加精彩，像花香一样，飘然四溢，四季各具风采，永驻岁月；像星月一样，迷恋着晶莹的露珠，谱写着美丽的童话，浪漫心间；像蝴蝶一样，漫步于风中，轻舞于花间，乐此不疲！这样，我们的人生才会五彩斑斓、缤纷多姿！&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/11/13/life-hope/index.html</link>
            <guid>http://demi-panda.com/2012/11/13/life-hope/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Google Code Prettify 实现代码高亮 ]]></title>
            <pubDate>Tue, 13 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;Prettify提供一个Javascript模块和CSS 文件,可以在HTML页面中显示源代码的代码高亮效果。这是用于code.google.com的脚本。&lt;/p&gt;

&lt;h3&gt;语法&lt;/h3&gt;

&lt;pre id=&quot;javascript&quot;&gt;
&amp;lt;pre class=&amp;quot;prettyprint&amp;quot; id=&amp;quot;language&amp;quot;&amp;gt;
@*你的代码片断*@
&amp;lt;/pre&amp;gt;
&lt;/pre&gt;


&lt;h3&gt;常用的语言&lt;/h3&gt;

&lt;p&gt;将id的language改成以下的语言：&lt;/p&gt;

&lt;pre&gt;
“bash”, “c”, “cc”, “cpp”, “cs”, “csh”, “cyc”, “cv”, “htm”, “html”, ”java”, “js”, “m”, “mxml”, “perl”, “pl”, “pm”, “py”, “rb”, “sh”, ”xhtml”, “xml”, “xsl”
&lt;/pre&gt;


&lt;h3&gt;prettify.js 的使用方法:&lt;/h3&gt;

&lt;h5&gt;1、引入 jQuery 文件和 prettify.js 文件&lt;/h5&gt;

&lt;pre id=&quot;javascript&quot;&gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;jquery-1.6.1.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;prettify.js&amp;quot; type=&amp;quot;text/javascript&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/pre&gt;


&lt;h5&gt;2、调用 prettify.js 实现代码高亮&lt;/h5&gt;

&lt;p&gt;在 body 标签上添加调用方法，如下：&lt;/p&gt;


&lt;pre id=&quot;javascript&quot;&gt;
&amp;lt;body onload=&amp;quot;prettyPrint()&amp;quot;&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/pre&gt;


&lt;p&gt;将你需要高亮显示的代码片断放在&amp;lt;pre&amp;gt;标记里，如下：&lt;/p&gt;


&lt;pre id=&quot;javascript&quot;&gt;
&amp;lt;pre class=&amp;quot;prettyprint&amp;quot;&amp;gt;
@*你的代码片断*@
&amp;lt;/pre&amp;gt;
&lt;/pre&gt;


&lt;h3&gt;使用 jQuery 小技巧实现优化&lt;/h3&gt;

&lt;p&gt;上述方法可以实现代码的高亮，但每次手动为&amp;lt;pre&amp;gt;标签添加&amp;quot;prettyprint&amp;quot;类，显示有些麻烦。使用下边的代码片断来解决这个问题并替换掉 body 的&amp;quot;onload&amp;quot;的事件，实现分离：&lt;/p&gt;


&lt;pre class=&quot;prettyprint&quot; id=&quot;javascript&quot;&gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
$(window).load(function(){
    $(&amp;quot;pre&amp;quot;).addClass(&amp;quot;prettyprint&amp;quot;);
    prettyPrint();
})
&amp;lt;/script&amp;gt;
&lt;/pre&gt;


&lt;p&gt;到这我们应该已经成功使用 prettify.js 实现了代码的高亮显示，为了提高页面加载速度，我们应该将引用的 js 文件放置在底部，大家可以参考下本站的放置方法。&lt;/p&gt;


&lt;h3&gt;DEMO JAVA代码高亮显示&lt;/h3&gt;

&lt;pre class=&quot;prettyprint linenums&quot; id=&quot;java&quot;&gt;
package foo;

import java.util.Iterator;

/**
 * the fibonacci series implemented as an Iterable.
 */
public final class Fibonacci implements Iterable&amp;lt;Integer&gt; {
  /** the next and previous members of the series. */
  private int a = 1, b = 1;

  @Override
  public Iterator&amp;lt;Integer&gt; iterator() {
    return new Iterator&amp;lt;Integer&gt;() {
      /** the series is infinite. */
      public boolean hasNext() { return true; }
      public Integer next() {
        int tmp = a;
        a += b;
        b = tmp;
        return a;
      }
      public void remove() { throw new UnsupportedOperationException(); }
    };
  }

  /**
   * the n&amp;lt;sup&gt;th&amp;lt;/sup&gt; element of the given series.
   * @throws NoSuchElementException if there are less than n elements in the
   *   given Iterable's {@link Iterable#iterator iterator}.
   */
  public static &amp;lt;T&gt;
  T nth(int n, Iterable&amp;lt;T&gt; iterable) {
    Iterator&amp;lt;? extends T&gt; it = iterable.iterator();
    while (--n &gt; 0) {
      it.next();
    }
    return it.next();
  }

  public static void main(String[] args) {
    System.out.print(nth(10, new Fibonacci()));
  }
}
&lt;/pre&gt;



 ]]></description>
            <link>http://demi-panda.com/2012/11/13/google-code-prettify/index.html</link>
            <guid>http://demi-panda.com/2012/11/13/google-code-prettify/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[SSH免密码远程登录设置 ]]></title>
            <pubDate>Mon, 12 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;由于这几天需要写一个线上日志查询的小系统。打算使用ssh远程登录进行相关log文件的操作。
为了操作的方便，就找了一个ssh的java实现 jsch http://www.jcraft.com/jsch/
然后写了一些代码进行测试。
后来发现实际环境中，需要通过 public key 的方式进行ssh的登录验证。
所以我在测试环境上需要配置下。&lt;/p&gt;

&lt;p&gt;这里写一下配置的过程。
假设有A机器和B机器，A机器通过非密码的方式登录B机器，&lt;/p&gt;

&lt;h3&gt;1.生成密钥对&lt;/h3&gt;

&lt;p&gt;这个时候我们来到A机器进行相关操作
一般情况下，我们的公钥私钥都是放在 ~/.ssh目录下的
如果没有的话，需要自己生成，&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;luke@luke-desktop:~/.ssh&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/home/luke/.ssh/id_rsa&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
Enter passphrase &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;empty &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;no passphrase&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
Enter same passphrase again:
Your identification has been saved in /home/luke/.ssh/id_rsa.
Your public key has been saved in /home/luke/.ssh/id_rsa.pub.
The key fingerprint is:
9a:34:fd:c6:9f:3d:81:f5:be:f1:e5:df:a1:25:bb:2c luke@luke-desktop
The key&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;s randomart image is:
+--&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; RSA 2048&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;----+
|                 |
|                 |
|                 |
|       .      .  |
|      o S    o . |
|     . + o  . . .|
|      o   +  . *.|
|         . E.o*.B|
|            +&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ooB|
+-----------------+
luke@luke-desktop:~/.ssh&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ls
id_rsa  id_rsa.pub  known_hosts
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;其中id_rsa为私钥 id_rsa.pub为公钥，&lt;/p&gt;

&lt;p&gt;至于known_hosts文件，它是用来保存以前远程登录过的主机的公钥的&lt;/p&gt;

&lt;h3&gt;2.在远程机器中添加本地机器的公钥&lt;/h3&gt;

&lt;p&gt;现在我们需要做的是将A机器的公钥加入到B机器的authorized_keys文件中（可以直接拷贝粘贴，如果 authorized_keys文件不存在的话，就在B机器中新建~/.ssh/authorized_keys），然后开启开启B机器的 PubkeyAuthentication的选项&lt;/p&gt;

&lt;p&gt;vi /etc/ssh/sshd_config &lt;br/&gt;
设置下面的选项：&lt;br/&gt;
PubkeyAuthentication yes&lt;br/&gt;
重启sshd   service sshd restart&lt;/p&gt;

&lt;p&gt;这个时候就可以在A机器上ssh登录B 机器了，现在不需要输入用户对应的linux密码了，但是需要输入创建私钥的时候所输入的passphrase，但是这个密码无须在网络上进行传输了。&lt;/p&gt;

&lt;h3&gt;3.使用ssh-add&lt;/h3&gt;

&lt;p&gt;我们可以通过ssh-add命令将私钥的密码交给ssh-agent进行管理，这样我们登录远程机器的时候，就会直接使用缓存起来的passphrase，而不会让你每次手动的输入。&lt;/p&gt;

&lt;h3&gt;4.其他&lt;/h3&gt;

&lt;p&gt;一开始发现，本机登录远程机器在登录的时候相当慢，后来发现和两个选项有关&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#GSSAPIAuthentication yes&lt;/span&gt;
UseDNS no
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;还有一个有点悲剧的事情就是我为了重新验证设置的正确性，将本地的密钥对全部删除后，重新生成了一对，结果发现服务器端被我限死成公钥方式的登录，我一想，这下可彻底的悲剧了，登录不了阿。不过灵机一动，翻出以前的一个邮件，有一个系统急救的方法，就是通过一个跳板机器，然后vnc直接连如XEN虚拟机，然后在公钥验证的下面将密码验证方式设置为yes，重启sshd服务，然后重启从本地登录，重复上面的设置过程，恩，虚惊一场阿，不过下次修改删除操作还是先做好备份才靠谱。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/11/12/using-ssh-for-passwordless-remote-login/index.html</link>
            <guid>http://demi-panda.com/2012/11/12/using-ssh-for-passwordless-remote-login/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Subversion 文件状态含义 ]]></title>
            <pubDate>Mon, 12 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;打印工作拷贝文件和目录的状态。如果没有参数，只会打印本地修改的项目(不会访问版本库)，使用--show-updates选项，会添加工作修订版本和服务器过期信息。使用--verbose会打印每个项目的完全修订版本信息。
输出的前六列都是一个字符宽，每一列给出了工作拷贝项目的每一方面的信息。
第一列指出一个项目的是添加、删除还是其它的修改&lt;/p&gt;

&lt;h3&gt;语法&lt;/h3&gt;

&lt;pre&gt;
svn status [PATH...]
&lt;/pre&gt;


&lt;h3&gt;详细介绍&lt;/h3&gt;

&lt;pre&gt;' ' item&lt;/pre&gt;


&lt;p&gt;没有修改。&lt;/p&gt;

&lt;pre&gt;'A' item&lt;/pre&gt;


&lt;p&gt;文件、目录或是符号链item预定加入到版本库。&lt;/p&gt;

&lt;pre&gt;'C' item&lt;/pre&gt;


&lt;p&gt;文件item发生冲突，在从服务器更新时与本地版本发生交迭，在你提交到版本库前，必须手工的解决冲突。&lt;/p&gt;

&lt;pre&gt;'D' item&lt;/pre&gt;


&lt;p&gt;文件、目录或是符号链item预定从版本库中删除。&lt;/p&gt;

&lt;pre&gt;'M' item&lt;/pre&gt;


&lt;p&gt;文件item的内容被修改了。&lt;/p&gt;

&lt;pre&gt;'R' item&lt;/pre&gt;


&lt;p&gt;文件、目录或是符号链item预定将要替换版本库中的item，这意味着这个对象首先要被删除，另外一个同名的对象将要被添加，所有的操作发生在一个修订版本。&lt;/p&gt;

&lt;pre&gt;'X' item&lt;/pre&gt;


&lt;p&gt;目录没有版本化，但是与Subversion的外部定义关联，关于外部定义，可以看“外部定义”一节。&lt;/p&gt;

&lt;pre&gt;'?' item&lt;/pre&gt;


&lt;p&gt;文件、目录或是符号链item不在版本控制之下，你可以通过使用svn status的--quiet（-q）参数或父目录的svn:ignore属性忽略这个问题，关于忽略文件的使用，见“svn:ignore”一节。&lt;/p&gt;

&lt;pre&gt;'!' item&lt;/pre&gt;


&lt;p&gt;文件、目录或是符号链item在版本控制之下，但是已经丢失或者不完整，这可能因为使用非Subversion命令删除造成的，如果是一个目录，有可能是检出或是更新时的中断造成的，使用svn update可以重新从版本库获得文件或者目录，也可以使用svn revert file恢复原来的文件。&lt;/p&gt;

&lt;pre&gt;'~' item&lt;/pre&gt;


&lt;p&gt;文件、目录或是符号链item在版本库已经存在，但你的工作拷贝中的是另一个。举一个例子，你删除了一个版本库的文件，新建了一个在原来的位置，而且整个过程中没有使用svn delete或是svn add。&lt;/p&gt;

&lt;pre&gt;'I' item&lt;/pre&gt;


&lt;p&gt;文件、目录或是符号链item不在版本控制下，Subversion已经配置好了会在svn add、svn import和svn status命令忽略这个文件，关于忽略文件，见“svn:ignore”一节。注意，这个符号只会在使用svn status的参数--no-ignore时才会出现—否则这个文件会被忽略且不会显示！&lt;/p&gt;

&lt;pre&gt;'L' item &lt;/pre&gt;


&lt;p&gt;项目已经锁定。
第四列只在预定包含历史添加的项目出现。&lt;/p&gt;

&lt;pre&gt;'+' item&lt;/pre&gt;


&lt;p&gt;历史预定要伴随提交。
第五列只在项目跳转到相对于它的父目录时出现(见“使用分支(http://i18n-zh.googlecode.com/svn/www/svnbook-1.4/svn.branchmerge.switchwc.html)”一节)。&lt;/p&gt;

&lt;p&gt;  &lt;pre&gt;'S' item&lt;/pre&gt;
  项目已经转换。&lt;/p&gt;

&lt;p&gt;  &lt;pre&gt;' ' item &lt;/pre&gt;
  当使用--show-updates，文件没有锁定。如果不使用--show-updates，这意味着文件在工作拷贝被锁定。&lt;/p&gt;

&lt;p&gt;  &lt;pre&gt;'K' item &lt;/pre&gt;
  文件锁定在工作拷贝。&lt;/p&gt;

&lt;p&gt;  &lt;pre&gt;'O' item&lt;/pre&gt;
  文件被另一个工作拷贝的另一个用户锁定，只有在使用--show-updates时显示。&lt;/p&gt;

&lt;p&gt;  &lt;pre&gt;'T' item &lt;/pre&gt;
  文件锁定在工作拷贝，但是锁定被“窃取”而不可用。文件当前锁定在版本库，只有在使用--show-updates时显示。&lt;/p&gt;

&lt;p&gt;  &lt;pre&gt;'B' item&lt;/pre&gt;
  文件锁定在工作拷贝，但是锁定被“破坏”而不可用。文件当前锁定在版本库，只有在使用--show-updates时显示。
  过期信息出现在第七列(只在使用--show-updates选项时出现)。&lt;/p&gt;

&lt;p&gt;  &lt;pre&gt;'*' &lt;/pre&gt;
  在服务器这个项目有了新的修订版本。
  余下的字段是可变得宽度且使用空格分隔，如果使用--show-updates或--verbose选项，工作修订版本是下一个字段。
  如果传递--verbose选项，最后提交的修订版本和最后的提交作者会在后面显示。
  工作拷贝路径永远是最后一个字段，所以它可以包括空格。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/11/12/first-subversion/index.html</link>
            <guid>http://demi-panda.com/2012/11/12/first-subversion/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[三谈github页面域名绑定:域名跳转 ]]></title>
            <pubDate>Fri, 09 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;之前我写过&lt;a href=&quot;/2012/11/09/github-pages-domain/&quot; target=&quot;_blank&quot;&gt;浅谈github页面域名绑定&lt;/a&gt;和&lt;a href=&quot;/2012/11/09/github-pages-domain-2/&quot; target=&quot;_blank&quot;&gt;再谈github页面域名绑定&lt;/a&gt;，在后文提到的域名跳转方法是错的。本文提供了一种正确的方法。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;为什么要跳转域名&lt;/h2&gt;


&lt;p&gt;假设github上的用户名是 &lt;em&gt;username&lt;/em&gt;，创建代码库名为username.github.com的代码库，在master分支下建立github页面，设置好域名为 &lt;em&gt;mydomain.com&lt;/em&gt; ，则用http://username.github.com访问页面github会自动跳转到http://mydomain.com。&lt;/p&gt;




&lt;p&gt;但是如果在已经设置了username.github.com域名之后，把项目代码库repo的gh-pages分支下的网站设置域名 &lt;em&gt;mydomain2.com&lt;/em&gt; ，用http://username.github.com/repo访问的时候只会自动跳转到http://mydomain.com/repo，不会跳转到http://mydomain2.com 。虽然http://mydomain.com/repo的形式也可以访问，但是用于网页地址里相对路径的不同，造成很多资源（比如css和js文件）无法访问，网页变得面目全非，例如&lt;a href=&quot;http://hsatac.github.com/octo/&quot;&gt;http://hsatac.github.com/octo/&lt;/a&gt;，它实际绑定的域名应该是&lt;a href=&quot;http://blog.hsatac.net/&quot;&gt;http://blog.hsatac.net/&lt;/a&gt;，前者不能正常显示。&lt;/p&gt;




&lt;h2 id=&quot;javascript&quot;&gt;用javascript实现域名跳转&lt;/h2&gt;


&lt;p&gt;原来我以为用.htaccess文件可以实现网址跳转，后来发现当初跳转成功是因为浏览器缓存了解析的域名，给github发信咨询，得到的回复是github现在还不支持.htaccess，以后可能会考虑把这个功能加上。&lt;/p&gt;




&lt;p&gt;我也考虑过用下面的代码实现转址&lt;/p&gt;


&lt;pre id=&quot;bash&quot;&gt;
&amp;lt;meta http-equiv=&amp;quot;refresh&amp;quot;content=&amp;quot;0; url=http://mydomain2.com&amp;quot;&amp;gt;
&lt;/pre&gt;




&lt;p&gt;但是，问题是这样跳转后其实还是转到了自己这个网页，只不过换了个地址。这样这段代码会反复执行，在firefox和chrome下没有感觉，但是在IE下就很明显了。&lt;/p&gt;




&lt;p&gt;我想到了用javascript来检测网页的地址，然后跳转到目标地址。只需要将将下面的代码放到&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;和&lt;code&gt;&amp;lt;/head&amp;gt;&lt;/code&gt;之间，注意把网址替换成自己的。&lt;/p&gt;


&lt;pre id=&quot;bash&quot;&gt;
&amp;lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot;&amp;gt;

if (location.href == &quot;http://chen.yanping.me/art/&quot;) {
    window.location.replace(&quot;http://art.yanping.me/&quot;);
    }

    &amp;lt;/script&amp;gt;
&lt;/pre&gt;


&lt;p&gt;注意：域名末尾的&lt;em&gt;/&lt;/em&gt;一定要有，我之前就因为没发现这点，所以才浪费了很长时间。&lt;/p&gt;

&lt;p&gt;原文地址:&lt;a href=&quot;http://yanping.me/cn/blog/2012/02/06/github-pages-domain-3/&quot;&gt;http://yanping.me/cn/blog/2012/02/06/github-pages-domain-3/&lt;/a&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/11/09/github-pages-domain-3/index.html</link>
            <guid>http://demi-panda.com/2012/11/09/github-pages-domain-3/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[再谈github页面域名绑定 ]]></title>
            <pubDate>Fri, 09 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;之前我写过一篇&lt;a href=&quot;http://demi-panda.com/2012/11/09/github-pages-domain/&quot; target=&quot;_blank&quot;&gt;浅谈github页面域名绑定&lt;/a&gt;，现在一直困扰我的问题终于解决了。&lt;/p&gt;




&lt;p&gt;假设你的用户名是&lt;code&gt;username&lt;/code&gt;，要绑定一个二级域名的话，那么不管是user page还是project page，除了在github的版本库里添加CNAME文件，还要在DNS record里增加相应的CNAME记录指向&lt;code&gt;username.github.com&lt;/code&gt;。注意这里的表述，指向的地址在两种情况下都是一样的。&lt;/p&gt;




&lt;p&gt;如果要绑定顶级域名，就建立A记录，指向&lt;code&gt;207.97.227.245&lt;/code&gt;。&lt;/p&gt;




&lt;p&gt;经过这样的操作，你想绑定几个域名都可以了。&lt;/p&gt;




&lt;h2 id=&quot;section&quot;&gt;域名跳转的问题&lt;/h2&gt;


&lt;p&gt;&lt;del&gt;当你访问&lt;code&gt;username.github.com&lt;/code&gt;这个地址时，Github会自动转到绑定的域名，但是当你访问&lt;code&gt;http://username.github.com/repo-name&lt;/code&gt;这样的网址，虽然可以显示网页，但是地址不会自动转。&lt;/del&gt;&lt;/p&gt;




&lt;p&gt;&lt;del&gt;可以用.htaccess文件来实现跳转，在repo代码库根目录下创建.htaccess文件&lt;/del&gt;&lt;/p&gt;




&lt;p&gt;&lt;span class=&quot;warning&quot;&gt;
本文域名跳转部分有误，请看&lt;a href=&quot;http://demi-panda.com/2012/11/09/github-pages-domain-3/&quot; target=&quot;_blank&quot;&gt;三谈github页面域名绑定&lt;/a&gt;
&lt;/span&gt;
&lt;/p&gt;



 ]]></description>
            <link>http://demi-panda.com/2012/11/09/github-pages-domain-2/index.html</link>
            <guid>http://demi-panda.com/2012/11/09/github-pages-domain-2/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[浅谈github页面域名绑定 ]]></title>
            <pubDate>Fri, 09 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;前段时间看到COS上的各位都有博客，也想开个博，给COS的各位管理员发邮件，向他们请教如何开个像怡轩和太云那样的博客，思喆兄说要向益辉申请空间和cos的二级域名。无奈老大太忙，迟迟没有给我分配空间和域名，只是某次提到有个叫&lt;a target=&quot;_blank&quot; href=&quot;http://github.com&quot;&gt;github&lt;/a&gt;的东西，可以在上面建网页，还可以写博客，写博客还可以不用网络哦亲，只要在本地写好，哪天有网络了就一个push过去哦亲，so fashion！&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;于是我又给他写了很多邮件，向他请教如何使用该系统，结果，他还是不回复。得，自己研究吧。&lt;/p&gt;




&lt;p&gt;关于如何在github上创建页面本文就不讲了，文章末尾会列出参考文献，本文着重介绍github页面的域名绑定问题。
github pages的&lt;a target=&quot;_blank&quot; href=&quot;http://pages.github.com/&quot;&gt;官方主页&lt;/a&gt;这样说：&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;假设你github的用户名为&lt;strong&gt;username&lt;/strong&gt;，那么创建一个名为username.github.com的代码库（repository）,在这个库中上传html、CSS等静态页面文件，可以用地址 http://username.github.com来访问页面了，这个页面就是你账户的主页面（User pages）。&lt;/li&gt;
&lt;li&gt;如果你又创建了个叫&lt;strong&gt;repo&lt;/strong&gt;的代码库，在它下面的gh-pages分支里上传了html、CSS等静态页面文件，那么用http://username.github.com/repo这个地址就能访问页面了。&lt;/li&gt;
&lt;li&gt;要想生成复杂点的页面，可以用&lt;a target=&quot;_blank&quot; href=&quot;http://github.com/mojombo/jekyll/&quot;&gt;jekyll&lt;/a&gt;，语法高亮用&lt;code&gt;pygments&lt;/code&gt; 。&lt;/li&gt;
        &lt;li&gt;要想域名绑定，在代码库的根目录下放一个CNAME文件就行了，文件里写上想要绑定的域名，然后在域名DNS管理的后台网站建立指向就行。如果想把页面绑定到二级域名，需要创建一个CNAME指向。如果要把页面绑定到顶级域名，需要创建一个A指向。不能用CNAME指向顶级域名，否则会造成冲突。 &lt;/li&gt;
        &lt;/ul&gt;




&lt;p&gt;现在问题就来自上面的最后一条，当我建立了个用户页面 http://username.github.com并把它的域名绑定为顶级域名example.com之后，我账户下所有代码库页面都变成了example.com下面的二级目录。我想这可能是因为代码库页面原来的网址为http://username.github.com/repo，DNS把http://username.github.com解析成了http://example.com。请看 &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/lmorchard&quot;&gt;https://github.com/lmorchard&lt;/a&gt;，他在github上有两个博客， &lt;a target=&quot;_blank&quot; href=&quot;http://decafbad.com/skein&quot;&gt;http://decafbad.com/skein&lt;/a&gt; 和 &lt;a target=&quot;_blank&quot; href=&quot;http://decafbad.com/blog/&quot;&gt;http://decafbad.com/blog/ &lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;del&gt;然而当我把用户页面的域名绑定为二级域名http://sub.example.com之后，所有代码库的页面都404了。所以我还是建议把顶级域名绑定到用户页面，这样代码库页面也能够正常访问。&lt;/del&gt; 今天又试了一下，我把用户页面的域名绑定为二级域名，项目页面还是可以显示的，依然是二级目录的形式。明天我再试试换过来会怎么样。&lt;/p&gt;




&lt;p&gt;如果我不给用户页面绑定域名，或者干脆不创建用户页面，是不是可以给代码库页面绑定域名呢？答案是否定的，因为A指向需要提供个IP地址，CNAM需要指向个域名，而不能是http://username.github.com/repo的形式。&lt;/p&gt;




&lt;p&gt;如果想充分利用你的域名和子域名，我暂时能想到的就是多开几个github账户吧，关于一台电脑上多个github账户的操作，网上有现成的教程，我会在以后整理出来。 &lt;/p&gt;




&lt;p&gt;我也注意到github也有例外，请看&lt;a target=&quot;_blank&quot; href=&quot;http://gitready.com/&quot;&gt;http://gitready.com/&lt;/a&gt;这个网站，它在github上的代码地址是&lt;a target=&quot;_blank&quot; href=&quot;http://github.com/gitready/gitready/&quot;&gt;http://github.com/gitready/gitready/&lt;/a&gt; , 可以看到它还有别的语言版本，域名分别是&lt;a target=&quot;_blank&quot; href=&quot;http://de.gitready.com/&quot;&gt;http://de.gitready.com/&lt;/a&gt;、&lt;a target=&quot;_blank&quot; href=&quot;http://fr.gitready.com&quot;&gt;http://fr.gitready.com&lt;/a&gt; 。。。 这是怎么做到的呢？ 我注意到，它这个目录下没有master分支，是跟这个有关吗？ 目前还没有得到作者的回复，也从知晓。感兴趣的同学们来研究一下吧。&lt;/p&gt;




&lt;h3 id=&quot;section&quot;&gt;快速应用&lt;/h3&gt;


&lt;p&gt;&lt;code&gt;jekyll&lt;/code&gt;对初学者太难掌握，有人推荐使用&lt;a target=&quot;_blank&quot; href=&quot;http://www.octopress.org&quot;&gt;octopress&lt;/a&gt;、&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/cloudhead/toto&quot;&gt;toto&lt;/a&gt;或者&lt;a target=&quot;_blank&quot; href=&quot;http://alexyoung.org/2011/07/24/pop/&quot;&gt;pop&lt;/a&gt;等基于Jekyll的静态博客站点生成系统&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;，它很大程度上简化了用Jekyll搭建博客的过程。&lt;del&gt;可惜这些系统在windows下都不能顺畅使用，我也没试成功。使用Linux的同学可以试一试。&lt;/del&gt;&lt;ins&gt;在windows下使用Octopress的教程请看我的&lt;a href=&quot;http://chen.yanping.me/cn/blog/2011/12/26/octopress-on-windows/&quot; target=&quot;_blank&quot;&gt;博客文章&lt;/a&gt;&lt;/ins&gt;。&lt;/p&gt;


&lt;p&gt;原文地址：&lt;a href=&quot;http://yanping.me/cn/blog/2011/12/04/github-pages-domain/&quot;&gt;http://yanping.me/cn/blog/2011/12/04/github-pages-domain/&lt;/a&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/11/09/github-pages-domain/index.html</link>
            <guid>http://demi-panda.com/2012/11/09/github-pages-domain/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[2012年的第一场雪 ]]></title>
            <pubDate>Sun, 04 Nov 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;今天,2012年北京的第一场雪来的比往年早,40小时雨雪降水超历史,也在今天俺开始科目二实车训练啦，心情比较激动，不惧怕风雨雪。&lt;/p&gt;

&lt;p&gt;经常在网上浏览别人的博客,自己也在网上有写过自己的博客,但是总感觉不是很清新，让人愉快的感觉。
&lt;a href=&quot;http://demi-panda.com/media/pub/life/pub/2012-11-04.jpg&quot; alt=&quot;2012年北京的第一场雪&quot; rel=&quot;prettyPhoto[20121104]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/pub/2012-11-04.jpg&quot; alt=&quot;2012年北京的第一场雪&quot; class=&quot;img-right&quot; width=&quot;330px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;于是乎在了解到可以在github上搭建个人博客，采用的是&lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;Jekyll&lt;/a&gt;模板搭建的。&lt;/p&gt;

&lt;p&gt;Jekyll是一个博客生成引擎，可以将markdown写成的博客生成静态的HTML博客。 当然Jekyll提供了一些的辅助工具，支持模板，可以辅助你生成分类和标签页。&lt;/p&gt;

&lt;p&gt;Github Page是Github的一个非常好的服务，免费，可以绑定域名。&lt;/p&gt;

&lt;h3&gt;科目二考试通过&lt;/h3&gt;

&lt;p&gt;北京2012第二场雪，今年学车还真不容易，正所谓是经历了大风，大雨，大雪的考验。就在18号这天，激动的把科目二考过啦
&lt;a href=&quot;http://demi-panda.com/media/pub/life/pub/2012-12-16.jpg&quot; rel=&quot;prettyPhoto[20121104]&quot; alt=&quot;北京 2012年的第二场雪&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/pub/2012-12-16.jpg&quot; alt=&quot;北京 2012年的第二场雪&quot; width=&quot;580px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;世界末日 2012年12月21日&lt;/h3&gt;

&lt;p&gt;在世界末日来临之前，北京飘起了第三场雪，仔细的看了下，发现这场雪比以前的显得光亮些，如此奇异的世界难道真是末日的前兆？
刚写了一篇世界末日的文章，&lt;a href=&quot;http://demi-panda.com/2012/12/21/shijiemori/&quot;&gt;&amp;lt;&amp;lt;世界末日爽约&gt;&gt;&lt;/a&gt;
&lt;a href=&quot;http://demi-panda.com/media/pub/life/pub/2012-12-20.jpg&quot; alt=&quot;世界末日&quot; rel=&quot;prettyPhoto[20121104]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/pub/2012-12-20.jpg&quot; alt=&quot;世界末日之北京第三场雪&quot; width=&quot;580px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;末日过后,迎来&lt;a href=&quot;http://demi-panda.com/2013/01/13/air-pollution-programs-do-you-know/&quot;&gt;阴霾天气&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/pub/air-2013.jpg&quot; rel=&quot;prettyPhoto[20121104]&quot; alt=&quot;北京-阴霾天气&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/pub/air-2013.jpg&quot; alt=&quot;北京天空的污染&quot;  width=&quot;580px&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;末日后的收获&lt;/h3&gt;

&lt;p&gt;在经历过传说中的&lt;a href=&quot;http://demi-panda.com/2012/12/21/shijiemori/&quot;&gt;&amp;lt;&amp;lt;世界末日&gt;&gt;&lt;/a&gt;,&lt;a href=&quot;http://demi-panda.com/2013/01/13/air-pollution-programs-do-you-know/&quot;&gt;阴霾天气&lt;/a&gt;,传说中的&lt;a href=&quot;http://news.baidu.com/ns?cl=2&amp;rn=20&amp;tn=news&amp;word=%E5%8F%B2%E4%B8%8A%E6%9C%80%E4%B8%A5%E9%A9%BE%E8%80%83&amp;ie=utf-8&quot; target=&quot;_bank&quot;&gt;《史上最严格的驾照》&lt;/a&gt;考试，终于拿到了驾照，正所谓不经历风雨，怎能见彩虹。
&lt;a href=&quot;http://demi-panda.com/media/pub/life/pub/my-driving-licenese.jpg&quot; rel=&quot;prettyPhoto[20121104]&quot; alt=&quot;驾照&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/pub/my-driving-licenese.jpg&quot; alt=&quot;北京驾照&quot;  width=&quot;560px&quot; &gt;&lt;/img&gt;
&lt;/a&gt;&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2012/11/04/first-post/index.html</link>
            <guid>http://demi-panda.com/2012/11/04/first-post/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Linux 安装Jekyll 环境 ]]></title>
            <pubDate>Tue, 30 Oct 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;Jekyll是一套blog框架，利用他和github的page页就可以搭建个人的blog了。git的好处和安装使用就不多说了，主要介绍下如何在Ubuntu安装和配置Jekyll。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;参考资料&lt;/em&gt;
&lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;https://github.com/mojombo/jekyll&lt;/a&gt;
&lt;a href=&quot;http://jekyllbootstrap.com/&quot;&gt;http://jekyllbootstrap.com/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Github上创建blog项目&lt;/h3&gt;

&lt;p&gt;在&lt;a href=&quot;https://github.com/&quot;&gt;gituhub dashboard&lt;/a&gt;上建立一个新项目，名字为username.github.com。注意username为你github的账号，这个项目一定要用这个名字，这个名字的项目github会自动建立一个username.github.com的页面，将你在这个项目里的文件依照Jekyll摸板进行解析&lt;/p&gt;

&lt;h3&gt;安装Jekyll-Bootstrap&lt;/h3&gt;

&lt;p&gt;其实就是下载Jekyll摸板并上传&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ git clone https://github.com/plusjade/jekyll-bootstrap.git USERNAME.github.com
&lt;/pre&gt;


&lt;p&gt;如果碰到https证书验证错误之类的提示可以加上sudo试一下。不过如果sudo后要用chgrp和chown把用户改回来，不然之后会很麻烦.&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ cd USERNAME.github.com
$ git remote set-url origin git@github.com:USERNAME/USERNAME.github.com.git
$ git push origin master
&lt;/pre&gt;


&lt;p&gt;一切正常的话几分钟后就会收到github发来的邮件通知你页面建立完毕。可以通过username.github.com进行访问了。&lt;/p&gt;

&lt;h3&gt;本地调试Jekyll&lt;/h3&gt;

&lt;p&gt;其实可以把所有的修改直接上传到github上让服务器帮忙解析网页来观察效果，但是如果想在本地调试的话本地也要装一套jekyll&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo gem install jekyll
&lt;/pre&gt;


&lt;p&gt;Jekyll requires the gems directory_watcher, liquid, open4, maruku and classifier. These are automatically installed by the gem install command.
安装ruby1.9.1-dev&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo apt-get install ruby1.9.1-dev
&lt;/pre&gt;


&lt;p&gt;Red Hat / CentOS / Fedora systems 需要使用如下命令:&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo yum install ruby-devel
&lt;/pre&gt;


&lt;h3&gt;安装RDiscount&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo gem install rdiscount
&lt;/pre&gt;


&lt;p&gt;And run Jekyll with the following option:&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ jekyll --rdiscount
&lt;/pre&gt;


&lt;h3&gt;安装Pygments语法高亮&lt;/h3&gt;

&lt;h4&gt;On OS X Leopard, Snow Leopard&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo easy_install Pygments
&lt;/pre&gt;


&lt;h4&gt;Alternatively on OS X with MacPorts:&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo port install python25 py25-pygments
&lt;/pre&gt;


&lt;h4&gt;On Archlinux&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo pacman -S python-pygments
&lt;/pre&gt;


&lt;h4&gt;On Ubuntu and Debian:&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo apt-get install python-pygments
&lt;/pre&gt;


&lt;h4&gt;On Fedora and CentOS:&lt;/h4&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo yum install python-pygments
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/10/30/install-jekyll/index.html</link>
            <guid>http://demi-panda.com/2012/10/30/install-jekyll/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[泰山旅游 ]]></title>
            <pubDate>Sun, 06 May 2012 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;风光旖旎，底蕴媲美于有昊之顶；日露半脸，玄机堪称在九霄之外。
去两次泰山了，对此还是非常的向往,下面分享下相关信息。&lt;/p&gt;

&lt;h2&gt;泰 山&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/taishan/taishan.jpg&quot; alt=&quot;泰山&quot; rel=&quot;prettyPhoto[201205062230]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/taishan/taishan.jpg&quot; alt=&quot;泰山&quot; class=&quot;img-left&quot; width=&quot;230px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://baike.baidu.com/view/5464.htm&quot;&gt;泰山&lt;/a&gt;是我国的“&lt;a href=&quot;http://baike.baidu.com/view/3668.htm&quot;&gt;五岳&lt;/a&gt;”之首，有“中华国山”、“天下第一山”之美誉，又称东岳，中国最美的、令人震撼的十大名山之一，列中华十大名山之首，位于山东泰安，自然景观雄伟高大，有数千年精神文化的渗透和渲染以及人文景观的烘托，著名风景有天烛峰、&lt;a href=&quot;http://baike.baidu.com/view/133902.htm&quot;&gt;日观峰&lt;/a&gt;、百丈崖、仙人桥、五大夫松、望人松、龙潭飞瀑、云桥飞瀑、三潭飞瀑等。泰山于1987年被列入世界自然文化遗产名录，是中国首例自然文化双重遗产项目。数千年来，先后有十二位皇帝来泰山封禅 。孔子留下了“登泰山而小天下”的赞叹，杜甫则留下了“会当凌绝顶，一览众山小”的千古绝唱。&lt;/p&gt;

&lt;h3&gt;概述&lt;/h3&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;泰山山体雄伟壮观，景色秀丽。中国古代神话传说中，盘古死后，头部化为泰山。据《史记集解》所载：“天高不可及，于泰山上立封禅而祭之，冀近神灵也。”古人形容“泰山吞西华，压南衡,驾中嵩，轶北恒，为五岳之长”。&lt;a href=&quot;http://demi-panda.com/media/pub/life/taishan/taian.jpg&quot; alt=&quot;泰山&quot;&gt;&lt;img src=&quot;http://demi-panda.com/media/pub/life/taishan/taian.jpg&quot; alt=&quot;泰山&quot; class=&quot;img-right&quot; width=&quot;230px&quot; /&gt;&lt;/a&gt;
古代传统文化认为，东方为万物交替、初春发生之地，故泰山有“五岳之长”、“五岳独尊”的称誉。因其气势之磅礴为五岳之首，故又有“天下名山第一”的美誉。5万年前的新泰人化石遗存和40万年前的沂源人化石遗存显示出这一带早期的人类活动。泰山南麓的大汶口文化，北麓的龙山文化遗存也反映出早期黄河流域氏族部落的活动状况。战国时期，齐国沿泰山山脉直达黄海边修筑了长约500千米的长城，今遗址犹存。进入秦汉之后，泰山逐渐成为政权的象征。自古以来，中国人就崇拜泰山，有“泰山安，四海皆安”的说法。古代历朝历代不断在泰山封禅和祭祀，并且在泰山上下建庙塑神，刻石题字。古代的文人雅士更对泰山仰慕备至，纷纷前来游历，作诗记文。泰山宏大的山体上留下了20余处古建筑群，2200余处碑碣石刻。&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;泰山多松柏，更显其庄严、巍峨、葱郁；又多溪泉，故而不乏灵秀与缠绵。缥缈变幻的云雾则使它平添了几分神秘与深奥。&lt;a href=&quot;http://demi-panda.com/media/pub/life/taishan/duzun.jpg&quot; &gt;&lt;img src=&quot;http://demi-panda.com/media/pub/life/taishan/duzun.jpg&quot; alt=&quot;五岳独尊&quot; class=&quot;img-right&quot; width=&quot;330px&quot; /&gt;&lt;/a&gt;
它既有秀丽的麓区、静谧的幽区、开阔的旷区，又有虚幻的妙区、深邃的奥区；还有旭日东升、云海玉盘、晚霞夕照、黄河金带等十大自然奇观及石坞松涛、对松绝奇、桃园精舍、灵岩胜景等十大自然景观，宛若一幅天然的山水画卷；人文景观，其布局重点从泰城西南祭地的社首山、蒿里山至告天的玉皇顶，形成“地府”、“人间”、“天堂”三重空间。岱庙是山下泰城中轴线上的主体建筑，前连通天街，后接盘道，形成山城一体。由此步步登高，渐入佳境，而由“人间”进入“天庭仙界”。&lt;/p&gt;

&lt;h3&gt;地理位置&lt;/h3&gt;

&lt;p&gt;泰山位于山东省中部，隶属于泰安市（地级市）。
绵亘于泰安、济南、淄博三市之间，东西长约200公里，南北宽约50公里。主峰玉皇峰，在泰安市城区北，东经117°6′，北纬36°16′。贯穿山东中部，主脉，支脉，余脉涉及周边十余县。海拔：1532.7米。极顶玉皇顶-玉皇峰。泰山位于中国北部山东省中部的泰安市之北，泰山海拔1532.7米。&lt;/p&gt;

&lt;h3&gt;泰山交通&lt;/h3&gt;

&lt;h4&gt;火车&lt;/h4&gt;

&lt;p&gt;火车是泰山旅游的主要交通工具之一，泰安主要有泰山站和泰安站两个火车站，泰安高铁站是京沪高铁线上的车站之一，所有动车和高铁都停靠泰安站，普快和特快车停靠在泰山火车站。目前，经过泰安站的高铁与动车有49趟，基本上可以乘动车或高铁南来北往的。普快和特快也有100趟列车都停靠泰山站。因此乘火车往返也很便捷。&lt;/p&gt;

&lt;p&gt;【泰安高铁站】&lt;/p&gt;

&lt;p&gt;1、北京上海南京方向/杭州和福州方向动车或者高铁。&lt;/p&gt;

&lt;p&gt;2、泰安高铁站往返市区的公交，现有17路、18路公交车
17路：山东宏康—泰山大街—高铁泰安站站前大街—泰西广场站—灵山大街—泮河大街—泰山大街—长城路—东岳大街—望岳东、西路—擂鼓石大街—普照寺路—岱宗大街—八十八医院—环山路向东—宝龙城市广场&lt;/p&gt;

&lt;p&gt;18路：火车站—老汽车站—泰山大街—温州步行街西侧路—三里庄路—迎胜路—泮河大街—灵山大街—高铁泰安站&lt;/p&gt;

&lt;p&gt;3、从泰安高铁站到红门要20元左右。&lt;/p&gt;

&lt;h4&gt;汽车&lt;/h4&gt;

&lt;p&gt;泰安市的公路交通非常发达，仅高速公路就有京沪高速、京福高速、泰博高速穿越境内，外可直抵首都北京、上海、福州，内可与济南、青岛、烟台、威海、日照、淄博，实现高速公路互通。
从泰安到济南仅63公里，到曲阜68公里，1小时内皆可到达。泰安到淄博142公里，车程2小时。此外，泰安市火车站也有直达济南或曲阜的依维柯。&lt;/p&gt;

&lt;h3&gt;登山线路&lt;/h3&gt;

&lt;p&gt;泰山现在常规的是四条线：
&lt;a href=&quot;http://demi-panda.com/media/pub/life/taishan/ditu.jpg&quot; alt=&quot;泰山地图&quot; rel=&quot;prettyPhoto[201205062230]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/taishan/ditu.jpg&quot; alt=&quot;泰山地图&quot; class=&quot;img-right&quot; width=&quot;230px&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1．第一条：最经典的红门路徒步中线，其实是中线登封御道。
　　是指从岱庙（东岳庙）-一天门-孔子登临处-红门-中天门-南天门-玉皇顶&lt;/p&gt;

&lt;p&gt;2．第二条是坐汽车上山的环山公路线！当然你也可以自己顺着公路走！呵~
　　天外村（天地广场）-环山路-竹林寺-黄溪河水库-中天门-南天门-玉皇顶&lt;/p&gt;

&lt;p&gt;3．第三条是从西北侧山口进！是桃花源入口！是环山公路！也可以自己走！
　　桃花峪入口-环山公路-彩石溪-赤磷鱼保护区-桃花源索道-南天门-玉皇顶&lt;/p&gt;

&lt;p&gt;4．第四条是东北侧山口方向，一般说是天烛峰！也就是后山。&lt;/p&gt;

&lt;h3&gt;著名景点&lt;/h3&gt;

&lt;h4&gt;十八盘&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/taishan/taishan.jpg&quot; alt=&quot;十八盘&quot; rel=&quot;prettyPhoto[201205062230]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/taishan/taishan.jpg&quot; alt=&quot;十八盘&quot; class=&quot;img-right&quot; width=&quot;230px&quot; /&gt;
&lt;/a&gt;
泰山有3个十八盘之说。自开山至龙门为“慢十八”，再至升仙坊为“不紧不慢又十八”，又至南天门为“紧十八”，共计1630余阶。“紧十八”西崖有巨岩悬空， 侧影似佛头侧枕，高鼻秃顶，慈颜微笑，名迎客佛。 十八盘岩层陡立，倾角70至80度。泰山十八盘是泰山登山盘路中最险要的一段，共有石阶1600余级，为泰山的主要标志之一。此处两山崖壁如削，陡峭的盘路镶嵌其中，远远望去，恰似天门云梯。&lt;/p&gt;

&lt;h4&gt;南天门&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/taishan/nantianmen.jpg&quot; alt=&quot;南天门&quot; rel=&quot;prettyPhoto[201205062230]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/taishan/nantianmen.jpg&quot; alt=&quot;南天门&quot; width=&quot;580px&quot;/&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;日出&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/taishan/richu.jpg&quot; alt=&quot;泰山日出&quot; rel=&quot;prettyPhoto[201205062230]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/taishan/richu.jpg&quot; alt=&quot;泰山日出&quot; width=&quot;580px&quot;/&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;观日峰&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://demi-panda.com/media/pub/life/taishan/guanrifeng.jpg&quot; alt=&quot;观日峰&quot; rel=&quot;prettyPhoto[201205062230]&quot;&gt;
&lt;img src=&quot;http://demi-panda.com/media/pub/life/taishan/guanrifeng.jpg&quot; alt=&quot;观日峰&quot; width=&quot;580px&quot;/&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;小贴士&lt;/h3&gt;

&lt;h4&gt;最佳旅游时间&lt;/h4&gt;

&lt;p&gt;每年4月到11月为最佳观赏时间。
因为观日秋季最佳，天高气爽。有时天气好的话还可以看见黄河。而雪天和雨天则是奇景倍出的时间。你有可能看到云海奇观，更有可能看到大雪之后美不胜收的泰山美景。&lt;/p&gt;

&lt;p&gt;泰安的公交车无特殊说明的线路，票价均为1元/人次，K字打头的空调车票价为2元。&lt;/p&gt;

&lt;p&gt;上山时有人忽悠你租大衣什么之类的，大家完全可以不搭理，不管他说的如何寒冷，如何优惠，只要到山上如果感觉冷，就可以租大衣，貌似10元-20元左右吧！&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;投诉中心：0538-8066077&lt;/li&gt;
&lt;li&gt;泰山景区防火值班室（火灾报警）：0538-8066111，0538-8225841&lt;/li&gt;
&lt;li&gt;南天门救助站值班电话：0538-8066206&lt;/li&gt;
&lt;li&gt;中天门救助站值班电话：0538-8216076&lt;/li&gt;
&lt;li&gt;红门游人服务中心：0538-6228289&lt;/li&gt;
&lt;/ol&gt;

 ]]></description>
            <link>http://demi-panda.com/2012/05/06/taishan/index.html</link>
            <guid>http://demi-panda.com/2012/05/06/taishan/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[在Django模板中使用css、javascript 等静态文件 ]]></title>
            <pubDate>Sat, 15 Oct 2011 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;  　　在使用Django开发的Web项目中是避免不了使用css、javascript、js等静态文件的，而对于这些静态文件的处理，django官 网这样写：Django itself doesn’t serve static (media) files, such as images, style sheets, or video. It leaves that job to whichever Web server you choose.就是说django本身不处理类似于图片、样式表、视频等静态文件，它将此项工作交给了你选择的Web服务器。
  　　在网上搜索到的django项目处理静态文件的示例中，大家似乎都在使用如下的方法让django处理静态文件：&lt;/p&gt;

&lt;pre id=&quot;python&quot;&gt;
urlpatterns += patterns('',  
      (r'^static/(?P.*)$', 'django.views.static.serve',  
      {'document_root':  settings.MEDIA_ROOT}),  
)
&lt;/pre&gt;


&lt;p&gt;   　　而对于django.views.static.serve方法，django官网说得很清楚：Using this method is inefficient and insecure . Do not use this in a production setting. Use this only for development.就是说这种方法是低效且不安全的，不要在生产环境使用此方法，只在开发环境使用。
   　　这时对于静态文件的处理，我们只能使用我们选择的Web服务器来处理了。比如使用nginx服务器的话，可以如下设置：&lt;/p&gt;

&lt;h3&gt;设置Django settings.py&lt;/h3&gt;

&lt;pre id=&quot;python&quot;&gt;
MEDIA_ROOT = '/home/denghaiping/workspace/djcode/mysite/static/'

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash.
# Examples: &quot;http://media.lawrence.com/media/&quot;, &quot;http://example.com/media/&quot;
MEDIA_URL = '/static/'

# Absolute path to the directory static files should be collected to.
# Don't put anything in this directory yourself; store your static files
# in apps' &quot;static/&quot; subdirectories and in STATICFILES_DIRS.
# Example: &quot;/home/media/media.lawrence.com/static/&quot;
STATIC_ROOT = ''

# URL prefix for static files.
# Example: &quot;http://media.lawrence.com/static/&quot;
STATIC_URL = '/static/'

# URL prefix for admin static files -- CSS, JavaScript and images.
# Make sure to use a trailing slash.
# Examples: &quot;http://foo.com/static/admin/&quot;, &quot;/static/admin/&quot;.
ADMIN_MEDIA_PREFIX = '/static/admin/'
&lt;/pre&gt;


&lt;h3&gt;apache2 配置&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
&amp;lt;Location &quot;/static/&quot;&amp;gt;
SetHandler None
Order allow,deny
Allow from all 
&amp;lt;/Location&amp;gt;
Alias /static /home/denghaiping/workspace/djcode/mysite/static
Alias /static/admin /usr/local/lib/python2.6/dist-packages/django/contrib/admin/media

&amp;lt;Location &quot;/static/admin&quot;&amp;gt;
SetHandler None                                                             
Order allow,deny
Allow from all 
&amp;lt;/Location&amp;gt;
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2011/10/15/django-static-css/index.html</link>
            <guid>http://demi-panda.com/2011/10/15/django-static-css/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Jenkins CI Used For Mac App Dev ]]></title>
            <pubDate>Tue, 14 Jun 2011 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;h3&gt;介绍&lt;/h3&gt;

&lt;p&gt;在开发一个软件的过程中，测试或者项目经理经常需要得到软件的最新版本。&lt;br/&gt;
如果每次都是开发手动编译给他们，有点浪费时间，也不科学。&lt;br/&gt;
所以这个任务可以交给计算机来作，每当你有代码提交的时候或者每当系统定期检测到有代码更新的时候，系统自动进行编译打包，并可以通过浏览器来下载最新的软件版本。&lt;br/&gt;
你也许会说，这个不是持续集成的一部分么？哈哈，的确是。&lt;/p&gt;

&lt;p&gt;这里使用的CI（持续集成）软件是 Jenkins CI，以前叫做Hudson ci后来迫于oracle的相关政策，年初的时候改名了。&lt;a href=&quot;https://github.com/jenkinsci&quot;&gt;https://github.com/jenkinsci&lt;/a&gt;  这里是其代码。 &lt;br/&gt;
其实CI囊括的东西远远不止自动编译了，还可以有代码提交后的自动化测试，生成各种测试报告，自动打包部署等等。&lt;/p&gt;

&lt;h3&gt;安装配置及使用&lt;/h3&gt;

&lt;p&gt;这里要说的是开发一个mac软件，想要使用Jenkins进行定期编译打包应该怎么做。&lt;br/&gt;
首先你得有一台mac server或者一台普通的mac机器做服务器。&lt;/p&gt;

&lt;p&gt;下载Jenkins &lt;a href=&quot;http://jenkins-ci.org/&quot;&gt;http://jenkins-ci.org/&lt;/a&gt; 可以直接下载mac系统的安装包。&lt;br/&gt;
安装好了之后，会在Applications目录下多一个Jenkins的目录，里面就一个war包，jenkins.war&lt;br/&gt;
这个时候你可以启动Jenkins服务了&lt;br/&gt;
进去/Applications/Jenkins目录，运行 java -jar jenkins.war –httpPort=9080 –ajp13Port=9009   （当然你可以通过nohup的方式使得其在后台运行）你也可以不指定http和ajp的端口，使用默认的值，默认的http端口是8080&lt;br/&gt;
启动好了之后就可以通过浏览器 访问&lt;a href=&quot;http://localhost:9080/&quot;&gt;http://localhost:9080/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;系统的一些设置都在 Manage Jenkins 选项中，你可以在插件管理的界面中选择安装一些插件。&lt;br/&gt;
比如帐号权限管理的插件，Git支持的插件，这里就先不要权限管理了。直接安装一个git插件。&lt;/p&gt;

&lt;p&gt;然后进入主界面，新建一个Job，&lt;br/&gt;
勾选第一个Build a free-style software project，下一步中填写项目描述，源码管理处选择Git，然后填写Git库地址以及分支
Build Triggers 可以选择定期执行
Build这边，由于是Mac项目，不像Java项目可以有Ant或者Maven这些三方的构建工具。
命令行编译XCode的项目只能通过XCode自带的命令行工具来，所以只能选shell脚本的方式，这边的输入框中可以写脚本，也可以将具体的脚本写在项目中随项目一起提交到git库中，这里只负责一些环境变量的设置以及脚本的调用。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;REVISION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;${GIT_COMMIT:0:7}&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;FOLDER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#${BUILD_NUMBER}.Rev.${REVISION}&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ARCHIVE_DIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/Users/Luke/Test/${FOLDER}&amp;quot;&lt;/span&gt;
mkdir -p &lt;span class=&quot;s2&quot;&gt;&amp;quot;$ARCHIVE_DIR&amp;quot;&lt;/span&gt;
Scripts/build.sh CONFIGURATION TARGET APPNAME
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;xcodebuild的具体用法可以参考官方的文档&lt;/p&gt;

&lt;p&gt;获取脚本传递过来的参数并算好项目的路径以及编译之后app的路径&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;xcodebuild -target &lt;span class=&quot;s2&quot;&gt;&amp;quot;${TARGET}&amp;quot;&lt;/span&gt; -configuration &lt;span class=&quot;s2&quot;&gt;&amp;quot;${CONFIGURATION}&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;编译成功之后，进行zip打包并移到ARCHIVE_DIR中&lt;br/&gt;
Post-build Actions 就是build结束后的后继操作，比如可以将编译结果邮件发送给相应的人员。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2011/06/14/jenkins-ci-used-for-mac-app-dev/index.html</link>
            <guid>http://demi-panda.com/2011/06/14/jenkins-ci-used-for-mac-app-dev/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Hadoop 动态添加节点datanode及tasktracker ]]></title>
            <pubDate>Fri, 06 May 2011 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;有的时候， datanode或者tasktracker crash，或者需要向集群中增加新的机器时又不能重启集群。下面方法也许对你有用。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
把新机器的增加到conf/slaves文件中（datanode或者tasktracker crash则可跳过） 
&lt;/li&gt;
&lt;li&gt;
在新机器上进入hadoop安装目录 
&lt;/li&gt;
&lt;pre id=&quot;bash&quot;&gt;
$ bin/hadoop-daemon.sh start datanode 
$ bin/hadoop-daemon.sh start tasktracker 
&lt;/pre&gt;
&lt;li&gt;在namenode上 &lt;/li&gt;
&lt;pre id=&quot;bash&quot;&gt;
$ bin/hadoop balancer
&lt;/pre&gt;
&lt;/ol&gt;

 ]]></description>
            <link>http://demi-panda.com/2011/05/06/hadoop-datanode/index.html</link>
            <guid>http://demi-panda.com/2011/05/06/hadoop-datanode/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[sudo apt-get 命令大全 ]]></title>
            <pubDate>Tue, 15 Mar 2011 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;apt-get是一条linux命令，适用于deb包管理式的操作系统，主要用于自动从互联网的软件仓库中搜索、安装、升级、卸载软件或操作系统。&lt;/p&gt;

&lt;h3&gt;apt命令用法&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ apt-cache search # ------(package 搜索包)
$ apt-cache show #------(package 获取包的相关信息，如说明、大小、版本等)
$ sudo apt-get install # ------(package 安装包)
$ sudo apt-get install # -----(package - - reinstall 重新安装包)
$ sudo apt-get -f install # -----(强制安装?#&quot;-f = --fix-missing&quot;当是修复安装吧...)
$ sudo apt-get remove #-----(package 删除包)
$ sudo apt-get remove --purge # ------(package 删除包，包括删除配置文件等)
$ sudo apt-get autoremove --purge # ----(package 删除包及其依赖的软件包+配置文件等（只对6.10有效，强烈推荐）)
$ sudo apt-get update #------更新源
$ sudo apt-get upgrade #------更新已安装的包
$ sudo apt-get dist-upgrade # ---------升级系统
$ sudo apt-get dselect-upgrade #------使用 dselect 升级
$ apt-cache depends #-------(package 了解使用依赖)
$ apt-cache rdepends # ------(package 了解某个具体的依赖?#当是查看该包被哪些包依赖吧...)
$ sudo apt-get build-dep # ------(package 安装相关的编译环境)
$ apt-get source #------(package 下载该包的源代码)
$ sudo apt-get clean &amp;&amp; sudo apt-get autoclean # --------清理下载文件的存档 &amp;&amp; 只清理过时的包
$ sudo apt-get check #-------检查是否有损坏的依赖
&lt;/pre&gt;


&lt;h3&gt;apt-get install&lt;/h3&gt;

&lt;p&gt;apt-get install &lt;package&gt;
下载 &lt;package&gt; 以及所有倚赖的包裹,同时进行包裹的安装或升级.如果某个包裹被设置了 hold (停止标志,就会被搁在一边(即不会被升级).更多 hold 细节请看下面.&lt;/p&gt;

&lt;h3&gt;apt-get update&lt;/h3&gt;

&lt;p&gt;升级来自 Debian 镜像的包裹列表,如果你想安装当天的任何软件,至少每天运行一次,而且每次修改了/etc/apt/sources.list 后,必须执行.&lt;/p&gt;

&lt;h3&gt;apt-get upgrade [-u]&lt;/h3&gt;

&lt;p&gt;升 级所以已经安装的包裹为最新可用版本.不会安装新的或移除老的包裹.如果一个包改变了倚赖关系而需要安装一个新的包裹,那么它将不会被升级,而是标志为 hold .apt-get update 不会升级被标志为 hold 的包裹 (这个也就是 hold 的意思).请看下文如何手动设置包裹为 hold .我建议同时使用 '-u' 选项,因为这样你就能看到哪些包裹将会被升级.&lt;/p&gt;

&lt;h3&gt;apt-get dist-upgrade [-u]&lt;/h3&gt;

&lt;p&gt;和 apt-get upgrade 类似,除了 dist-upgrade 会安装和移除包裹来满足倚赖关系.因此具有一定的危险性.&lt;/p&gt;

&lt;h3&gt;apt-get remove [--purge] &lt;package&gt;&lt;/h3&gt;

&lt;p&gt;移除 &lt;package&gt; 以及任何倚赖这个包裹的其它包裹.--purge 指明这个包裹应该被完全清除 (purged) ,更多信息请看 dpkg -P .&lt;/p&gt;

&lt;h3&gt;apt-cache search &lt;pattern&gt;&lt;/h3&gt;

&lt;p&gt;搜索满足 &lt;pattern&gt; 的包裹和描述.&lt;/p&gt;

&lt;h3&gt;apt-cache show &lt;package&gt;&lt;/h3&gt;

&lt;p&gt;显示 &lt;package&gt; 的完整的描述.&lt;/p&gt;

&lt;h3&gt;apt-cache showpkg &lt;package&gt;&lt;/h3&gt;

&lt;p&gt;显示 &lt;package&gt; 许多细节,以及和其它包裹的关系.&lt;/p&gt;

&lt;h3&gt;杂谈&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo apt-get install ntfs-3g ntfs-config #ntfs写入支持，装完后运行ntfs-config,把两个钩打上即可。楼下方法作废
$ sudo apt-get install googleearth googlizer gtalk#google相关，skyx友情提示:不推荐马甲 gtalk
$ sudo apt-get install ghex #GNOME 上的十六进制文件编辑器
$ sudo apt-get install kvm #Full virtualization on x86 hardware 推荐
$ sudo apt-get install vmware-player #Free virtual machine player from VMware
$ sudo apt-get install makeself #utility to generate self-extractable archives
$ sudo apt-get install sun-java6-jre#安装JAVA6环境
$ sudo apt-get install sun-java6-jdk #安装JAVA6环境#
$ sudo update-alternatives --config java#设定JAVA环境
$ sudo apt-get install rox-filer#一个简单的文件管理软件
$ sudo apt-get install socks4-server socks4-clients #一个socks 代理服务器/soks4代理客户端
$ sudo apt-get install mc #类似norton commander 工具，skyx 吐血推荐
$ sudo apt-get install liferea #超强的rss reader ，明显比akregator好用， 由zhuqin_83吐血推荐
$ sudo apt-get install axel-kapt gwget aria2#多线程下载工具,也可在论坛search 超强工具prozilla，由雕啸长空吐血推荐
$ sudo apt-get install privoxy tor mixmaster anon-proxy socat#突破风锁线和雁过无痕
$ sudo apt-get install kdebluetooth #超简单的ubuntu与蓝牙手机互传文件工具
$ sudo apt-get install build-essential #build-essential
$ sudo apt-get install proxychains #一个socks4 socks5代理软件 ，可以支持apt-get代理
$ sudo apt-get install language-support-zh language-pack-zh#安装中文语言支持
$ sudo apt-get install rxvt yakuake tilda kuake konsole multi-gnome-terminal pyqonsole #几个终端
$ sudo apt-get install viewglob #一个shell相关的工具
$ sudo apt-get install nautilus-open-terminal #在右键菜单中加入打开终端
$ sudo apt-get instll eva amsn wengophone skype licq #安装im语音视频聊天软件
$ sudo apt-get install beryl emerald emerald-themes#安装beryl
$ sudo apt-get install pcmanx-gtk2 qterm mozilla-plugin-pcmanx #安装bbs 客户端
$ sudo apt-get install gkrell* #很好的一个东东，装了就知道了
$ sudo apt-get install conky# 有意思的一个系统monitor
$ sudo apt-get install nmapfe #nmap前端
$ sudo apt-get install meld #一个文件、目录比较器
$ sudo apt-get install imagemagick# e大力推荐的批量修改图片的软件，现在论坛个别人在搞个人崇拜
$ sudo apt-get install kolourpaint #又一个画图软件
$ sudo apt-get install tuxpaint #好玩的画图软件
$ sudo apt-get install kompare # 又一个文件比较器
$ sudo apt-get install gnome-commander #gnome 上类似Total commander的工具
$ sudo apt-get install krusader #kde 上类似Total commander的工具
$ sudo sudo apt-get install bum #系统服务管理软件
$ sudo apt-get install rbot # ruby写的irc bot
$ sudo apt-get install sysv-rc-conf #一款基于perl的开机进程调整工具,sysv-rc-conf执行命令即可
$ sudo apt-get install rcconf # Debian Runlevel configuration tool
$ sudo apt-get install rar unrar p7zip* #安装rar 7zip
$ sudo apt-get install rpm alien #安装rpm支持
$ sudo apt-get install xpdf xpdf-chinese-simplified #安装pdf查看软件
$ sudo apt-get install xchm xpdf-chinese* #安装chm查看软件
$ sudo apt-get install gqview #一个图片浏览器
$ sudo apt-get install gnomebaker k3b#安装刻录软件
$ sudo apt-get install brasero #gnome上的刻录软件
$ sudo apt-get install ksnapshot #一个抓屏程序
$ sudo apt-get install kinstaller #application installer
$ sudo apt-get install vncserver #vncserver,vncview默认已经安装了
$ sudo apt-get install tightvncserver tightvnc-java #另一个vnc
$ sudo apt-get install apt-build #frontend to apt to build, optimize and install packages
$ sudo apt-get install vim-full #vim无法高亮显示,然后编辑 /etc/vim/vimrc,取消syntax on前面的&quot;注释符号
$ sudo apt-get install firestarter #图形接口的防火墙设定程序
$ sudo apt-get install smbfs #smbfs挂载支持
$ sudo apt-get install flashplugin-nonfree #安装浏览器Flash插件
$ sudo apt-get install gftp kftpgrabber filezilla kasablanca#安装ftp客户端
$ sudo apt-get install sun-java5-jdk #安装Java环境
$ sudo apt-get install sun-java5-plugin #安装Java环境
$ sudo apt-get install build-essential # 安装编译环境
$ sudo apt-get install yum rpm #redhat相关
$ sudo apt-get install mysql-client mysql-server #安装mysql服务
$ sudo apt-get install kde-i18n-zhcn kde-i18n-zhtw#k程序中文支持，很讨厌kde ,但不太讨厌qt程序可以这样装
$ sudo apt-get install qt4-qtconfig#qt4 gui配制工具, 如字体等，很讨厌kde ,但不太讨厌qt程序可以这样装
$ sudo apt-get install kcontrol #k程序gui配制工具，很讨厌kde ,但不太讨厌qt程序可以这样装
$ sudo apt-get apache2 mysql-server php4 php4-gd php4-mysql #安装LAMP
$ sudo apt-get install sysstat #安装sar, iostat and mpstat
$ sudo apt-get install nmap #网络端口扫描工具
$ sudo apt-get install nfs-common #nfs
$ sudo apt-get install samba nfs-kernel-server #samba
$ sudo apt-get install xvidcap gnome-splashscreen-manager #安装屏幕视频录制 / splash 管理
$ sudo apt-get install istanbul #Desktop session recorder
$ sudo apt-get install sysinfo xsysinfo#系统信息查看
&lt;/pre&gt;


&lt;h3&gt;网络&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
sudo apt-get install d4x //这是linux上的flashget，在apt中可以找到
$ sudo apt-get install amule //这是linux上的emule，在apt中可以找到
$ sudo apt-get install eva //这是linux下的qq，只不过狡猾的腾讯修改了协议，用了eva以后再用就必须输入验证码才能进入
$ sudo apt-get install tor privoxy //匿名动态代理，与之类似的还有JAP和freedom，据说freedom速度更快一些
$ sudo apt-get install liferea //一个GTK的离线RSS阅读器
$ sudo apt-get install curl //一个利用URL语法在命令行下工作的文件传输工具
&lt;/pre&gt;


&lt;h3&gt;系统&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ sudo apt-get install rar //安装rar支持，装了以后，压缩包管理器就可以支持rar格式了
$ sudo apt-get install bum //一个不错的安装系统启动程序管理器
$ sudo apt-get install xpdf-chinese-simplified  //xpdf的中文字体支持，
#不过经过试用，貌似乱码依旧，这个问题可以参考ubuntu 下Evince看pdf文档的乱码解决方案 
$ sudo apt-get install gnome-commander //类似norton-commander的文件管理器，功能还不错，比较适合用惯了norton-commander的用户
$ sudo apt-get install nautilus-open-terminal //在nautilus的右键菜单里打开终端，要重登录才起效
$ sudo apt-get install nautilus-gksu //在nautilus中以管理员身份打开，要重登录才起效
$ sudo apt-get install ntp //系统时间与internet时间保持同步
$ sudo apt-get install meld //基于gonme的目录差异比较工具，可以比较文件夹和文件的变化
$ sudo apt-get install enca //一个非常不错的编码转换工具
$ sudo apt-get install keepassx //一个密码管理软件，具有windows版本和linux版本
$ sudo apt-get gparted //图形化分区工具
$ sudo apt-get install gcolor2 //一个不错的基于gtk的图形化吸取颜色的工具。
$ sudo apt-get install unison-gtk //一个基于gtk的文件和目录同步工具，具有比较和合并功能。
$ sudo apt-get install conduit //一个很牛的资源同步工具，可以同步网络相册，文件夹，邮件、照片等等资源，非常牛X
$ sudo apt-get install manpages-zh //中文man手册，linux操作系统的必备资料
&lt;/pre&gt;


&lt;h3&gt;多媒体&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
sudo apt-get install ksnapshot //抓图工具
$ sudo apt-get install ogle ogle-gui  //dvd 播放器
$ sudo apt-get install mkisofs //貌似是和刻录光盘有关
$ sudo apt-get install wink //一个屏幕录像工具，可以用来制作视频教程
$ sudo apt-get install gsopcast //一个网络电视
$ sudo apt-get install gonmebaker //一个gonme下的刻录光盘软件
$ sudo apt-get install isomaster //一个管理和生成ISO镜像的小工局，可以提取、修改、删除添加文件，功能挺全的。
$ sudo apt-get krita //一个小巧的图像编辑软件，比GIMP小巧，但功能对付一般的照片修改已经足够了。
$ sudo apt-get install xaralx imagemagick //一个巨好的免费矢量图绘制工具，功能不是一般的强，windows下收费，linux下免费。
$ sudo apt-get install gnome-subtitles //linux下的divx电影的字幕调校工具，可视化的哦
&lt;/pre&gt;



 ]]></description>
            <link>http://demi-panda.com/2011/03/15/linux-sudo-apt-get/index.html</link>
            <guid>http://demi-panda.com/2011/03/15/linux-sudo-apt-get/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Check Memory With Cron Job ]]></title>
            <pubDate>Thu, 13 Jan 2011 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;更新:crontab 默认的环境变量比较少,所以你需要设置自己的运行程序所需要的环境变量&lt;/p&gt;

&lt;p&gt;手头维护着一个蛮旧的系统，是SUN之前开发，时间一长就偶尔会内存溢出，占内存达百分之八十多，苦于又没有源码，所以今天写了个小脚本用来检测，发现情况不对狠狠的杀掉重启。&lt;br/&gt;
使用crontab进行配置，每隔2分钟进行一次检查&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;crontab -e  
*/2 * * * * sh /home/admin/checkmem.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;checkmem的脚本为&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:java的bin:xxxx
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/xxx/java
&lt;span class=&quot;nv&quot;&gt;javaMem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;top -b -n 1|grep java|awk &lt;span class=&quot;s1&quot;&gt;&amp;#39;{print $10}&amp;#39;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;DATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;date +&lt;span class=&quot;s2&quot;&gt;&amp;quot;%Y-%m-%d %H:%M:%S&amp;quot;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$DATE $javaMem&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /home/admin/checkmem.log

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$javaMem&amp;gt;55.0&amp;quot;&lt;/span&gt;|bc&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; -eq 1 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;restart tomcat&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /home/admin/checkmem.log
  killall -9 java
  nohup sh /home/admin/apache-tomcat-6.0.29/bin/startup.sh &amp;amp; &amp;gt;/dev/null
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;脚本每次检查都会将结果记录到日志文件中，方便查看。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2011/01/13/check-memory-with-cron-job/index.html</link>
            <guid>http://demi-panda.com/2011/01/13/check-memory-with-cron-job/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Solr4.0配置IKAnalyzer ]]></title>
            <pubDate>Thu, 25 Nov 2010 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;IK Analyzer是一个开源的，基于java语言开发的轻量级的中文分词工具包。从2006年12月推出1.0版开始， IKAnalyzer已经推出了4个大版本。最初，它是以开源项目Luence为应用主体的，结合词典分词和文法分析算法的中文分词组件。从3.0版本开始，IK发展为面向Java的公用分词组件，独立于Lucene项目，同时提供了对Lucene的默认优化实现。在2012版本中，IK实现了简单的分词歧义排除算法，标志着IK分词器从单纯的词典分词向模拟语义分词衍化。&lt;/p&gt;

&lt;h3&gt;IK Analyzer 2012特性&lt;/h3&gt;

&lt;p&gt;1.采用了特有的“正向迭代最细粒度切分算法“，支持细粒度和智能分词两种切分模式；&lt;/p&gt;

&lt;p&gt;2.在系统环境：Core2 i7 3.4G双核，4G内存，window 7 64位， Sun JDK 1.6_29 64位 普通pc环境测试，IK2012具有160万字/秒（3000KB/S）的高速处理能力。&lt;/p&gt;

&lt;p&gt;3.2012版本的智能分词模式支持简单的分词排歧义处理和数量词合并输出。&lt;/p&gt;

&lt;p&gt;4.采用了多子处理器分析模式，支持：英文字母、数字、中文词汇等分词处理，兼容韩文、日文字符&lt;/p&gt;

&lt;p&gt;5.优化的词典存储，更小的内存占用。支持用户词典扩展定义。特别的，在2012版本，词典支持中文，英文，数字混合词语。&lt;/p&gt;

&lt;h3&gt;下载solr &amp;amp; IK&lt;/h3&gt;

&lt;p&gt;1、下载solr4.0 &lt;a href=&quot;http://www.apache.org/dyn/closer.cgi/lucene/java/4.0.0&quot;&gt;http://www.apache.org/dyn/closer.cgi/lucene/java/4.0.0&lt;/a&gt;  (注：这里有及时solr的最新版本)&lt;/p&gt;

&lt;p&gt;2、下载IKAnalyzer2012_u6.zip &lt;a href=&quot;http://code.google.com/p/ik-analyzer/downloads/list&quot;&gt;http://code.google.com/p/ik-analyzer/downloads/list&lt;/a&gt;(注：这里有IKAnalyzer及时的最新版本，也可附件直接下载)&lt;/p&gt;

&lt;h3&gt;schema.xml配置&lt;/h3&gt;

&lt;pre id=&quot;xml&quot;&gt;
&amp;lt;fieldType name=&quot;text&quot; class=&quot;solr.TextField&quot; positionIncrementGap=&quot;100&quot;&amp;gt;  
    &amp;lt;analyzer type=&quot;index&quot;&amp;gt;  
        &amp;lt;tokenizer class=&quot;org.wltea.analyzer.solr.IKTokenizerFactory&quot; 
        isMaxWordLength=&quot;false&quot;/&amp;gt;  
        &amp;lt;filter class=&quot;solr.SynonymFilterFactory&quot; 
            synonyms=&quot;synonyms.txt&quot; 
            ignoreCase=&quot;true&quot; 
            expand=&quot;true&quot; 
            tokenizerFactory=&quot;solr.ChineseTokenizerFactory&quot;/&amp;gt; 
        &amp;lt;filter class=&quot;solr.StopFilterFactory&quot; ignoreCase=&quot;true&quot; words=&quot;stopwords.txt&quot; enablePositionIncrements=&quot;true&quot; /&amp;gt;  
        &amp;lt;filter class=&quot;solr.WordDelimiterFilterFactory&quot; 
            generateWordParts=&quot;1&quot; 
            generateNumberParts=&quot;1&quot;   
            catenateWords=&quot;1&quot; 
            catenateNumbers=&quot;1&quot; 
            catenateAll=&quot;0&quot; splitOnCaseChange=&quot;0&quot;/&amp;gt;  
        &amp;lt;filter class=&quot;solr.LowerCaseFilterFactory&quot;/&amp;gt;  
        &amp;lt;filter class=&quot;solr.RemoveDuplicatesTokenFilterFactory&quot;/&amp;gt;
    &amp;lt;/analyzer&amp;gt;  
    &amp;lt;analyzer type=&quot;query&quot;&amp;gt;  
        &amp;lt;tokenizer class=&quot;org.wltea.analyzer.solr.IKTokenizerFactory&quot;
        isMaxWordLength=&quot;true&quot;/&amp;gt;  
        &amp;lt;filter class=&quot;solr.SynonymFilterFactory&quot;
            synonyms=&quot;synonyms.txt&quot; 
            ignoreCase=&quot;true&quot;   
            expand=&quot;true&quot; 
            tokenizerFactory=&quot;solr.ChineseTokenizerFactory&quot;/&amp;gt;  
        &amp;lt;filter class=&quot;solr.StopFilterFactory&quot; 
            ignoreCase=&quot;true&quot; 
            words=&quot;stopwords.txt&quot; 
            enablePositionIncrements=&quot;true&quot;/&amp;gt;  
        &amp;lt;filter class=&quot;solr.WordDelimiterFilterFactory&quot; 
            generateWordParts=&quot;1&quot; 
            generateNumberParts=&quot;1&quot;  
            catenateWords=&quot;0&quot; 
            catenateNumbers=&quot;0&quot; 
            catenateAll=&quot;0&quot; 
            splitOnCaseChange=&quot;1&quot;/&amp;gt;  
        &amp;lt;filter class=&quot;solr.LowerCaseFilterFactory&quot;/&amp;gt;  
        &amp;lt;filter class=&quot;solr.RemoveDuplicatesTokenFilterFactory&quot;/&amp;gt;  
    &amp;lt;/analyzer&amp;gt;  
&amp;lt;/fieldType&amp;gt;
&lt;/pre&gt;


&lt;h3&gt;jar包加入solr的WEB-INF/lib下&lt;/h3&gt;

&lt;p&gt;将它打包放入solr.war中同时还有IK的jar包。如果你不想打包，请去附件下载已经打好的包。或者直接放IK的jar包与所打的包放入apache-tomcat-xxx\webapps\solr\WEB-INF\lib下&lt;/p&gt;

&lt;h3&gt;IK配置文件&lt;/h3&gt;

&lt;p&gt;IKAnalyzer的jar包中默认是带有IKAnalyzer.cfg.xml的配置文件的，如果想覆盖自带的配置文件，则需要在solr的WEB-INF目录中创建classes目录，将自定义的IKAnalyzer.cfg.xml拷贝到下面即可。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2010/11/25/solr-ikanalyzer/index.html</link>
            <guid>http://demi-panda.com/2010/11/25/solr-ikanalyzer/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[两种方法清空memcache缓存 ]]></title>
            <pubDate>Sun, 21 Nov 2010 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;默认memcache会监听11221端口，如果想清空服务器上memecache的缓存，大家一般使用的是:&lt;/p&gt;

&lt;h3&gt;方案一&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ telnet localhost 11211
$ flush_all
&lt;/pre&gt;


&lt;h3&gt;方案二&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ echo &quot;flush_all&quot; | nc localhost 11211
&lt;/pre&gt;


&lt;p&gt;使用flush_all 后并不是删除memcache上的key，而是置为过期&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2010/11/21/memcached/index.html</link>
            <guid>http://demi-panda.com/2010/11/21/memcached/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Linux curl 详解 ]]></title>
            <pubDate>Wed, 20 Oct 2010 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;Linux下载工具Curl也是Linux下不错的命令行下载工具，小巧、高速，唯一的缺点是不支持多线程下载。以下是他的安装和功能。&lt;/p&gt;

&lt;h3&gt;安装&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ tar zxvf curl-7.14.0.tar.gz  
$ cd curl-7.14.0/  
$ ./configure  
$ make  
$ make test  
$ make install
&lt;/pre&gt;


&lt;h3&gt;参数详情&lt;/h3&gt;

&lt;table style=&quot;width:580px&quot;&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;参数:&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;-M/--manual&lt;/hd&gt;
      &lt;td&gt;
      显示全手动
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-n/--netrc&lt;/hd&gt;
      &lt;td&gt; 
       从netrc文件中读取用户名和密码
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      --netrc-optional
      &lt;/hd&gt;
      &lt;td&gt; 
      使用 .netrc 或者 URL来覆盖-n
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
       --ntlm
      &lt;/hd&gt;
      &lt;td&gt; 
      使用 HTTP NTLM 身份验证
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
       -N/--no-buffer
      &lt;/hd&gt;
      &lt;td&gt; 
      禁用缓冲输出
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -o/--output
      &lt;/hd&gt;
      &lt;td&gt; 
       把输出写到该文件中
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
        -O/--remote-name
      &lt;/hd&gt;
      &lt;td&gt; 
       把输出写到该文件中，保留远程文件的文件名
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
       -p/--proxytunnel
      &lt;/hd&gt;
      &lt;td&gt; 
      使用HTTP代理
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      --proxy-anyauth
      &lt;/hd&gt;
      &lt;td&gt; 
       选择任一代理身份验证方法
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      --proxy-basic
      &lt;/hd&gt;
      &lt;td&gt; 
      在代理上使用基本身份验证
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      --proxy-digest
      &lt;/hd&gt;
      &lt;td&gt; 
       在代理上使用数字身份验证
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
       --proxy-ntlm
      &lt;/hd&gt;
      &lt;td&gt; 
      在代理上使用ntlm身份验证
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -P/--ftp-port &lt;address&gt;
      &lt;/hd&gt;
      &lt;td&gt; 
      使用端口地址，而不是使用PASV
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -Q/--quote &lt;cmd&gt;
      &lt;/hd&gt;
      &lt;td&gt; 
      文件传输前，发送命令到服务器
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
       -r/--range &lt;range&gt;
      &lt;/hd&gt;
      &lt;td&gt; 
      检索来自HTTP/1.1或FTP服务器字节范围
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      --range-file  
      &lt;/hd&gt;
      &lt;td&gt; 
      读取（SSL）的随机文件
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
       -R/--remote-time
      &lt;/hd&gt;
      &lt;td&gt; 
      在本地生成文件时，保留远程文件时间
      &lt;/td&gt;
    &lt;/tr&gt;   
    &lt;tr&gt;
      &lt;td&gt;
      --retry &lt;num&gt;
      &lt;/hd&gt;
      &lt;td&gt; 
      传输出现问题时，重试的次数
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      --retry-delay &lt;seconds&gt;
      &lt;/hd&gt;
      &lt;td&gt; 
      传输出现问题时，设置重试间隔时间
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      --retry-max-time &lt;seconds&gt;
      &lt;/hd&gt;
      &lt;td&gt; 
      传输出现问题时，设置最大重试时间
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -s/--silent
      &lt;/hd&gt;
      &lt;td&gt; 
      静音模式。不输出任何东西
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -S/--show-error
      &lt;/hd&gt;
      &lt;td&gt; 
      显示错误
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      --socks4 &lt;host[:port]&gt;
      &lt;/hd&gt;
      &lt;td&gt; 
      用socks4代理给定主机和端口
      &lt;/td&gt;
    &lt;/tr&gt;   
    &lt;tr&gt;
      &lt;td&gt;
      --socks5 &lt;host[:port]&gt;
      &lt;/hd&gt;
      &lt;td&gt; 
      用socks5代理给定主机和端口
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
       -t/--telnet-option &lt;OPT=val&gt;
      &lt;/hd&gt;
      &lt;td&gt; 
      Telnet选项设置
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      --trace &lt;file&gt;
      &lt;/hd&gt;
      &lt;td&gt; 
      对指定文件进行debug
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
       --trace-ascii &lt;file&gt; Like
      &lt;/hd&gt;
      &lt;td&gt; 
      跟踪但没有hex输出
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      --retry-delay &lt;seconds&gt;
      &lt;/hd&gt;
      &lt;td&gt; 
      传输出现问题时，设置重试间隔时间
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      --trace-time
      &lt;/hd&gt;
      &lt;td&gt; 
       跟踪/详细输出时，添加时间戳
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -T/--upload-file &lt;file&gt;
      &lt;/hd&gt;
      &lt;td&gt; 
      上传文件
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
       --url &lt;URL&gt;
      &lt;/hd&gt;
      &lt;td&gt; 
      Spet URL to work with
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
       -u/--user &lt;user[:password]&gt;
      &lt;/hd&gt;
      &lt;td&gt; 
       设置服务器的用户和密码
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
       -U/--proxy-user &lt;user[:password]&gt;
      &lt;/hd&gt;
      &lt;td&gt; 
      设置代理用户名和密码
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
        -V/--version
      &lt;/hd&gt;
      &lt;td&gt; 
      显示版本信息
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
        -w/--write-out [format]
      &lt;/hd&gt;
      &lt;td&gt; 
      什么输出完成后
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
       -x/--proxy &lt;host[:port]&gt;
      &lt;/hd&gt;
      &lt;td&gt; 
      在给定的端口上使用HTTP代理
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
       -X/--request &lt;command&gt;
      &lt;/hd&gt;
      &lt;td&gt; 
      指定什么命令
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
        -y/--speed-time
      &lt;/hd&gt;
      &lt;td&gt; 
       放弃限速所要的时间。默认为30
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
      -Y/--speed-limit
      &lt;/hd&gt;
      &lt;td&gt; 
      停止传输速度的限制，速度时间秒
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;
        -z/--time-cond
      &lt;/hd&gt;
      &lt;td&gt; 
      传送时间设置
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;


&lt;h3&gt;常用curl实例&lt;/h3&gt;

&lt;p&gt;抓取页面内容到一个文件中&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ curl -o home.html  http://www.sina.com.cn 
&lt;/pre&gt;


&lt;p&gt;用-O（大写的），后面的url要具体到某个文件，不然抓不下来。我们还可以用正则来抓取东西&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ curl -O http://www.it415.com/czxt/linux/25002_3.html 
&lt;/pre&gt;


&lt;p&gt;模拟表单信息，模拟登录，保存cookie信息&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ curl -c ./cookie_c.txt -F log=aaaa -F pwd=****** http://blog.51yip.com/wp-login.php 
&lt;/pre&gt;


&lt;p&gt;模拟表单信息，模拟登录，保存头信息&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ curl -D ./cookie_D.txt -F log=aaaa -F pwd=****** http://blog.51yip.com/wp-login.php 
#-c(小写)产生的cookie和-D里面的cookie是不一样的
&lt;/pre&gt;


&lt;p&gt;使用cookie文件&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ curl -b ./cookie_c.txt  http://blog.51yip.com/wp-admin 
&lt;/pre&gt;


&lt;p&gt;断点续传，-C(大写的)&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ curl -C -O http://www.sina.com.cn 
&lt;/pre&gt;


&lt;p&gt;传送数据,最好用登录页面测试，因为你传值过去后，curl回抓数据，你可以看到你传值有没有成功&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ curl -d log=aaaa  http://blog.51yip.com/wp-login.php 
&lt;/pre&gt;


&lt;p&gt;显示抓取错误&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ curl -f http://www.sina.com.cn/asdf 
#curl: (22) The requested URL returned error: 404
&lt;/pre&gt;


&lt;p&gt;伪造来源地址，有的网站会判断，请求来源地址&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$  curl -e http://localhost http://www.sina.com.cn 
&lt;/pre&gt;


&lt;p&gt;当我们经常用curl去搞人家东西的时候，人家会把你的IP给屏蔽掉的,这个时候,我们可以用代理&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ curl -x 10.10.90.83:80 -o home.html http://www.sina.com.cn 
&lt;/pre&gt;


&lt;p&gt;比较大的东西，我们可以分段下载&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$  curl -r 0-100 -o img.part1 http://i2.f.itc.cn/thumb/180/bj/6018/b_60178154.jpg 
&lt;/pre&gt;


&lt;p&gt;不显示下载进度信息&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$  curl -s -o aaa.jpg  
&lt;/pre&gt;


&lt;p&gt;显示下载进度条&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$  curl -# -O  http://www.it415.com/czxt/linux/25002_3.html  
&lt;/pre&gt;


&lt;p&gt;通过ftp下载文件&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$  curl -u 用户名:密码 -O http://blog.51yip.com/demo/curtain/bbstudy_files/style.css 
&lt;/pre&gt;


&lt;p&gt;通过ftp上传&lt;/p&gt;

&lt;pre id=&quot;bash&quot;&gt;
$  curl -T xukai.php ftp://xukai:test@192.168.242.144:21/www/focus/enhouse/
&lt;/pre&gt;



 ]]></description>
            <link>http://demi-panda.com/2010/10/20/linux-curl/index.html</link>
            <guid>http://demi-panda.com/2010/10/20/linux-curl/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Linux培训笔记 ]]></title>
            <pubDate>Sat, 31 Jul 2010 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;h3&gt;一.Shell相关&lt;/h3&gt;

&lt;p&gt;shell命令在进行运行前都先进行一些必要的替换&lt;/p&gt;

&lt;p&gt;echo $PATH 变量替换&lt;br/&gt;
echo * 通配符,比如这里的*,代表当前目录中的所有文件&lt;br/&gt;
反引号&lt;code&gt;替换反引号中的命令为其输出 echo&lt;/code&gt;ls`&lt;br/&gt;
alias替换&lt;br/&gt;
shell外部命令调用，fork子进程，和父进程一模一样，在子进程中exec，并将子进程替换，并只继承原来的环境变量，shell进行wait等待子进程结束。&lt;br/&gt;
没有进行export的变量，shell脚本是看不到的&lt;/p&gt;

&lt;p&gt;unix 中，任何命令尽量做成外部命令。&lt;/p&gt;

&lt;p&gt;kill 外部命令内部化，shell一看是kill，就不去fork子进程，就直接帮你做了。&lt;/p&gt;

&lt;p&gt;ELF(Executable and Linkable Format)即可执行连接文件格式，脚本文件u+s是没有用的。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;  
&lt;span class=&quot;c&quot;&gt;#！脚本文件 #！是给内核看的，但是解释器不需要看#！，所以在脚本中#为注解  &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;二.内存管理相关&lt;/h3&gt;

&lt;p&gt;用过windows的同学很容易会把虚拟内存理解错了，windows中所谓的虚拟内存其实应该叫做交换内存。&lt;/p&gt;

&lt;p&gt;什么情况下我们才应该认为计算机系统内存不够了呢？&lt;/p&gt;

&lt;p&gt;内存频繁换入换出说明内存不够&lt;/p&gt;

&lt;p&gt;内核会将空闲的部分内存用来做cache和buffer&lt;br/&gt;
cache多 buffer少&lt;/p&gt;

&lt;p&gt;overcommit(过提交) 容易造成OOM killer,可以关闭过提交&lt;/p&gt;

&lt;p&gt;多进程原理，中断处理，保存现场，进到内核，恢复现场的时候内核里可能有很多现场，内核就选一个恢复。信号的实现就是基于中断。&lt;/p&gt;

&lt;h3&gt;三.文件系统相关&lt;/h3&gt;

&lt;p&gt;一些标识&lt;/p&gt;

&lt;p&gt;-普通文件&lt;br/&gt;
d 目录&lt;br/&gt;
l 链接文件&lt;br/&gt;
c 字符文件&lt;br/&gt;
b 块文件 &lt;br/&gt;
p 管道文件 &lt;br/&gt;
s socket文件&lt;/p&gt;

&lt;p&gt;u+s 执行命令的时候，赋予命令宿主的权限&lt;/p&gt;

&lt;p&gt;bitmap，用来记录文件系统的容量使用情况&lt;br/&gt;
块位图，索引节点位图。&lt;/p&gt;

&lt;p&gt;硬连接 两个文件项指向同一个inode&lt;br/&gt;
符号链接 一个符号链接就是一个文本文件，存了一个字符串 把符号连接的内容替换其，形成一个新的路径。符号连接中写绝对路径。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2010/07/31/advanced-linux-notes/index.html</link>
            <guid>http://demi-panda.com/2010/07/31/advanced-linux-notes/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[ConcurrentHashMap原理分析 ]]></title>
            <pubDate>Wed, 28 Jul 2010 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;h2&gt;一.Java并发基础&lt;/h2&gt;

&lt;p&gt;当一个对象或变量可以被多个线程共享的时候，就有可能使得程序的逻辑出现问题。
在一个对象中有一个变量i=0，有两个线程A，B都想对i加1，这个时候便有问题显现出来，关键就是对i加1的这个过程不是原子操作。要想对i进行递增，第一步就是获取i的值，当A获取i的值为0，在A将新的值写入A之前，B也获取了A的值0，然后A写入，i变成1，然后B也写入i，i这个时候依然是1.
当然java的内存模型没有上面这么简单，在Java Memory Model中，Memory分为两类，main memory和working memory，main memory为所有线程共享，working memory中存放的是线程所需要的变量的拷贝（线程要对main memory中的内容进行操作的话，首先需要拷贝到自己的working memory，一般为了速度，working memory一般是在cpu的cache中的）。volatile的变量在被操作的时候不会产生working memory的拷贝，而是直接操作main memory，当然volatile虽然解决了变量的可见性问题，但没有解决变量操作的原子性的问题，这个还需要synchronized或者CAS相关操作配合进行。&lt;/p&gt;

&lt;p&gt;多线程中几个重要的概念:&lt;/p&gt;

&lt;h4&gt;可见性&lt;/h4&gt;

&lt;p&gt;也就说假设一个对象中有一个变量i，那么i是保存在main memory中的，当某一个线程要操作i的时候，首先需要从main memory中将i 加载到这个线程的working memory中，这个时候working memory中就有了一个i的拷贝，这个时候此线程对i的修改都在其working memory中，直到其将i从working memory写回到main memory中，新的i的值才能被其他线程所读取。从某个意义上说，可见性保证了各个线程的working memory的数据的一致性。
可见性遵循下面一些规则：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;当一个线程运行结束的时候，所有写的变量都会被flush回main memory中。&lt;/li&gt;
&lt;li&gt;当一个线程第一次读取某个变量的时候，会从main memory中读取最新的。&lt;/li&gt;
&lt;li&gt;volatile的变量会被立刻写到main memory中的，在jsr133中，对volatile的语义进行增强，后面会提到&lt;/li&gt;
&lt;li&gt;当一个线程释放锁后，所有的变量的变化都会flush到main memory中，然后一个使用了这个相同的同步锁的进程，将会重新加载所有的使用到的变量，这样就保证了可见性。&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;原子性&lt;/h4&gt;

&lt;p&gt;还拿上面的例子来说，原子性就是当某一个线程修改i的值的时候，从取出i到将新的i的值写给i之间不能有其他线程对i进行任何操作。也就是说保证某个线程对i的操作是原子性的，这样就可以避免数据脏读。
通过锁机制或者CAS（Compare And Set 需要硬件CPU的支持）操作可以保证操作的原子性。&lt;/p&gt;

&lt;h4&gt;有序性&lt;/h4&gt;

&lt;p&gt;假设在main memory中存在两个变量i和j，初始值都为0，在某个线程A的代码中依次对i和j进行自增操作（i，j的操作不相互依赖），&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;由于，所以i,j修改操作的顺序可能会被重新排序。那么修改后的ij写到main memory中的时候，顺序可能就不是按照i，j的顺序了，这就是所谓的reordering，在单线程的情况下，当线程A运行结束的后i，j的值都加1了，在线程自己看来就好像是线程按照代码的顺序进行了运行（这些操作都是基于as-if-serial语义的），即使在实际运行过程中，i，j的自增可能被重新排序了，当然计算机也不能帮你乱排序，存在上下逻辑关联的运行顺序肯定还是不会变的。但是在多线程环境下，问题就不一样了，比如另一个线程B的代码如下&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;按照我们的思维方式，当j为1的时候那么i肯定也是1，因为代码中i在j之前就自增了，但实际的情况有可能当j为1的时候i还是为0。这就是reordering产生的不好的后果，所以我们在某些时候为了避免这样的问题需要一些必要的策略，以保证多个线程一起工作的时候也存在一定的次序。JMM提供了happens-before 的排序策略。这样我们可以得到多线程环境下的as-if-serial语义。
这里不对happens-before进行详细解释了,详细的请看这里http://www.ibm.com/developerworks/cn/java/j-jtp03304/，这里主要讲一下volatile在新的java内存模型下的变化，在jsr133之前，下面的代码可能会出现问题&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;configOptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;configText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initialized&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// In Thread A&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;configOptions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;configText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;readConfigFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;processConfigOptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;configText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;configOptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;initialized&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// In Thread B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initialized&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// use configOptions&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;jsr133之前，虽然对 volatile 变量的读和写不能与对其他 volatile 变量的读和写一起重新排序，但是它们仍然可以与对 nonvolatile 变量的读写一起重新排序，所以上面的Thread A的操作，就可能initialized变成true的时候，而configOptions还没有被初始化，所以initialized先于configOptions被线程B看到，就产生问题了。&lt;/p&gt;

&lt;p&gt;JSR 133 Expert Group 决定让 volatile 读写不能与其他内存操作一起重新排序，新的内存模型下，如果当线程 A 写入 volatile 变量 V 而线程 B 读取 V 时，那么在写入 V 时，A 可见的所有变量值现在都可以保证对 B 是可见的。&lt;/p&gt;

&lt;p&gt;结果就是作用更大的 volatile 语义，代价是访问 volatile 字段时会对性能产生更大的影响。这一点在ConcurrentHashMap中的统计某个segment元素个数的count变量中使用到了。&lt;/p&gt;

&lt;h2&gt;二.线程安全的HashMap&lt;/h2&gt;

&lt;p&gt;什么时候我们需要使用线程安全的hashmap呢，比如一个hashmap在运行的时候只有读操作，那么很明显不会有问题，但是当涉及到同时有改变也有读的时候，就要考虑线程安全问题了，在不考虑性能问题的时候，我们的解决方案有Hashtable或者Collections.synchronizedMap(hashMap)，这两种方式基本都是对整个hash表结构做锁定操作的，这样在锁表的期间，别的线程就需要等待了，无疑性能不高。&lt;/p&gt;

&lt;h2&gt;三.ConcurrentHashMap实现原理&lt;/h2&gt;

&lt;p&gt;数据结构
ConcurrentHashMap的目标是实现支持高并发、高吞吐量的线程安全的HashMap。当然不能直接对整个hashtable加锁，所以在ConcurrentHashMap中，数据的组织结构和HashMap有所区别。&lt;/p&gt;

&lt;p&gt;一个ConcurrentHashMap由多个segment组成，每一个segment都包含了一个HashEntry数组的hashtable，
每一个segment包含了对自己的hashtable的操作，比如get，put，replace等操作，这些操作发生的时候，对自己的hashtable进行锁定。由于每一个segment写操作只锁定自己的hashtable，所以可能存在多个线程同时写的情况，性能无疑好于只有一个hashtable锁定的情况。&lt;/p&gt;

&lt;p&gt;源码分析
在ConcurrentHashMap的remove，put操作还是比较简单的，都是将remove或者put操作交给key所对应的segment去做的，所以当几个操作不在同一个segment的时候就可以并发的进行。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;V&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hashCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;segmentFor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;而segment中的remove操作除了加锁之外和HashMap中的remove操作基本无异。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;        &lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;         * Remove; match on key only if value null, else match both.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;         */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;V&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;HashEntry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tab&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tab&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;HashEntry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tab&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;HashEntry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)))&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

                &lt;span class=&quot;n&quot;&gt;V&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oldValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;V&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;oldValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                        &lt;span class=&quot;c1&quot;&gt;// All entries following removed node can stay&lt;/span&gt;
                        &lt;span class=&quot;c1&quot;&gt;// in list, but all preceding ones need to be&lt;/span&gt;
                        &lt;span class=&quot;c1&quot;&gt;// cloned.&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;HashEntry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newFirst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HashEntry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;newFirst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashEntry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                                                          &lt;span class=&quot;n&quot;&gt;newFirst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;tab&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newFirst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// write-volatile&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oldValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;unlock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;上面的代码中关于volatile类型的变量count值得一提，这里充分利用了Java 5中对volatile语义的增强，count = c的操作必须在modCount，table等操作的后面，这样才能保证这些变量操作的可见性。
Segment类继承于ReentrantLock，主要是为了使用ReentrantLock的锁，ReentrantLock的实现比
synchronized在多个线程争用下的总体开销小。
put操作和remove操作类似。&lt;/p&gt;

&lt;p&gt;接下来我们来看下get操作。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;V&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hashCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;segmentFor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;也是使用了对应的segment的get&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;       &lt;span class=&quot;n&quot;&gt;V&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// read-volatile&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;HashEntry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getFirst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;V&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;readValueUnderLock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// recheck&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;上面的代码中，一开始就对volatile变量count进行了读取比较，这个还是java5对volatile语义增强的作用，这样就可以获取变量的可见性。所以count != 0之后，我们可以认为对应的hashtable是最新的，当然由于读取的时候没有加锁，在get的过程中，可能会有更新。当发现根据key去找元素的时候，但发现找得的key对应的value为null，这个时候可能会有其他线程正在对这个元素进行写操作，所以需要在使用锁的情况下在读取一下value，以确保最终的值。&lt;/p&gt;

&lt;p&gt;其他相关涉及读取的操作也都类似。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2010/07/28/concurrenthashmap/index.html</link>
            <guid>http://demi-panda.com/2010/07/28/concurrenthashmap/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Tomcat升级 ]]></title>
            <pubDate>Tue, 27 Jul 2010 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;之前tomcat使用的版本是5.5.26 ，由于存在DDOS攻击的漏洞，所以需要进行升级，
本来打算升级到5.5.30的，无奈发现部署了新版本的tomcat，F5就直接认为其不可用，
经过在所升级的机器上使用links之类的工具直接访问localhost，发现web应用是正常的。
这个时候把目光转移到F5上，应该和F5的健康检查有一定的关系。&lt;/p&gt;

&lt;p&gt;第二天，找到相应的网络工程师。一台开起tomcat5.5.30 另一台不变，果真发现5.5.30的机器被F5认为不可用。
通过求同寻异的方法，最后定位到一个通过openssl s_client -host host -port port（应用限制使用https方式访问）然后GET某个标志应用状态的页面来检查的策略上。&lt;/p&gt;

&lt;p&gt;通过linux下测试果然发现5.5.30上GET的结果为：&lt;/p&gt;

&lt;p&gt;GET /xxx/xxx/status
HTTP/1.1 400 Bad Request
Server: Apache-Coyote/1.1
Transfer-Encoding: chunked
Date: Mon, 26 Jul 2010 19:39:47 GMT
Connection: close&lt;/p&gt;

&lt;p&gt;找到原因了，怎么办呢？为了快速解决问题，所以尝试了下6版本的安全版本6.0.28 发现GET /xxx/xxx/status的结果是OK的，于是就直接升级到这个版本。
今天再回过头来看之前5.5.30的问题的原因。&lt;/p&gt;

&lt;p&gt;发现当指定为 HTTP/1.0的协议是可以的&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;GET /xxx/xxx/status HTTP/1.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;两次回车&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Content-Length: 2
Date: Mon, 26 Jul 2010 19:46:46 GMT
Connection: close

OKclosed
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;如果指定HTTP/1.1 的话
按一次回车不会显示结果 ，如果这个时候输入host：123.343.343.43之类的host信息再回车的话，可以获取结果，但是发现连接没有关闭还可以继续发送GET请求。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;GET /xxx/xxx/status HTTP/1.1
host:127.0.0.1

HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Content-Length: 2
Date: Mon, 26 Jul 2010 19:48:55 GMT

OK
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;由于没有精力去调试tomcat的源码，而且找官方文档也没发现什么信息。唉。&lt;/p&gt;

&lt;p&gt;还有tomcat在各个版本以及各个平台下的ssl的配置可能会存在各种问题
比如通过https访问的时候显示ssl_error_rx_record_too_long的错误或者显示连接被断开。
所以配置Connector 的时候，不行的话尝试添加protocol=”org.apache.coyote.http11.Http11Protocol”和SSLEnabled=”true”等参数。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2010/07/27/tomcat-upgrade/index.html</link>
            <guid>http://demi-panda.com/2010/07/27/tomcat-upgrade/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Java HashMap 核心源码解读 ]]></title>
            <pubDate>Thu, 22 Jul 2010 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;本篇对HashMap实现的源码进行简单的分析。
所使用的HashMap源码的版本信息如下：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;* @(#)HashMap.java 1.73 07/03/13&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;* Copyright 2006 Sun Microsystems, Inc. All rights reserved.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;* SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;一.概述&lt;/h3&gt;

&lt;p&gt;在Java中每一个对象都有一个哈希码，这个值可以通过hashCode()方法获得。hashCode()的值和对象的equals方法息息相关，是两个对象的值是否相等的依据，所以当我们覆盖一个类的equals方法的时候也必须覆盖hashCode方法。&lt;/p&gt;

&lt;p&gt;例如String的hashCode方法为：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hashCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;off&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;off&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++];&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;可以看得出，一个字符串的哈希值为s[0]&lt;em&gt;31&lt;sup&gt;(n-1)&lt;/sup&gt; + s[1]&lt;/em&gt;31&lt;sup&gt;(n-2)&lt;/sup&gt; + … + s[n-1]，是一个整数。也就是说所有的字符串可以通过hashCode()将其映射到整数的区间中，由于在java中整数的个数是有限的（四个字节有正负，第一位为符号位-2&lt;sup&gt;31&lt;/sup&gt; ~ 2&lt;sup&gt;31&lt;/sup&gt; -1），当s[0]&lt;em&gt;31&lt;sup&gt;(n-1)&lt;/sup&gt; + s[1]&lt;/em&gt;31&lt;sup&gt;(n-2)&lt;/sup&gt; + … + s[n-1]足够大的时候可能会溢出，导致其变成负值。从上面的情况我们可以看出两个不同的字符串可能会被映射到同一个整数，发生冲突。因此java的开发人员选择了31这个乘数因子，尽量使得各个字符串映射的结果在整个java的整数域内均匀分布。&lt;/p&gt;

&lt;p&gt;谈完java对象的哈希码，我们来看看今天的主角HashMap，HashMap可以看作是Java实现的哈希表。HashMap中存放的是key-value对，对应的类型为java.util.HashMap.Entry，所以在HashMap中数据都存放在一个Entry引用类型的数组table中。这里key是一个对象，为了把对象映射到table中的一个位置，我们可以通过求余法来，所以我们可以使用 [key的hashCode % table的长度]来计算位置（当然在实际操作的时候由于需要考虑table上的key的均匀分布可能需要对key的hashCode做一些处理）。&lt;/p&gt;

&lt;h3&gt;二.源码解析&lt;/h3&gt;

&lt;p&gt;相关属性
首先肯定是需要一个数组table，作为数据结构的骨干。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;transient&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;这边定义了一个Entry数组的引用。
继续介绍几个概念把&lt;/p&gt;

&lt;p&gt;capacity容量 是指数组table的长度 &lt;br/&gt;
loadFactor 装载因子，是实际存放量/capacity容量 的一个比值，在代码中这个属性是描述了装载因子的最大值，默认大小为0.75&lt;br/&gt;
threshold（阈值）代表hashmap存放内容数量的一个临界点，当存放量大于这个值的时候，就需要将table进行夸张，也就是新建一个两倍大的数组，并将老的元素转移过去。threshold = (int)(capacity * loadFactor);&lt;/p&gt;

&lt;p&gt;put方法详解&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;V&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;V&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;putForNullKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hashCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indexFor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;V&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oldValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;recordAccess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oldValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;modCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;addEntry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;在HashMap中我们的key可以为null，所以第一步就处理了key为null的情况。&lt;br/&gt;
当key为非null的时候，你也许会认为：恩，直接和table长度相除取模吧，但是这里没有，而是又好像做了一次哈希，这是为什么呢？这个还得先看indexFor(hash, table.length)方法，这个方法是决定存放位置的&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;    &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;indexFor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;明眼的都可以发现，因为在HashMap中table的长度为2&lt;sup&gt;n&lt;/sup&gt; (我们把运算都换成二进制进行考虑)，所以h &amp;amp; (length-1)就等价于h%length，这也就是说，如果对原本的hashCode不做变换的话，其除去低length-1位后的部分不会对key在table中的位置产生任何影响，这样只要保持低length-1位不变，不管高位如何都会冲突，所以就想办法使得高位对其结果也产生影响，于是就对hashCode又做了一次哈希&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;    &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// This function ensures that hashCodes that differ only by&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// constant multiples at each bit position have a bounded&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// number of collisions (approximately 8 at default load factor).&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;当找到key所对应的位置的时候，对对应位置的Entry的链表进行遍历，如果以及存在key的话，就更新对应的value，并返回老的value。如果是新的key的话，就将其增加进去。modCount是用来记录hashmap结构变化的次数的，这个在hashmap的fail-fast机制中需要使用（当某一个线程获取了map的游标之后，另一个线程对map做了结构修改的操作，那么原先准备遍历的线程会抛出异常）。addEntry的方法如下&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addEntry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;V&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bucketIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bucketIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bucketIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threshold&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;resize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;get方法&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;   &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;V&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getForNullKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hashCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indexFor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)];&lt;/span&gt;
             &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
             &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)))&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;get方法其实就是将key以put时相同的方法算出在table的所在位置，然后对所在位置的链表进行遍历，找到hash值和key都相等的Entry并将value返回。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2010/07/22/java-hashmap/index.html</link>
            <guid>http://demi-panda.com/2010/07/22/java-hashmap/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[谈谈 Hash Table ]]></title>
            <pubDate>Wed, 21 Jul 2010 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;h2&gt;一.数据结构&lt;/h2&gt;

&lt;p&gt;在我们编程的世界里数据的基本组织可以说有三种形式。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;结构体(或对象)&lt;/li&gt;
&lt;li&gt;数组&lt;/li&gt;
&lt;li&gt;链表&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;其他任何的数据组织形式都可以看作是这三种数据组织形式的组合变体。&lt;/p&gt;

&lt;p&gt;结构体(或对象)可以是基本数据类型或者其他结构体(或对象)的组合。结构体或对象一般用来描述一个复杂数据实体。&lt;br/&gt;
数组一般是一组同类型的变量的集合，在内存中表现为一片连续的空间，因为空间是连续的，且每一个数据单元占的内存空间的大小是相等的，所以可以根据地址的偏移对数据元素实现快速访问，但是当需要插入或者删除一个元素的时候，则需要对目标元素的之后的所有元素进行移动了。
链表的单个节点一般为结构体或者对象，因为链表的单个节点除了需要保存数据之外还需要维护它的相邻节点的关系，如果想获得链表中的某个节点的值，需要从链表的头结点开始遍历，直到找到需要的东西，而插入或者删除某个节点的话，需要找到相应的节点，修改其以及其相邻节点的相关指针的引用即可。&lt;br/&gt;
像其他的数据结构，比如 队列，栈，树，都可以通过数组或者链表来组织，并实现相应的操作功能。&lt;/p&gt;

&lt;h2&gt;二.Hash Table&lt;/h2&gt;

&lt;p&gt;这个世界上没有十全十美的东西，所以我们要学会取舍。任何技术的实现都没有最好的只要最合适的，也就说实现的最佳方案是和应用场景息息相关的。&lt;br/&gt;
很多时候，我们想对数据进行快速的存取（比如缓存的实现），并用一个key来标记自己存取的数据。我们可以把它叫做key-value的结构。&lt;br/&gt;
说到“快速”我们很快想到数组，因为数组可以在O(1)的时间复杂内完成指定位置元素的读写操作。&lt;br/&gt;
所以在理想状态，如果一个数组足够长，且存在一个函数可以将每一个key映射到唯一的一个数组下标，那么我们就可以很完美的解决问题。但往往资源都是有限的，我们没有那么大的空间，也不能设计一个无比负责的映射算法保证每一个key对应到一个唯一的数组下标。所以我们会选择一些折中的方案。&lt;/p&gt;

&lt;p&gt;hash table便是为解决这类问题而存在的。&lt;/p&gt;

&lt;h3&gt;1.哈希函数&lt;/h3&gt;

&lt;p&gt;Hash或者你可以翻译成散列或者杂凑，hash操作其本质上就是将一个数据映射成另一个数据，通常情况下原数据的长度比hash后的数据容量大。
这种映射的关系我们叫做哈希函数。&lt;/p&gt;

&lt;p&gt;一般情况下 哈希函数的输入可能的总数要远远多于哈希值所能表示的总数，所以就有可能两个不同的输入对应同一个哈希值，通常把具有不同关键码而具有相同哈希值的记录称作“同义词”。
在信息安全领域中也经常使用到哈希函数，不过需要使用的是单向哈希函数，就是无法通过哈希的结果反推出输入，所以经常应用于密码的加密，传输内容的完整性检查，在安全领域常用的哈希算法有 MD5，SHA1等。
在哈希表的应用中，哈希函数常用余数法进行，也就是通过求模的方式算出哈希值。&lt;/p&gt;

&lt;h3&gt;2.哈希表&lt;/h3&gt;

&lt;p&gt;哈希表是一种数据结构，实现key-value的快速存取。之前说过数组可以实现快速存取，所以哈希表肯定会使用到数组。在这里，我们把每一个数组的单元叫做一个bucket（桶）。&lt;/p&gt;

&lt;p&gt;构造哈希函数
这里哈希函数的作用就是将key映射到一个存储地址。所以构造一个哈希表我们得先构造哈希函数。
如果一个key哈希后对应地址中已经存放了值了，这种情况我们叫做哈希冲突（Hash collisions）。
如果存在一个哈希函数，使得每一个输入都能对应到唯一的一个存储单元中（没有冲突），那么这样的哈希函数我们可以叫它完美哈希函数（Perfect Hash Function，简称PHF)。
但为了哈希函数简单，运行速度快，往往不会使用完美哈希函数。所以冲突肯定会存在的，为了减少冲突，我们希望哈希函数的结果均匀的分布在地址单元的空间中。这样可以有效的减少冲突。&lt;/p&gt;

&lt;p&gt;装填因子Load factor a=哈希表的实际元素数目(n)/ 哈希表的容量(m) a越大，哈希表冲突的概率越大，但是a越接近0，那么哈希表的空间就越浪费。
一般情况下建议Load factor的值为0-0.7，Java实现的HashMap默认的Load factor的值为0.75，当装载因子大于这个值的时候，HashMap会对数组进行扩张至原来两倍大。&lt;/p&gt;

&lt;p&gt;冲突解决
既然冲突不可避免，那么我们就必须对冲突进行解决(总不能把之前的内容覆盖掉把),
解决冲突的方式主要分两类
开放定址法(Open addressing)这种方法就是在计算一个key的哈希的时候，发现目标地址已经有值了，即发生冲突了，这个时候通过相应的函数在此地址后面的地址去找，直到没有冲突为止。这个方法常用的有线性探测，二次探测，再哈希。
这种解决方法有个不好的地方就是，当发生冲突之后，会在之后的地址空间中找一个放进去，这样就有可能后来出现一个key哈希出来的结果也正好是它放进去的这个地址空间，这样就会出现非同义词的两个key发生冲突。&lt;/p&gt;

&lt;p&gt;链接法(Separate chaining)链接法是通过数组和链表组合而成的。当发生冲突的时候只要将其加到对应的链表中即可。&lt;/p&gt;

&lt;p&gt;与开放定址法相比，链接法有如下几个优点：&lt;/p&gt;

&lt;p&gt;①链接法处理冲突简单，且无堆积现象，即非同义词决不会发生冲突，因此平均查找长度较短；&lt;br/&gt;
②由于链接法中各链表上的结点空间是动态申请的，故它更适合于造表前无法确定表长的情况；&lt;br/&gt;
③开放定址法为减少冲突，要求装填因子α较小，故当结点规模较大时会浪费很多空间。而链接法中可取α≥1，且结点较大时，拉链法中增加的指针域可忽略不计，因此节省空间；&lt;br/&gt;
④在用链接法构造的散列表中，删除结点的操作易于实现。只要简单地删去链表上相应的结点即可。而对开放地址法构造的散列表，删除结点不能简单地将被删结点的空间置为空，否则将截断在它之后填人散列表的同义词结点的查找路径。这是因为各种开放地址法中，空地址单元(即开放地址)都是查找失败的条件。因此在 用开放地址法处理冲突的散列表上执行删除操作，只能在被删结点上做删除标记，而不能真正删除结点。&lt;/p&gt;

&lt;p&gt;当然链接法也有其缺点，拉链法的缺点是：指针需要额外的空间，故当结点规模较小时，开放定址法较为节省空间，而若将节省的指针空间用来扩大散列表的规模，可使装填因子变小，这又减少了开放定址法中的冲突，从而提高平均查找速度。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2010/07/21/hash-table/index.html</link>
            <guid>http://demi-panda.com/2010/07/21/hash-table/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Why Asynchronous Web ]]></title>
            <pubDate>Sat, 10 Jul 2010 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;这两天在继续了解web应用中的异步处理问题。
然后看到了淘宝文初的博客http://blog.csdn.net/cenwenchu79
，他在几篇文章中多次提及jetty的continuation和servlet3的异步处理特性。看了之后收获不少。&lt;/p&gt;

&lt;h4&gt;异步处理的层次&lt;/h4&gt;

&lt;p&gt;异步处理在Web应用中可以分三个层次:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Socket数据传输的异步化，NIO&lt;/li&gt;
&lt;li&gt;HTTP请求的异步化（Jetty Continuation，Servlet 3）&lt;/li&gt;
&lt;li&gt;后台服务的异步化&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;异步处理的原因&lt;/h4&gt;

&lt;p&gt;我们肯定会思考，为何需要异步化呢？&lt;/p&gt;

&lt;p&gt;当访问的并发量很大的时候，如果Socket数据传输如果不做异步化处理，那么每一个socket连接都需要一个单独的线程来处理socket io，这样无疑会花费很多的系统资源，而且程序员需要考虑避免死锁,线程安全等问题。当java引入nio后，就有了异步的socket处理方式，将和socket关联的socketchannel注册到一个selector中，然后调用selector的select方法，当某一个socket有数据可读的时候，就会自动的反应到selector检测的结果中，这样便可以异步的进行处理。
当每一个请求的处理时间较长，http请求不做异步化的话，就会长期占用线程池中的线程（没有线程池或者线程池的最大线程数设置的过大的话，会产生内存消耗过大的问题），那么新的http请求将无法得到及时的响应，大部分的thread都进入阻塞状态。当引入jetty的continuation或者servlet3的Asynchronous ,可以将当前请求先暂停，让出处理线程，当原来的请求可以响应的时候，在答复原来的请求（continuation是将request重复提交一次）。
当后台业务处理组件资源紧张的时候，如果不做异步话就会出现资源争抢的情况，就会存在锁问题，性能降低，很多线程会处理阻塞状态。一个系统模块的服务的问题可能会导致整个系统的性能问题。
所以使用异步方式的根本原因就是：&lt;/p&gt;

&lt;p&gt;计算机的cpu或者内存等资源都是有限的，我们要控制系统线程数量，并且使得系统的整体性能不会因为某些阻塞时间较长的线程而急剧下降。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2010/07/10/asynchronous-web/index.html</link>
            <guid>http://demi-panda.com/2010/07/10/asynchronous-web/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Git原理浅析 ]]></title>
            <pubDate>Sat, 05 Jun 2010 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;git的底层从其本质上讲是一个内容寻址文件系统,然后基于这个内容寻址文件系统实现了一套vcs(版本控制系统)的高层接口,方便我们使用.当然git也提供了底层接口,便于我们使用之做出符合自己需求的系统.&lt;/p&gt;

&lt;p&gt;我们把文件内容交给git进行管理,总得有一个地方来存放这些内容是吧!
是的,在git中,所有的文件内容都保存在git仓库的objects目录中.&lt;/p&gt;

&lt;h4&gt;初始化git库&lt;/h4&gt;

&lt;p&gt;我们初始化一个git仓库有两种方式,git init和git –bare init
这两者的区别是,前者会在当前目录下生成一个.git目录(此目录即为git库的目录),而当前目录为我们的工作目录,一般是checkout后的文件,我们编程时所读写的内容都在此目录下.
后者的bare的意思就是裸的意思,也就是直接把当前目录当作git库的目录,这个一般用在远程git库上,因为我们在远程git库上没有checkout的需求,只是用作单纯的git库
git库还有个优点就是直接拷贝到另一个地方就可以直接用了,只要你的相应的机器上安装了git即可.&lt;/p&gt;

&lt;h4&gt;git对象&lt;/h4&gt;

&lt;p&gt;git中一个非常重要的概念就是git对象,我们可以把git系统想象成一个强大的key-value存储,每一个对象都对应着一个40位的哈希值.通过这个哈希值我们便可以很容易的取得对象(当然我们可以为这些哈希值取一些有意义的别名,方便我们使用).我们可以把这个哈希值看作指针.而对应的对象就是指针所指向的实体.对象和对象之间还可以通过通过指针进行一些关联的操作.
git对象可分为四种类型:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;blob对象 用来存放文件数据&lt;/li&gt;
&lt;li&gt;tree对象 对应着目录,tree的内容为blob对象的指针或者其他tree对象的指针&lt;/li&gt;
&lt;li&gt;commit对象 每一次commit都会产生一个新的commit对象,其包含了一个指向tree对象的指针,指向前一次commit对象的指针,还包含了commit的时间,作者和注释等信息,就相当于为项目做了一次snapshot,通过commit对象我们可以跟踪到前一次commit对象,这样就可以实现log功能了&lt;/li&gt;
&lt;li&gt;tag对象 一种特殊的commit对象&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;git库目录
接下来分析git库目录中各个文件的作用&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;Lukes-MacBook:test.git Luke&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ls -al
total 32
drwxr-xr-x  11 Luke  staff   374 Jun  4 20:21 .
drwxr-xr-x  24 Luke  staff   816 Jun  4 20:21 ..
-rw-r--r--   1 Luke  staff    23 Jun  4 20:21 HEAD &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;当前分支的指针&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
drwxr-xr-x   2 Luke  staff    68 Jun  4 20:21 branches
-rw-r--r--   1 Luke  staff    85 Jun  4 20:21 config
-rw-r--r--   1 Luke  staff    73 Jun  4 20:21 description
drwxr-xr-x  12 Luke  staff   408 Jun  4 20:21 hooks &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;可以实现在特定操作的前或者后触发一些动作&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
drwxr-xr-x   3 Luke  staff   102 Jun  4 20:21 info
drwxr-xr-x  64 Luke  staff  2176 Jun  4 20:21 objects &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;blob,tree,commit,tag 对象&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
-rw-r--r--   1 Luke  staff    85 Jun  4 20:21 packed-refs
drwxr-xr-x   4 Luke  staff   136 Jun  4 20:21 refs &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;指向各个分支的指针&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;objects保存的时候,以40位哈希值的前两位作为子目录的名称,后38位作为对象的文件名
git系统会定期对所有的objects进行打包操作,这样可以减少磁盘占用空间
git中最新版本的都是直接保存的,以前版本是通过引用最新的文件以及差异进行获取的,这是因为大都数时候我们对最新的分支代码更为关注&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2010/06/05/git-internals/index.html</link>
            <guid>http://demi-panda.com/2010/06/05/git-internals/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[JAVA开发者最常去的经典网站 ]]></title>
            <pubDate>Thu, 01 Apr 2010 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;1.&lt;a href=&quot;http://www.javaalmanac.com&quot;&gt;http://www.javaalmanac.com&lt;/a&gt; – Java开发者年鉴一书的在线版本. 要想快速查到某种Java技巧的用法及示例代码, 这是一个不错的去处.&lt;/p&gt;

&lt;p&gt;2.&lt;a href=&quot;http://www.onjava.com&quot;&gt;http://www.onjava.com&lt;/a&gt; – O’Reilly的Java网站. 每周都有新文章.&lt;/p&gt;

&lt;p&gt;3.&lt;a href=&quot;http://java.sun.com&quot;&gt;http://java.sun.com&lt;/a&gt; – 官方的Java开发者网站 – 每周都有新文章发表.&lt;/p&gt;

&lt;p&gt;4.&lt;a href=&quot;http://www.developer.com/java&quot;&gt;http://www.developer.com/java&lt;/a&gt; – 由Gamelan.com 维护的Java技术文章网站.&lt;/p&gt;

&lt;p&gt;5.&lt;a href=&quot;http://www.java.net&quot;&gt;http://www.java.net&lt;/a&gt; – Sun公司维护的一个Java社区网站.&lt;/p&gt;

&lt;p&gt;6.&lt;a href=&quot;http://www.builder.com&quot;&gt;http://www.builder.com&lt;/a&gt; – Cnet的Builder.com网站 – 所有的技术文章, 以Java为主.&lt;/p&gt;

&lt;p&gt;7.&lt;a href=&quot;http://www.ibm.com/developerworks/java&quot;&gt;http://www.ibm.com/developerworks/java&lt;/a&gt; – IBM的Developerworks技术网站; 这是其中的Java技术主页.&lt;/p&gt;

&lt;p&gt;8.&lt;a href=&quot;http://www.javaworld.com&quot;&gt;http://www.javaworld.com&lt;/a&gt; – 最早的一个Java站点. 每周更新Java技术文章.&lt;/p&gt;

&lt;p&gt;9.&lt;a href=&quot;http://www.devx.com/java&quot;&gt;http://www.devx.com/java&lt;/a&gt; – DevX维护的一个Java技术文章网站.&lt;/p&gt;

&lt;p&gt;10.&lt;a href=&quot;http://www.sys-con.com/java&quot;&gt;http://www.sys-con.com/java&lt;/a&gt; – Java Developers Journal的在线杂志网站.&lt;/p&gt;

&lt;p&gt;11.&lt;a href=&quot;http://www.javadesktop.org&quot;&gt;http://www.javadesktop.org&lt;/a&gt; – 位于Java.net的一个Java桌面技术社区网站.&lt;/p&gt;

&lt;p&gt;12.&lt;a href=&quot;http://www.theserverside.com&quot;&gt;http://www.theserverside.com&lt;/a&gt; – 这是一个讨论所有Java服务器端技术的网站.&lt;/p&gt;

&lt;p&gt;13.&lt;a href=&quot;http://www.jars.com&quot;&gt;http://www.jars.com&lt;/a&gt; – 提供Java评论服务. 包括各种framework和应用程序.&lt;/p&gt;

&lt;p&gt;14.&lt;a href=&quot;http://www.jguru.com&quot;&gt;http://www.jguru.com&lt;/a&gt; – 一个非常棒的采用Q&amp;amp;A形式的Java技术资源社区.&lt;/p&gt;

&lt;p&gt;15.&lt;a href=&quot;http://www.javaranch.com&quot;&gt;http://www.javaranch.com&lt;/a&gt; – 一个论坛，得到Java问题答案的地方，初学者的好去处。&lt;/p&gt;

&lt;p&gt;16.&lt;a href=&quot;http://www.ibiblio.org/javafaq/javafaq.html&quot;&gt;http://www.ibiblio.org/javafaq/javafaq.html&lt;/a&gt; – comp.lang.java的FAQ站点 – 收集了来自comp.lang.java新闻组的问题和答案的分类目录.&lt;/p&gt;

&lt;p&gt;17.&lt;a href=&quot;http://java.sun.com/docs/books/tutorial&quot;&gt;http://java.sun.com/docs/books/tutorial/&lt;/a&gt; – 来自SUN公司的官方Java指南 – 对于了解几乎所有的java技术特性非常有帮助.&lt;/p&gt;

&lt;p&gt;18.&lt;a href=&quot;http://www.javablogs.com&quot;&gt;http://www.javablogs.com&lt;/a&gt; – 互联网上最活跃的一个Java Blog网站.&lt;/p&gt;

&lt;p&gt;29.&lt;a href=&quot;http://java.about.com/&quot;&gt;http://java.about.com/&lt;/a&gt; – 来自About.com的Java新闻和技术文章网站.&lt;/p&gt;

&lt;p&gt;20.&lt;a href=&quot;http://ajava.org/&quot;&gt;http://ajava.org/&lt;/a&gt; - AJava-独立Java社区&lt;/p&gt;

&lt;p&gt;21.&lt;a href=&quot;http://www.open-open.com/index.htm&quot;&gt;http://www.open-open.com/index.htm&lt;/a&gt; - JAVA开源技术整合列表 值得收藏&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2010/04/01/java-site/index.html</link>
            <guid>http://demi-panda.com/2010/04/01/java-site/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[ASCII和中文互转 ]]></title>
            <pubDate>Thu, 11 Mar 2010 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;我们在开发使时常会用到资源文件，这可能是为了多语言、国际化的需要，也可能是使用了国外开源项目的原因，这就需要中文转ascii将中文转换为 ASCII 编码，或者将 ASCII 转换为中文，那么我们就可以使用 JDK 自带的转换工具 native2ascii 。&lt;/p&gt;

&lt;h3&gt;中文转换为 ASCII 编码&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ echo parameter.project.title=这是中文 &gt; chinese.txt
$ native2ascii -encoding UTF-8 chinese.txt ascii.txt
$ cat ascii.txt
$ parameter.project.title=\u8fd9\u662f\u4e2d\u6587
&lt;/pre&gt;


&lt;h3&gt;ASCII 编码转换为中文&lt;/h3&gt;

&lt;pre id=&quot;bash&quot;&gt;
$ echo &quot;&quot; &gt; chinese.txt #清空chinese.txt内容
$ native2ascii -reverse -encoding UTF8 ascii.txt chinese.txt
$ cat chinese.txt
$ parameter.project.title=这是中文 
&lt;/pre&gt;



 ]]></description>
            <link>http://demi-panda.com/2010/03/11/java-ascii/index.html</link>
            <guid>http://demi-panda.com/2010/03/11/java-ascii/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[关于Form的GET和POST ]]></title>
            <pubDate>Wed, 09 Sep 2009 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;关于Form的get和post提交的方法,大家应该都知道是什么概念,
get的本意是为了从服务器端获取数据,post是为了向服务器端发送数据.&lt;/p&gt;

&lt;p&gt;而我比较疑惑的是,form的action地址后面带的参数是不是在get的时候是无效的呢?
也就说:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/helloform/hello?age=22&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;get&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;当提交表单之后,服务器端是无法获取age=22这个值的.&lt;/p&gt;

&lt;p&gt;带着这样的疑问,我通过Maven构建了一个非常简单的例子,这个例子只涉及一个Servlet类和一个jsp文件.&lt;/p&gt;

&lt;p&gt;经过实践最后得出了结论&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;form默认的提交方式是get,所以很多时候需要我们自己指定method为post&lt;/li&gt;
&lt;li&gt;使用get的时候,action=后面自己写的参数是无法带到服务器端的,且get方式提交form的时候,是将form中的键值以参数的方式拼到url后面的.&lt;/li&gt;
&lt;li&gt;post方式提交的表单是可以获取action后面自己写的参数的.&lt;/li&gt;
&lt;li&gt;如果表单中存在同名的项,我们可以通过request.getParameterValues(“XXX”)的方式获得一个名称为XXX的值的数组.&lt;/li&gt;
&lt;/ul&gt;

 ]]></description>
            <link>http://demi-panda.com/2009/09/09/about-form-get-post/index.html</link>
            <guid>http://demi-panda.com/2009/09/09/about-form-get-post/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[初试Python ]]></title>
            <pubDate>Mon, 27 Apr 2009 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;上周末一个同事姐姐，说他每周都要整理一封excel表格，去掉其中的空行并把某一列的内容拆分成两列，然后做统计。
其实这个需求本可以做成一个系统的，她也向上提了需求，可由于资源问题，一直没有做。
当然如果每次人肉做的话，得花几个钟头，因为数据量是有点大的。
数据的格式基本如下&lt;/p&gt;

&lt;p&gt;2009-4-23 23:16,xxxxx ,116.10.174.655 (地区)
代表的分别是时间，用户名，IP地址地区
所要作的就是将地区单独出去，然后根据地区来统计
2009-4-23 23:16,xxxxx ,116.10.174.655 ，地区&lt;/p&gt;

&lt;p&gt;所以就用python写了下面的几行代码&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;fr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;./data.csv&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;./ok.csv&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readlines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;(&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;文件名都是写死的，转换好了之后再保存为xls的就可以了，非常的快。&lt;/p&gt;
 ]]></description>
            <link>http://demi-panda.com/2009/04/27/a-python-program/index.html</link>
            <guid>http://demi-panda.com/2009/04/27/a-python-program/index.html</guid>
            <author></author>
        </item>

        
        <item>
            <title><![CDATA[Java自定义Annotation ]]></title>
            <pubDate>Tue, 23 Sep 2008 00:00:00 +0800</pubDate>
            <description><![CDATA[&lt;p&gt;Annotation注解（也称Meta Data元数据）为我们在代码中添加信息提供一个形式化的方法，是我们在后面的某个时刻方便的使用这些数据。&lt;br/&gt;
JavaSE5中自带了一些Annotation，可以分为两类，&lt;br/&gt;
标准注解，目前Java自带的有三个@Override,@Deprecated,@Suppress   Warning&lt;br/&gt;
元注解&lt;br/&gt;
元注解是用来注解其他Annotation的，用的比较多的有两个&lt;br/&gt;
@Target 表示该注解可以用于什么地方。其取值的类型为java.lang.  annotation.ElementType枚举类型&lt;br/&gt;
@Retention 表示需要在什么级别保存该注解,取值为RetentionPolicy枚举类型&lt;/p&gt;

&lt;p&gt;整个Annotation的使用过程可以分成三块，Annotation的定义，Annotation的使用，和Annotation的处理器。&lt;/p&gt;

&lt;h3&gt;1.首先我们可以看一下如何定义一个Annotation&lt;/h3&gt;

&lt;pre id=&quot;java&quot;&gt;
package com.luke.hello;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

//用于域的声明
@Target(ElementType.FIELD)
//VM在运行期间也会保存annotation的信息，所以可以使用反射机制来读取之
@Retention(RetentionPolicy.RUNTIME)
public @interface Hello {
public String echo() default(&quot;Hello,I am a field!&quot;);
}
&lt;/pre&gt;


&lt;h3&gt;2.我们将这个刚刚定义的Annotation拿来使用&lt;/h3&gt;

&lt;pre id=&quot;java&quot;&gt;
package com.luke.test;
import com.luke.hello.Hello;
public class Book {
@Hello(echo=&quot;Hello,I am the name of the book!&quot;)
public String name;
}
&lt;/pre&gt;


&lt;h3&gt;3.写一个处理器类来对Annotatin进行处理，这里要使用到Java的反射机制了呢&lt;/h3&gt;

&lt;pre id=&quot;java&quot;&gt;
package com.luke;

import java.lang.reflect.Field;
import com.luke.hello.Hello;
import com.luke.test.Book;

public class BookFileldTracker {
public static void trackBook(Class&lt;?&gt; cl){
for(Field f:cl.getDeclaredFields()){
Hello h = f.getAnnotation(Hello.class);
if(h!=null)
{
System.out.println(h.echo());
}
}
}
public static void main(String[] args){
trackBook(Book.class);
}
}
&lt;/pre&gt;

 ]]></description>
            <link>http://demi-panda.com/2008/09/23/java-annotation/index.html</link>
            <guid>http://demi-panda.com/2008/09/23/java-annotation/index.html</guid>
            <author></author>
        </item>

        
    </channel>
</rss>
